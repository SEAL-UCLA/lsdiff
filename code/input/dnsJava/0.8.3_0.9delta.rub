#include "deltaKB_lsdPred.rub"
// Orig. Deleted	651
// Orig. Added	889
// Red. Deleted	506
// Red. Added	744
//Class Renaming
//[DNS%.MyStringTokenizer->DNS.utils%.MyStringTokenizer]
//[DNS%.Cache$CacheElement->DNS%.Cache$Element]

//Method Renaming
//[DNS:MyStringTokenizer-nextElement__[]->Object->DNS.utils:MyStringTokenizer-nextElement__[]->Object]
//[DNS:Cache$CacheElement-CacheElement__[Record, byte, int]->void->DNS:Cache$Element-Element__[Record, byte, int]->void]
//[DNS:MyStringTokenizer-hasMoreDelimiters__[]->boolean->DNS.utils:MyStringTokenizer-hasMoreDelimiters__[]->boolean]
//[DNS:MyStringTokenizer-nextToken__[]->String->DNS.utils:MyStringTokenizer-nextToken__[]->String]
//[DNS:MyStringTokenizer-hasMoreElements__[]->boolean->DNS.utils:MyStringTokenizer-hasMoreElements__[]->boolean]
//[DNS:NameSet-findSet__[Name, short, short]->Object->DNS:NameSet-findSets__[Name, short, short]->Object[]]
//[DNS:MyStringTokenizer-hasMoreTokens__[]->boolean->DNS.utils:MyStringTokenizer-hasMoreTokens__[]->boolean]
//[DNS:Cache$CacheElement-CacheElement__[int, byte, int]->void->DNS:Cache$Element-Element__[int, byte, int]->void]
//[DNS:Message-addRecord__[int, Record]->void->DNS:Message-addRecord__[Record, int]->void]
//[DNS:Message-findRecord__[int, Record]->boolean->DNS:Message-findRecord__[Record, int]->boolean]
//[DNS:MyStringTokenizer-MyStringTokenizer__[String, String]->void->DNS.utils:MyStringTokenizer-MyStringTokenizer__[String, String]->void]
//[DNS:Cache$CacheElement-expiredTTL__[]->boolean->DNS:Cache$Element-expiredTTL__[]->boolean]
//[DNS:MyStringTokenizer-MyStringTokenizer__[String]->void->DNS.utils:MyStringTokenizer-MyStringTokenizer__[String]->void]
//[DNS:Cache$CacheElement-update__[Record]->void->DNS:Cache$Element-update__[Record]->void]
//[DNS:Record-rrToWireCanonical__[]->byte[]->DNS:Record-rrToWireCanonical__[DataByteOutputStream]->void]
//[DNS:Cache$CacheElement-toString__[]->String->DNS:Cache$Element-toString__[]->String]
//[DNS:MyStringTokenizer-MyStringTokenizer__[String, String, boolean]->void->DNS.utils:MyStringTokenizer-MyStringTokenizer__[String, String, boolean]->void]
//[DNS:MyStringTokenizer-main__[String]->void->DNS.utils:MyStringTokenizer-main__[String]->void]
//[DNS:Message-removeRecord__[int, Record]->boolean->DNS:Message-removeRecord__[Record, int]->boolean]
//[DNS:MyStringTokenizer-isDelim__[int]->boolean->DNS.utils:MyStringTokenizer-isDelim__[int]->boolean]
//[DNS:Zone-addRR__[Record]->void->DNS:Zone-addRecord__[Record]->void]
//[DNS:MyStringTokenizer-putBackToken__[String]->void->DNS.utils:MyStringTokenizer-putBackToken__[String]->void]
//[DNS:Cache$CacheElement-CacheElement__[RRset, byte, int]->void->DNS:Cache$Element-Element__[RRset, byte, int]->void]

deleted_accesses("%.update#defaultClass","%.update#doAdd(DNS%.MyStringTokenizer)").
deleted_accesses("%.update#defaultClass","%.update#doGlue(DNS%.MyStringTokenizer)").
deleted_accesses("%.update#defaultClass","%.update#doProhibit(DNS%.MyStringTokenizer)").
deleted_accesses("%.update#defaultClass","%.update#doQuery(DNS%.MyStringTokenizer)").
deleted_accesses("%.update#defaultClass","%.update#doRequire(DNS%.MyStringTokenizer)").
deleted_accesses("%.update#defaultTTL","%.update#doAdd(DNS%.MyStringTokenizer)").
deleted_accesses("%.update#defaultTTL","%.update#doGlue(DNS%.MyStringTokenizer)").
deleted_accesses("%.update#log","%.update#doLog(DNS%.MyStringTokenizer)").
deleted_accesses("%.update#origin","%.update#parseName(DNS%.MyStringTokenizer,short)").
deleted_accesses("%.update#origin","%.update#parseRR(DNS%.MyStringTokenizer,short,int)").
deleted_accesses("%.update#origin","%.update#parseSet(DNS%.MyStringTokenizer,short)").
deleted_accesses("%.update#query","%.update#doAdd(DNS%.MyStringTokenizer)").
deleted_accesses("%.update#query","%.update#doDelete(DNS%.MyStringTokenizer)").
deleted_accesses("%.update#query","%.update#doGlue(DNS%.MyStringTokenizer)").
deleted_accesses("%.update#query","%.update#doProhibit(DNS%.MyStringTokenizer)").
deleted_accesses("%.update#query","%.update#doRequire(DNS%.MyStringTokenizer)").
deleted_accesses("%.update#res","%.update#doQuery(DNS%.MyStringTokenizer)").
deleted_accesses("%.update#response","%.update#doAssert(DNS%.MyStringTokenizer)").
deleted_accesses("%.update#response","%.update#doQuery(DNS%.MyStringTokenizer)").
deleted_accesses("%.update#server","%.update#doQuery(DNS%.MyStringTokenizer)").
deleted_accesses("DNS%.ARecord#address","DNS%.ARecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)").
deleted_accesses("DNS%.CERTRecord#alg","DNS%.CERTRecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)").
deleted_accesses("DNS%.CERTRecord#cert","DNS%.CERTRecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)").
deleted_accesses("DNS%.CERTRecord#certType","DNS%.CERTRecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)").
deleted_accesses("DNS%.CERTRecord#keyTag","DNS%.CERTRecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)").
deleted_accesses("DNS%.Cache#CacheElement#credibility","DNS%.Cache#CacheElement#<init>(DNS%.RRset,byte,int)").
deleted_accesses("DNS%.Cache#CacheElement#credibility","DNS%.Cache#CacheElement#<init>(DNS%.Record,byte,int)").
deleted_accesses("DNS%.Cache#CacheElement#credibility","DNS%.Cache#CacheElement#<init>(int,byte,int)").
deleted_accesses("DNS%.Cache#CacheElement#credibility","DNS%.Cache#CacheElement#toString()").
deleted_accesses("DNS%.Cache#CacheElement#credibility","DNS%.Cache#addNegative(DNS%.Name,short,short,int,byte,java.lang%.Object)").
deleted_accesses("DNS%.Cache#CacheElement#credibility","DNS%.Cache#addRRset(DNS%.RRset,byte,java.lang%.Object)").
deleted_accesses("DNS%.Cache#CacheElement#credibility","DNS%.Cache#addRecord(DNS%.Record,byte,java.lang%.Object)").
deleted_accesses("DNS%.Cache#CacheElement#credibility","DNS%.Cache#lookupRecords(DNS%.Name,short,short,byte)").
deleted_accesses("DNS%.Cache#CacheElement#rrset","DNS%.Cache#CacheElement#<init>(DNS%.RRset,byte,int)").
deleted_accesses("DNS%.Cache#CacheElement#rrset","DNS%.Cache#CacheElement#<init>(DNS%.Record,byte,int)").
deleted_accesses("DNS%.Cache#CacheElement#rrset","DNS%.Cache#CacheElement#<init>(int,byte,int)").
deleted_accesses("DNS%.Cache#CacheElement#rrset","DNS%.Cache#CacheElement#toString()").
deleted_accesses("DNS%.Cache#CacheElement#rrset","DNS%.Cache#CacheElement#update(DNS%.Record)").
deleted_accesses("DNS%.Cache#CacheElement#rrset","DNS%.Cache#addRecord(DNS%.Record,byte,java.lang%.Object)").
deleted_accesses("DNS%.Cache#CacheElement#rrset","DNS%.Cache#lookupRecords(DNS%.Name,short,short,byte)").
deleted_accesses("DNS%.Cache#CacheElement#srcid","DNS%.Cache#CacheElement#<init>(DNS%.RRset,byte,int)").
deleted_accesses("DNS%.Cache#CacheElement#srcid","DNS%.Cache#CacheElement#<init>(DNS%.Record,byte,int)").
deleted_accesses("DNS%.Cache#CacheElement#srcid","DNS%.Cache#CacheElement#<init>(int,byte,int)").
deleted_accesses("DNS%.Cache#CacheElement#srcid","DNS%.Cache#addRecord(DNS%.Record,byte,java.lang%.Object)").
deleted_accesses("DNS%.Cache#CacheElement#timeIn","DNS%.Cache#CacheElement#<init>(DNS%.RRset,byte,int)").
deleted_accesses("DNS%.Cache#CacheElement#timeIn","DNS%.Cache#CacheElement#<init>(int,byte,int)").
deleted_accesses("DNS%.Cache#CacheElement#timeIn","DNS%.Cache#CacheElement#expiredTTL()").
deleted_accesses("DNS%.Cache#CacheElement#timeIn","DNS%.Cache#CacheElement#update(DNS%.Record)").
deleted_accesses("DNS%.Cache#CacheElement#ttl","DNS%.Cache#CacheElement#<init>(DNS%.RRset,byte,int)").
deleted_accesses("DNS%.Cache#CacheElement#ttl","DNS%.Cache#CacheElement#<init>(DNS%.Record,byte,int)").
deleted_accesses("DNS%.Cache#CacheElement#ttl","DNS%.Cache#CacheElement#<init>(int,byte,int)").
deleted_accesses("DNS%.Cache#CacheElement#ttl","DNS%.Cache#CacheElement#expiredTTL()").
deleted_accesses("DNS%.Cache#CacheElement#ttl","DNS%.Cache#CacheElement#update(DNS%.Record)").
deleted_accesses("DNS%.CacheResponse#SUCCESSFUL","DNS%.CacheResponse#answer()").
deleted_accesses("DNS%.CacheResponse#data","DNS%.CacheResponse#answer()").
deleted_accesses("DNS%.CacheResponse#type","DNS%.CacheResponse#answer()").
deleted_accesses("DNS%.DClass#ANY","%.update#doDelete(DNS%.MyStringTokenizer)").
deleted_accesses("DNS%.DClass#ANY","%.update#doRequire(DNS%.MyStringTokenizer)").
deleted_accesses("DNS%.DClass#IN","DNS%.Master#parseRR(DNS%.MyStringTokenizer,boolean,DNS%.Record,DNS%.Name)").
deleted_accesses("DNS%.DClass#NONE","%.update#doDelete(DNS%.MyStringTokenizer)").
deleted_accesses("DNS%.DClass#NONE","%.update#doProhibit(DNS%.MyStringTokenizer)").
deleted_accesses("DNS%.HINFORecord#cpu","DNS%.HINFORecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)").
deleted_accesses("DNS%.HINFORecord#os","DNS%.HINFORecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)").
deleted_accesses("DNS%.Header#flags","DNS%.Header#setFlags(boolean[])").
deleted_accesses("DNS%.KEYRecord#alg","DNS%.KEYRecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)").
deleted_accesses("DNS%.KEYRecord#flags","DNS%.KEYRecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)").
deleted_accesses("DNS%.KEYRecord#key","DNS%.KEYRecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)").
deleted_accesses("DNS%.KEYRecord#proto","DNS%.KEYRecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)").
deleted_accesses("DNS%.MXRecord#priority","DNS%.MXRecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)").
deleted_accesses("DNS%.MXRecord#target","DNS%.MXRecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)").
deleted_accesses("DNS%.NS_CNAME_PTRRecord#target","DNS%.NS_CNAME_PTRRecord#<init>(DNS%.Name,short,short,int,DNS%.MyStringTokenizer,DNS%.Name)").
deleted_accesses("DNS%.NXTRecord#bitmap","DNS%.NXTRecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)").
deleted_accesses("DNS%.NXTRecord#next","DNS%.NXTRecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)").
deleted_accesses("DNS%.Name#root","DNS%.FindServer#searchPath()").
deleted_accesses("DNS%.Rcode#NOERROR","DNS%.dns#getRecords(java.lang%.String,short,short,byte)").
deleted_accesses("DNS%.Rcode#NXDOMAIN","DNS%.dns#getRecords(java.lang%.String,short,short,byte)").
deleted_accesses("DNS%.Record#name","DNS%.SIGRecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)").
deleted_accesses("DNS%.Record#type","DNS%.UNKRecord#<init>(DNS%.Name,short,short,int,DNS%.MyStringTokenizer,DNS%.Name)").
deleted_accesses("DNS%.SIGRecord#alg","DNS%.SIGRecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)").
deleted_accesses("DNS%.SIGRecord#covered","DNS%.SIGRecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)").
deleted_accesses("DNS%.SIGRecord#expire","DNS%.SIGRecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)").
deleted_accesses("DNS%.SIGRecord#footprint","DNS%.SIGRecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)").
deleted_accesses("DNS%.SIGRecord#labels","DNS%.SIGRecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)").
deleted_accesses("DNS%.SIGRecord#origttl","DNS%.SIGRecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)").
deleted_accesses("DNS%.SIGRecord#signature","DNS%.SIGRecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)").
deleted_accesses("DNS%.SIGRecord#signer","DNS%.SIGRecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)").
deleted_accesses("DNS%.SIGRecord#timeSigned","DNS%.SIGRecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)").
deleted_accesses("DNS%.SOARecord#admin","DNS%.SOARecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)").
deleted_accesses("DNS%.SOARecord#expire","DNS%.SOARecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)").
deleted_accesses("DNS%.SOARecord#host","DNS%.SOARecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)").
deleted_accesses("DNS%.SOARecord#minimum","DNS%.SOARecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)").
deleted_accesses("DNS%.SOARecord#refresh","DNS%.SOARecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)").
deleted_accesses("DNS%.SOARecord#retry","DNS%.SOARecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)").
deleted_accesses("DNS%.SOARecord#serial","DNS%.SOARecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)").
deleted_accesses("DNS%.SRVRecord#port","DNS%.SRVRecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)").
deleted_accesses("DNS%.SRVRecord#priority","DNS%.SRVRecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)").
deleted_accesses("DNS%.SRVRecord#target","DNS%.SRVRecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)").
deleted_accesses("DNS%.SRVRecord#weight","DNS%.SRVRecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)").
deleted_accesses("DNS%.Section#ADDITIONAL","%.update#doGlue(DNS%.MyStringTokenizer)").
deleted_accesses("DNS%.Section#ANSWER","DNS%.dns#getRecords(java.lang%.String,short,short,byte)").
deleted_accesses("DNS%.Section#PREREQ","%.update#doProhibit(DNS%.MyStringTokenizer)").
deleted_accesses("DNS%.Section#PREREQ","%.update#doRequire(DNS%.MyStringTokenizer)").
deleted_accesses("DNS%.Section#UPDATE","%.update#doAdd(DNS%.MyStringTokenizer)").
deleted_accesses("DNS%.Section#UPDATE","%.update#doDelete(DNS%.MyStringTokenizer)").
deleted_accesses("DNS%.TXTRecord#strings","DNS%.TXTRecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)").
deleted_accesses("DNS%.Type#A","DNS%.ARecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)").
deleted_accesses("DNS%.Type#ANY","%.update#parseName(DNS%.MyStringTokenizer,short)").
deleted_accesses("DNS%.Type#AXFR","%.update#doQuery(DNS%.MyStringTokenizer)").
deleted_accesses("DNS%.Type#CERT","DNS%.CERTRecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)").
deleted_accesses("DNS%.Type#CNAME","DNS%.CNAMERecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)").
deleted_accesses("DNS%.Type#HINFO","DNS%.HINFORecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)").
deleted_accesses("DNS%.Type#KEY","DNS%.KEYRecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)").
deleted_accesses("DNS%.Type#MX","DNS%.MXRecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)").
deleted_accesses("DNS%.Type#NS","DNS%.NSRecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)").
deleted_accesses("DNS%.Type#NXT","DNS%.NXTRecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)").
deleted_accesses("DNS%.Type#PTR","DNS%.PTRRecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)").
deleted_accesses("DNS%.Type#SIG","DNS%.SIGRecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)").
deleted_accesses("DNS%.Type#SOA","DNS%.SOARecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)").
deleted_accesses("DNS%.Type#SRV","DNS%.SRVRecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)").
deleted_accesses("DNS%.Type#TXT","DNS%.TXTRecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)").
deleted_accesses("java.lang%.Integer#TYPE","DNS%.Record#fromString(DNS%.Name,short,short,int,DNS%.MyStringTokenizer,DNS%.Name)").
deleted_accesses("java.lang%.Short#TYPE","DNS%.Record#fromString(DNS%.Name,short,short,int,DNS%.MyStringTokenizer,DNS%.Name)").
deleted_accesses("java.lang%.System#in","%.update#doFile(DNS%.MyStringTokenizer,java.util%.Vector,java.util%.Vector)").
deleted_accesses("java.lang%.System#in","DNS%.MyStringTokenizer#main(java.lang%.String[])").
deleted_accesses("java.lang%.System#out","DNS%.ARecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)").
deleted_accesses("java.lang%.System#out","DNS%.MyStringTokenizer#main(java.lang%.String[])").
deleted_accesses("java.lang%.System#out","DNS%.Record#fromString(DNS%.Name,short,short,int,DNS%.MyStringTokenizer,DNS%.Name)").
deleted_accesses("java.lang%.System#out","DNS%.UNKRecord#<init>(DNS%.Name,short,short,int,DNS%.MyStringTokenizer,DNS%.Name)").
deleted_accesses("java.lang%.System#out","DNS%.WorkerThread#getThread()").
deleted_calls("%.jnamed#findExactMatch(DNS%.Name,short,short,boolean)","DNS%.Zone#findRecords(DNS%.Name,short)").
deleted_calls("%.jnamed#formerrMessage(byte[])","DNS%.Header#setCount(int,int)").
deleted_calls("%.jnamed#generateReply(DNS%.Message,byte[],int)","DNS%.Zone#findName(DNS%.Name)").
deleted_calls("%.jnamed#generateReply(DNS%.Message,byte[],int)","java.lang%.Short#<init>(short)").
deleted_calls("%.jnamed#generateReply(DNS%.Message,byte[],int)","java.util%.Hashtable#elements()").
deleted_calls("%.jnamed#generateReply(DNS%.Message,byte[],int)","java.util%.Hashtable#get(java.lang%.Object)").
deleted_calls("%.jnamed#notimplMessage(DNS%.Message)","DNS%.Header#setCount(int,int)").
deleted_calls("%.update#<init>(java.io%.InputStream)","%.update#doAdd(DNS%.MyStringTokenizer)").
deleted_calls("%.update#<init>(java.io%.InputStream)","%.update#doAssert(DNS%.MyStringTokenizer)").
deleted_calls("%.update#<init>(java.io%.InputStream)","%.update#doDelete(DNS%.MyStringTokenizer)").
deleted_calls("%.update#<init>(java.io%.InputStream)","%.update#doFile(DNS%.MyStringTokenizer,java.util%.Vector,java.util%.Vector)").
deleted_calls("%.update#<init>(java.io%.InputStream)","%.update#doGlue(DNS%.MyStringTokenizer)").
deleted_calls("%.update#<init>(java.io%.InputStream)","%.update#doLog(DNS%.MyStringTokenizer)").
deleted_calls("%.update#<init>(java.io%.InputStream)","%.update#doProhibit(DNS%.MyStringTokenizer)").
deleted_calls("%.update#<init>(java.io%.InputStream)","%.update#doQuery(DNS%.MyStringTokenizer)").
deleted_calls("%.update#<init>(java.io%.InputStream)","%.update#doRequire(DNS%.MyStringTokenizer)").
deleted_calls("%.update#<init>(java.io%.InputStream)","DNS%.IO#readExtendedLine(java.io%.BufferedReader)").
deleted_calls("%.update#doAdd(DNS%.MyStringTokenizer)","%.update#parseRR(DNS%.MyStringTokenizer,short,int)").
deleted_calls("%.update#doAdd(DNS%.MyStringTokenizer)","%.update#print(java.lang%.Object)").
deleted_calls("%.update#doAdd(DNS%.MyStringTokenizer)","DNS%.Message#addRecord(int,DNS%.Record)").
deleted_calls("%.update#doAdd(DNS%.MyStringTokenizer)","DNS%.MyStringTokenizer#nextToken()").
deleted_calls("%.update#doAdd(DNS%.MyStringTokenizer)","DNS%.MyStringTokenizer#putBackToken(java.lang%.String)").
deleted_calls("%.update#doAdd(DNS%.MyStringTokenizer)","java.lang%.String#equals(java.lang%.Object)").
deleted_calls("%.update#doAdd(DNS%.MyStringTokenizer)","java.lang%.String#startsWith(java.lang%.String)").
deleted_calls("%.update#doAssert(DNS%.MyStringTokenizer)","%.update#print(java.lang%.Object)").
deleted_calls("%.update#doAssert(DNS%.MyStringTokenizer)","DNS%.Header#getCount(int)").
deleted_calls("%.update#doAssert(DNS%.MyStringTokenizer)","DNS%.Header#getRcode()").
deleted_calls("%.update#doAssert(DNS%.MyStringTokenizer)","DNS%.Message#getHeader()").
deleted_calls("%.update#doAssert(DNS%.MyStringTokenizer)","DNS%.MyStringTokenizer#hasMoreTokens()").
deleted_calls("%.update#doAssert(DNS%.MyStringTokenizer)","DNS%.MyStringTokenizer#nextToken()").
deleted_calls("%.update#doAssert(DNS%.MyStringTokenizer)","DNS%.Rcode#string(int)").
deleted_calls("%.update#doAssert(DNS%.MyStringTokenizer)","DNS%.Rcode#value(java.lang%.String)").
deleted_calls("%.update#doAssert(DNS%.MyStringTokenizer)","DNS%.Section#value(java.lang%.String)").
deleted_calls("%.update#doAssert(DNS%.MyStringTokenizer)","java.lang%.Short#<init>(short)").
deleted_calls("%.update#doAssert(DNS%.MyStringTokenizer)","java.lang%.Short#parseShort(java.lang%.String)").
deleted_calls("%.update#doAssert(DNS%.MyStringTokenizer)","java.lang%.Short#toString()").
deleted_calls("%.update#doAssert(DNS%.MyStringTokenizer)","java.lang%.String#equalsIgnoreCase(java.lang%.String)").
deleted_calls("%.update#doDelete(DNS%.MyStringTokenizer)","%.update#parseName(DNS%.MyStringTokenizer,short)").
deleted_calls("%.update#doDelete(DNS%.MyStringTokenizer)","%.update#parseRR(DNS%.MyStringTokenizer,short,int)").
deleted_calls("%.update#doDelete(DNS%.MyStringTokenizer)","%.update#parseSet(DNS%.MyStringTokenizer,short)").
deleted_calls("%.update#doDelete(DNS%.MyStringTokenizer)","%.update#print(java.lang%.Object)").
deleted_calls("%.update#doDelete(DNS%.MyStringTokenizer)","DNS%.Message#addRecord(int,DNS%.Record)").
deleted_calls("%.update#doDelete(DNS%.MyStringTokenizer)","DNS%.MyStringTokenizer#nextToken()").
deleted_calls("%.update#doDelete(DNS%.MyStringTokenizer)","java.lang%.String#equals(java.lang%.Object)").
deleted_calls("%.update#doFile(DNS%.MyStringTokenizer,java.util%.Vector,java.util%.Vector)","%.update#print(java.lang%.Object)").
deleted_calls("%.update#doFile(DNS%.MyStringTokenizer,java.util%.Vector,java.util%.Vector)","DNS%.MyStringTokenizer#nextToken()").
deleted_calls("%.update#doFile(DNS%.MyStringTokenizer,java.util%.Vector,java.util%.Vector)","java.io%.BufferedReader#<init>(java.io%.Reader)").
deleted_calls("%.update#doFile(DNS%.MyStringTokenizer,java.util%.Vector,java.util%.Vector)","java.io%.FileInputStream#<init>(java.lang%.String)").
deleted_calls("%.update#doFile(DNS%.MyStringTokenizer,java.util%.Vector,java.util%.Vector)","java.io%.InputStreamReader#<init>(java.io%.InputStream)").
deleted_calls("%.update#doFile(DNS%.MyStringTokenizer,java.util%.Vector,java.util%.Vector)","java.lang%.String#equals(java.lang%.Object)").
deleted_calls("%.update#doFile(DNS%.MyStringTokenizer,java.util%.Vector,java.util%.Vector)","java.util%.Vector#addElement(java.lang%.Object)").
deleted_calls("%.update#doGlue(DNS%.MyStringTokenizer)","%.update#parseRR(DNS%.MyStringTokenizer,short,int)").
deleted_calls("%.update#doGlue(DNS%.MyStringTokenizer)","%.update#print(java.lang%.Object)").
deleted_calls("%.update#doGlue(DNS%.MyStringTokenizer)","DNS%.Message#addRecord(int,DNS%.Record)").
deleted_calls("%.update#doGlue(DNS%.MyStringTokenizer)","DNS%.MyStringTokenizer#nextToken()").
deleted_calls("%.update#doGlue(DNS%.MyStringTokenizer)","DNS%.MyStringTokenizer#putBackToken(java.lang%.String)").
deleted_calls("%.update#doGlue(DNS%.MyStringTokenizer)","java.lang%.String#equals(java.lang%.Object)").
deleted_calls("%.update#doGlue(DNS%.MyStringTokenizer)","java.lang%.String#startsWith(java.lang%.String)").
deleted_calls("%.update#doLog(DNS%.MyStringTokenizer)","%.update#print(java.lang%.Object)").
deleted_calls("%.update#doLog(DNS%.MyStringTokenizer)","DNS%.MyStringTokenizer#nextToken()").
deleted_calls("%.update#doLog(DNS%.MyStringTokenizer)","java.io%.FileOutputStream#<init>(java.lang%.String)").
deleted_calls("%.update#doLog(DNS%.MyStringTokenizer)","java.io%.PrintStream#<init>(java.io%.OutputStream)").
deleted_calls("%.update#doProhibit(DNS%.MyStringTokenizer)","%.update#parseName(DNS%.MyStringTokenizer,short)").
deleted_calls("%.update#doProhibit(DNS%.MyStringTokenizer)","%.update#parseRR(DNS%.MyStringTokenizer,short,int)").
deleted_calls("%.update#doProhibit(DNS%.MyStringTokenizer)","%.update#parseSet(DNS%.MyStringTokenizer,short)").
deleted_calls("%.update#doProhibit(DNS%.MyStringTokenizer)","%.update#print(java.lang%.Object)").
deleted_calls("%.update#doProhibit(DNS%.MyStringTokenizer)","DNS%.Message#addRecord(int,DNS%.Record)").
deleted_calls("%.update#doProhibit(DNS%.MyStringTokenizer)","DNS%.MyStringTokenizer#nextToken()").
deleted_calls("%.update#doProhibit(DNS%.MyStringTokenizer)","java.lang%.String#equals(java.lang%.Object)").
deleted_calls("%.update#doQuery(DNS%.MyStringTokenizer)","%.update#parseSet(DNS%.MyStringTokenizer,short)").
deleted_calls("%.update#doQuery(DNS%.MyStringTokenizer)","%.update#print(java.lang%.Object)").
deleted_calls("%.update#doQuery(DNS%.MyStringTokenizer)","DNS%.Message#newQuery(DNS%.Record)").
deleted_calls("%.update#doQuery(DNS%.MyStringTokenizer)","DNS%.Record#getType()").
deleted_calls("%.update#doQuery(DNS%.MyStringTokenizer)","DNS%.Resolver#send(DNS%.Message)").
deleted_calls("%.update#doQuery(DNS%.MyStringTokenizer)","DNS%.Resolver#sendAXFR(DNS%.Message)").
deleted_calls("%.update#doQuery(DNS%.MyStringTokenizer)","DNS%.SimpleResolver#<init>(java.lang%.String)").
deleted_calls("%.update#doRequire(DNS%.MyStringTokenizer)","%.update#parseName(DNS%.MyStringTokenizer,short)").
deleted_calls("%.update#doRequire(DNS%.MyStringTokenizer)","%.update#parseRR(DNS%.MyStringTokenizer,short,int)").
deleted_calls("%.update#doRequire(DNS%.MyStringTokenizer)","%.update#parseSet(DNS%.MyStringTokenizer,short)").
deleted_calls("%.update#doRequire(DNS%.MyStringTokenizer)","%.update#print(java.lang%.Object)").
deleted_calls("%.update#doRequire(DNS%.MyStringTokenizer)","DNS%.Message#addRecord(int,DNS%.Record)").
deleted_calls("%.update#doRequire(DNS%.MyStringTokenizer)","DNS%.MyStringTokenizer#nextToken()").
deleted_calls("%.update#doRequire(DNS%.MyStringTokenizer)","java.lang%.String#equals(java.lang%.Object)").
deleted_calls("%.update#parseName(DNS%.MyStringTokenizer,short)","DNS%.MyStringTokenizer#nextToken()").
deleted_calls("%.update#parseName(DNS%.MyStringTokenizer,short)","DNS%.Name#<init>(java.lang%.String,DNS%.Name)").
deleted_calls("%.update#parseName(DNS%.MyStringTokenizer,short)","DNS%.Record#newRecord(DNS%.Name,short,short,int)").
deleted_calls("%.update#parseRR(DNS%.MyStringTokenizer,short,int)","DNS%.DClass#value(java.lang%.String)").
deleted_calls("%.update#parseRR(DNS%.MyStringTokenizer,short,int)","DNS%.MyStringTokenizer#nextToken()").
deleted_calls("%.update#parseRR(DNS%.MyStringTokenizer,short,int)","DNS%.Name#<init>(java.lang%.String,DNS%.Name)").
deleted_calls("%.update#parseRR(DNS%.MyStringTokenizer,short,int)","DNS%.Record#fromString(DNS%.Name,short,short,int,DNS%.MyStringTokenizer,DNS%.Name)").
deleted_calls("%.update#parseRR(DNS%.MyStringTokenizer,short,int)","DNS%.TTL#parseTTL(java.lang%.String)").
deleted_calls("%.update#parseRR(DNS%.MyStringTokenizer,short,int)","DNS%.Type#value(java.lang%.String)").
deleted_calls("%.update#parseRR(DNS%.MyStringTokenizer,short,int)","java.io%.IOException#<init>(java.lang%.String)").
deleted_calls("%.update#parseSet(DNS%.MyStringTokenizer,short)","DNS%.MyStringTokenizer#nextToken()").
deleted_calls("%.update#parseSet(DNS%.MyStringTokenizer,short)","DNS%.Name#<init>(java.lang%.String,DNS%.Name)").
deleted_calls("%.update#parseSet(DNS%.MyStringTokenizer,short)","DNS%.Record#newRecord(DNS%.Name,short,short,int)").
deleted_calls("%.update#parseSet(DNS%.MyStringTokenizer,short)","DNS%.Type#value(java.lang%.String)").
deleted_calls("%.update#parseSet(DNS%.MyStringTokenizer,short)","java.io%.IOException#<init>(java.lang%.String)").
deleted_calls("DNS%.ARecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)","DNS%.MyStringTokenizer#nextToken()").
deleted_calls("DNS%.ARecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)","DNS%.Record#<init>(DNS%.Name,short,short,int)").
deleted_calls("DNS%.ARecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)","java.io%.PrintStream#println(java.lang%.String)").
deleted_calls("DNS%.ARecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)","java.lang%.String#equals(java.lang%.Object)").
deleted_calls("DNS%.ARecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)","java.lang%.System#exit(int)").
deleted_calls("DNS%.ARecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)","java.net%.InetAddress#equals(java.lang%.Object)").
deleted_calls("DNS%.ARecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)","java.net%.InetAddress#getByName(java.lang%.String)").
deleted_calls("DNS%.ARecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)","java.net%.InetAddress#getLocalHost()").
deleted_calls("DNS%.CERTRecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)","DNS%.MyStringTokenizer#nextToken()").
deleted_calls("DNS%.CERTRecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)","DNS%.Record#<init>(DNS%.Name,short,short,int)").
deleted_calls("DNS%.CERTRecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)","DNS.utils%.base64#fromString(java.lang%.String)").
deleted_calls("DNS%.CERTRecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)","java.lang%.Integer#parseInt(java.lang%.String)").
deleted_calls("DNS%.CERTRecord#toString()","DNS%.IO#formatBase64String(java.lang%.String,int,java.lang%.String,boolean)").
deleted_calls("DNS%.CERTRecord#toString()","DNS.utils%.base64#toString(byte[])").
deleted_calls("DNS%.CNAMERecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)","DNS%.NS_CNAME_PTRRecord#<init>(DNS%.Name,short,short,int,DNS%.MyStringTokenizer,DNS%.Name)").
deleted_calls("DNS%.Cache#CacheElement#<init>(DNS%.RRset,byte,int)","DNS%.RRset#getTTL()").
deleted_calls("DNS%.Cache#CacheElement#<init>(DNS%.RRset,byte,int)","java.lang%.System#currentTimeMillis()").
deleted_calls("DNS%.Cache#CacheElement#<init>(DNS%.Record,byte,int)","DNS%.Cache#CacheElement#update(DNS%.Record)").
deleted_calls("DNS%.Cache#CacheElement#<init>(DNS%.Record,byte,int)","DNS%.RRset#<init>()").
deleted_calls("DNS%.Cache#CacheElement#<init>(int,byte,int)","java.lang%.System#currentTimeMillis()").
deleted_calls("DNS%.Cache#addNegative(DNS%.Name,short,short,int,byte,java.lang%.Object)","DNS%.Cache#CacheElement#<init>(int,byte,int)").
deleted_calls("DNS%.Cache#addNegative(DNS%.Name,short,short,int,byte,java.lang%.Object)","DNS%.NameSet#findSet(DNS%.Name,short,short)").
deleted_calls("DNS%.Cache#addRRset(DNS%.RRset,byte,java.lang%.Object)","DNS%.Cache#CacheElement#<init>(DNS%.RRset,byte,int)").
deleted_calls("DNS%.Cache#addRRset(DNS%.RRset,byte,java.lang%.Object)","DNS%.NameSet#findSet(DNS%.Name,short,short)").
deleted_calls("DNS%.Cache#addRecord(DNS%.Record,byte,java.lang%.Object)","DNS%.Cache#CacheElement#<init>(DNS%.Record,byte,int)").
deleted_calls("DNS%.Cache#findRecords(DNS%.Name,short,short,byte)","DNS%.CacheResponse#answer()").
deleted_calls("DNS%.Cache#lookupRecords(DNS%.Name,short,short,byte)","DNS%.CacheResponse#<init>(byte,java.lang%.Object)").
deleted_calls("DNS%.Cache#lookupRecords(DNS%.Name,short,short,byte)","DNS%.RRset#rrs()").
deleted_calls("DNS%.Cache#lookupRecords(DNS%.Name,short,short,byte)","java.util%.Enumeration#nextElement()").
deleted_calls("DNS%.HINFORecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)","DNS%.MyStringTokenizer#nextToken()").
deleted_calls("DNS%.HINFORecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)","DNS%.Record#<init>(DNS%.Name,short,short,int)").
deleted_calls("DNS%.IO#formatBase64String(java.lang%.String,int,java.lang%.String,boolean)","java.lang%.String#length()").
deleted_calls("DNS%.IO#formatBase64String(java.lang%.String,int,java.lang%.String,boolean)","java.lang%.String#substring(int)").
deleted_calls("DNS%.IO#formatBase64String(java.lang%.String,int,java.lang%.String,boolean)","java.lang%.String#substring(int,int)").
deleted_calls("DNS%.IO#formatBase64String(java.lang%.String,int,java.lang%.String,boolean)","java.lang%.StringBuffer#<init>()").
deleted_calls("DNS%.IO#formatBase64String(java.lang%.String,int,java.lang%.String,boolean)","java.lang%.StringBuffer#append(java.lang%.String)").
deleted_calls("DNS%.IO#formatBase64String(java.lang%.String,int,java.lang%.String,boolean)","java.lang%.StringBuffer#toString()").
deleted_calls("DNS%.IO#readExtendedLine(java.io%.BufferedReader)","DNS%.IO#stripTrailing(java.lang%.String)").
deleted_calls("DNS%.IO#readExtendedLine(java.io%.BufferedReader)","java.io%.BufferedReader#readLine()").
deleted_calls("DNS%.IO#readExtendedLine(java.io%.BufferedReader)","java.lang%.String#endsWith(java.lang%.String)").
deleted_calls("DNS%.IO#readExtendedLine(java.io%.BufferedReader)","java.lang%.String#length()").
deleted_calls("DNS%.IO#readExtendedLine(java.io%.BufferedReader)","java.lang%.String#substring(int,int)").
deleted_calls("DNS%.IO#readExtendedLine(java.io%.BufferedReader)","java.lang%.StringBuffer#<init>(java.lang%.String)").
deleted_calls("DNS%.IO#readExtendedLine(java.io%.BufferedReader)","java.lang%.StringBuffer#append(java.lang%.String)").
deleted_calls("DNS%.IO#readExtendedLine(java.io%.BufferedReader)","java.lang%.StringBuffer#toString()").
deleted_calls("DNS%.IO#stripTrailing(java.lang%.String)","java.lang%.Character#isWhitespace(char)").
deleted_calls("DNS%.IO#stripTrailing(java.lang%.String)","java.lang%.String#charAt(int)").
deleted_calls("DNS%.IO#stripTrailing(java.lang%.String)","java.lang%.String#lastIndexOf(int)").
deleted_calls("DNS%.IO#stripTrailing(java.lang%.String)","java.lang%.String#length()").
deleted_calls("DNS%.IO#stripTrailing(java.lang%.String)","java.lang%.String#substring(int,int)").
deleted_calls("DNS%.KEYRecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)","DNS%.MyStringTokenizer#nextToken()").
deleted_calls("DNS%.KEYRecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)","DNS%.Record#<init>(DNS%.Name,short,short,int)").
deleted_calls("DNS%.KEYRecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)","DNS.utils%.base64#fromString(java.lang%.String)").
deleted_calls("DNS%.KEYRecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)","java.lang%.Integer#decode(java.lang%.String)").
deleted_calls("DNS%.KEYRecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)","java.lang%.Integer#intValue()").
deleted_calls("DNS%.KEYRecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)","java.lang%.Integer#parseInt(java.lang%.String)").
deleted_calls("DNS%.KEYRecord#toString()","DNS%.IO#formatBase64String(java.lang%.String,int,java.lang%.String,boolean)").
deleted_calls("DNS%.KEYRecord#toString()","DNS.utils%.base64#toString(byte[])").
deleted_calls("DNS%.MXRecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)","DNS%.MyStringTokenizer#nextToken()").
deleted_calls("DNS%.MXRecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)","DNS%.Name#<init>(java.lang%.String,DNS%.Name)").
deleted_calls("DNS%.MXRecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)","DNS%.Record#<init>(DNS%.Name,short,short,int)").
deleted_calls("DNS%.MXRecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)","java.lang%.Short#parseShort(java.lang%.String)").
deleted_calls("DNS%.Master#nextRecord()","DNS%.IO#readExtendedLine(java.io%.BufferedReader)").
deleted_calls("DNS%.Master#nextRecord()","DNS%.Master#parseOrigin(DNS%.MyStringTokenizer)").
deleted_calls("DNS%.Master#nextRecord()","DNS%.Master#parseRR(DNS%.MyStringTokenizer,boolean,DNS%.Record,DNS%.Name)").
deleted_calls("DNS%.Master#parseOrigin(DNS%.MyStringTokenizer)","DNS%.MyStringTokenizer#nextToken()").
deleted_calls("DNS%.Master#parseOrigin(DNS%.MyStringTokenizer)","DNS%.Name#<init>(java.lang%.String)").
deleted_calls("DNS%.Master#parseRR(DNS%.MyStringTokenizer,boolean,DNS%.Record,DNS%.Name)","DNS%.DClass#value(java.lang%.String)").
deleted_calls("DNS%.Master#parseRR(DNS%.MyStringTokenizer,boolean,DNS%.Record,DNS%.Name)","DNS%.MyStringTokenizer#nextToken()").
deleted_calls("DNS%.Master#parseRR(DNS%.MyStringTokenizer,boolean,DNS%.Record,DNS%.Name)","DNS%.Name#<init>(java.lang%.String,DNS%.Name)").
deleted_calls("DNS%.Master#parseRR(DNS%.MyStringTokenizer,boolean,DNS%.Record,DNS%.Name)","DNS%.Record#fromString(DNS%.Name,short,short,int,DNS%.MyStringTokenizer,DNS%.Name)").
deleted_calls("DNS%.Master#parseRR(DNS%.MyStringTokenizer,boolean,DNS%.Record,DNS%.Name)","DNS%.Record#getName()").
deleted_calls("DNS%.Master#parseRR(DNS%.MyStringTokenizer,boolean,DNS%.Record,DNS%.Name)","DNS%.Record#getTTL()").
deleted_calls("DNS%.Master#parseRR(DNS%.MyStringTokenizer,boolean,DNS%.Record,DNS%.Name)","DNS%.TTL#parseTTL(java.lang%.String)").
deleted_calls("DNS%.Master#parseRR(DNS%.MyStringTokenizer,boolean,DNS%.Record,DNS%.Name)","DNS%.Type#value(java.lang%.String)").
deleted_calls("DNS%.Master#parseRR(DNS%.MyStringTokenizer,boolean,DNS%.Record,DNS%.Name)","java.io%.IOException#<init>(java.lang%.String)").
deleted_calls("DNS%.Message#sectionToString(int)","DNS%.Section#longString(int)").
deleted_calls("DNS%.MyStringTokenizer#main(java.lang%.String[])","DNS%.MyStringTokenizer#<init>(java.lang%.String)").
deleted_calls("DNS%.MyStringTokenizer#main(java.lang%.String[])","DNS%.MyStringTokenizer#hasMoreTokens()").
deleted_calls("DNS%.MyStringTokenizer#main(java.lang%.String[])","DNS%.MyStringTokenizer#nextToken()").
deleted_calls("DNS%.MyStringTokenizer#main(java.lang%.String[])","java.io%.BufferedReader#<init>(java.io%.Reader)").
deleted_calls("DNS%.MyStringTokenizer#main(java.lang%.String[])","java.io%.BufferedReader#readLine()").
deleted_calls("DNS%.MyStringTokenizer#main(java.lang%.String[])","java.io%.InputStreamReader#<init>(java.io%.InputStream)").
deleted_calls("DNS%.MyStringTokenizer#main(java.lang%.String[])","java.io%.PrintStream#println(java.lang%.String)").
deleted_calls("DNS%.NSRecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)","DNS%.NS_CNAME_PTRRecord#<init>(DNS%.Name,short,short,int,DNS%.MyStringTokenizer,DNS%.Name)").
deleted_calls("DNS%.NS_CNAME_PTRRecord#<init>(DNS%.Name,short,short,int,DNS%.MyStringTokenizer,DNS%.Name)","DNS%.MyStringTokenizer#nextToken()").
deleted_calls("DNS%.NS_CNAME_PTRRecord#<init>(DNS%.Name,short,short,int,DNS%.MyStringTokenizer,DNS%.Name)","DNS%.Name#<init>(java.lang%.String,DNS%.Name)").
deleted_calls("DNS%.NS_CNAME_PTRRecord#<init>(DNS%.Name,short,short,int,DNS%.MyStringTokenizer,DNS%.Name)","DNS%.Record#<init>(DNS%.Name,short,short,int)").
deleted_calls("DNS%.NXTRecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)","DNS%.MyStringTokenizer#hasMoreTokens()").
deleted_calls("DNS%.NXTRecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)","DNS%.MyStringTokenizer#nextToken()").
deleted_calls("DNS%.NXTRecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)","DNS%.Name#<init>(java.lang%.String,DNS%.Name)").
deleted_calls("DNS%.NXTRecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)","DNS%.Record#<init>(DNS%.Name,short,short,int)").
deleted_calls("DNS%.NXTRecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)","DNS%.Type#value(java.lang%.String)").
deleted_calls("DNS%.NXTRecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)","java.util%.BitSet#<init>()").
deleted_calls("DNS%.NXTRecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)","java.util%.BitSet#set(int)").
deleted_calls("DNS%.NXTRecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)","java.util%.Vector#<init>()").
deleted_calls("DNS%.PTRRecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)","DNS%.NS_CNAME_PTRRecord#<init>(DNS%.Name,short,short,int,DNS%.MyStringTokenizer,DNS%.Name)").
deleted_calls("DNS%.Record#fromString(DNS%.Name,short,short,int,DNS%.MyStringTokenizer,DNS%.Name)","DNS%.Record#toClass(short)").
deleted_calls("DNS%.Record#fromString(DNS%.Name,short,short,int,DNS%.MyStringTokenizer,DNS%.Name)","DNS%.UNKRecord#<init>(DNS%.Name,short,short,int,DNS%.MyStringTokenizer,DNS%.Name)").
deleted_calls("DNS%.Record#fromString(DNS%.Name,short,short,int,DNS%.MyStringTokenizer,DNS%.Name)","java.io%.PrintStream#println(java.lang%.Object)").
deleted_calls("DNS%.Record#fromString(DNS%.Name,short,short,int,DNS%.MyStringTokenizer,DNS%.Name)","java.io%.PrintStream#println(java.lang%.String)").
deleted_calls("DNS%.Record#fromString(DNS%.Name,short,short,int,DNS%.MyStringTokenizer,DNS%.Name)","java.lang%.Class#getConstructor(java.lang%.Class[])").
deleted_calls("DNS%.Record#fromString(DNS%.Name,short,short,int,DNS%.MyStringTokenizer,DNS%.Name)","java.lang%.Integer#<init>(int)").
deleted_calls("DNS%.Record#fromString(DNS%.Name,short,short,int,DNS%.MyStringTokenizer,DNS%.Name)","java.lang%.Short#<init>(short)").
deleted_calls("DNS%.Record#fromString(DNS%.Name,short,short,int,DNS%.MyStringTokenizer,DNS%.Name)","java.lang.reflect%.Constructor#newInstance(java.lang%.Object[])").
deleted_calls("DNS%.Record#fromString(DNS%.Name,short,short,int,DNS%.MyStringTokenizer,DNS%.Name)","java.lang.reflect%.InvocationTargetException#getTargetException()").
deleted_calls("DNS%.Record#rrToWireCanonical()","DNS.utils%.DataByteOutputStream#<init>()").
deleted_calls("DNS%.Record#rrToWireCanonical()","java.io%.ByteArrayOutputStream#toByteArray()").
deleted_calls("DNS%.Record#toWireCanonical(DNS.utils%.DataByteOutputStream)","java.io%.OutputStream#write(byte[])").
deleted_calls("DNS%.SIGRecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)","DNS%.MyStringTokenizer#hasMoreTokens()").
deleted_calls("DNS%.SIGRecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)","DNS%.MyStringTokenizer#nextToken()").
deleted_calls("DNS%.SIGRecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)","DNS%.Name#<init>(java.lang%.String,DNS%.Name)").
deleted_calls("DNS%.SIGRecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)","DNS%.Name#labels()").
deleted_calls("DNS%.SIGRecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)","DNS%.Record#<init>(DNS%.Name,short,short,int)").
deleted_calls("DNS%.SIGRecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)","DNS%.SIGRecord#parseDate(java.lang%.String)").
deleted_calls("DNS%.SIGRecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)","DNS%.TTL#parseTTL(java.lang%.String)").
deleted_calls("DNS%.SIGRecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)","DNS%.Type#value(java.lang%.String)").
deleted_calls("DNS%.SIGRecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)","DNS.utils%.base64#fromString(java.lang%.String)").
deleted_calls("DNS%.SIGRecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)","java.lang%.Byte#parseByte(java.lang%.String)").
deleted_calls("DNS%.SIGRecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)","java.lang%.Integer#parseInt(java.lang%.String)").
deleted_calls("DNS%.SIGRecord#toString()","DNS%.IO#formatBase64String(java.lang%.String,int,java.lang%.String,boolean)").
deleted_calls("DNS%.SIGRecord#toString()","DNS.utils%.base64#toString(byte[])").
deleted_calls("DNS%.SOARecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)","DNS%.MyStringTokenizer#nextToken()").
deleted_calls("DNS%.SOARecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)","DNS%.Name#<init>(java.lang%.String,DNS%.Name)").
deleted_calls("DNS%.SOARecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)","DNS%.Record#<init>(DNS%.Name,short,short,int)").
deleted_calls("DNS%.SOARecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)","DNS%.TTL#parseTTL(java.lang%.String)").
deleted_calls("DNS%.SOARecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)","java.lang%.Integer#parseInt(java.lang%.String)").
deleted_calls("DNS%.SRVRecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)","DNS%.MyStringTokenizer#nextToken()").
deleted_calls("DNS%.SRVRecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)","DNS%.Name#<init>(java.lang%.String,DNS%.Name)").
deleted_calls("DNS%.SRVRecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)","DNS%.Record#<init>(DNS%.Name,short,short,int)").
deleted_calls("DNS%.SRVRecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)","java.lang%.Short#parseShort(java.lang%.String)").
deleted_calls("DNS%.TSIGRecord#toString()","DNS%.IO#formatBase64String(java.lang%.String,int,java.lang%.String,boolean)").
deleted_calls("DNS%.TXTRecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)","DNS%.MyStringTokenizer#hasMoreTokens()").
deleted_calls("DNS%.TXTRecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)","DNS%.MyStringTokenizer#nextToken()").
deleted_calls("DNS%.TXTRecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)","DNS%.Record#<init>(DNS%.Name,short,short,int)").
deleted_calls("DNS%.TXTRecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)","java.util%.Vector#<init>()").
deleted_calls("DNS%.TXTRecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)","java.util%.Vector#addElement(java.lang%.Object)").
deleted_calls("DNS%.UNKRecord#<init>(DNS%.Name,short,short,int,DNS%.MyStringTokenizer,DNS%.Name)","DNS%.Record#<init>(DNS%.Name,short,short,int)").
deleted_calls("DNS%.UNKRecord#<init>(DNS%.Name,short,short,int,DNS%.MyStringTokenizer,DNS%.Name)","java.io%.PrintStream#println(java.lang%.String)").
deleted_calls("DNS%.UNKRecord#<init>(DNS%.Name,short,short,int,DNS%.MyStringTokenizer,DNS%.Name)","java.lang%.System#exit(int)").
deleted_calls("DNS%.WorkerThread#getThread()","java.io%.PrintStream#println(java.lang%.String)").
deleted_calls("DNS%.Zone#addRR(DNS%.Record)","DNS%.NameSet#findSet(DNS%.Name,short,short)").
deleted_calls("DNS%.Zone#findName(DNS%.Name)","DNS%.NameSet#findName(DNS%.Name)").
deleted_calls("DNS%.Zone#getNS()","DNS%.NameSet#findSet(DNS%.Name,short,short)").
deleted_calls("DNS%.Zone#getSOA()","DNS%.NameSet#findSet(DNS%.Name,short,short)").
deleted_calls("DNS%.dns#getRecords(java.lang%.String,short,short,byte)","DNS%.Cache#addMessage(DNS%.Message)").
deleted_calls("DNS%.dns#getRecords(java.lang%.String,short,short,byte)","DNS%.Cache#lookupRecords(DNS%.Name,short,short,byte)").
deleted_calls("DNS%.dns#getRecords(java.lang%.String,short,short,byte)","DNS%.CacheResponse#answer()").
deleted_calls("DNS%.dns#getRecords(java.lang%.String,short,short,byte)","DNS%.CacheResponse#isNegative()").
deleted_calls("DNS%.dns#getRecords(java.lang%.String,short,short,byte)","DNS%.CacheResponse#isSuccessful()").
deleted_calls("DNS%.dns#getRecords(java.lang%.String,short,short,byte)","DNS%.Header#getRcode()").
deleted_calls("DNS%.dns#getRecords(java.lang%.String,short,short,byte)","DNS%.Message#getHeader()").
deleted_calls("DNS%.dns#getRecords(java.lang%.String,short,short,byte)","DNS%.Message#getSection(int)").
deleted_calls("DNS%.dns#getRecords(java.lang%.String,short,short,byte)","DNS%.Message#newQuery(DNS%.Record)").
deleted_calls("DNS%.dns#getRecords(java.lang%.String,short,short,byte)","DNS%.RRset#rrs()").
deleted_calls("DNS%.dns#getRecords(java.lang%.String,short,short,byte)","DNS%.RRset#size()").
deleted_calls("DNS%.dns#getRecords(java.lang%.String,short,short,byte)","DNS%.Record#getType()").
deleted_calls("DNS%.dns#getRecords(java.lang%.String,short,short,byte)","DNS%.Record#newRecord(DNS%.Name,short,short)").
deleted_calls("DNS%.dns#getRecords(java.lang%.String,short,short,byte)","DNS%.Resolver#send(DNS%.Message)").
deleted_calls("DNS%.dns#getRecords(java.lang%.String,short,short,byte)","DNS%.dns#matchType(short,short)").
deleted_calls("DNS%.dns#getRecords(java.lang%.String,short,short,byte)","java.util%.Enumeration#hasMoreElements()").
deleted_calls("DNS%.dns#getRecords(java.lang%.String,short,short,byte)","java.util%.Enumeration#nextElement()").
deleted_field("DNS%.Cache#CacheElement#credibility","credibility","DNS%.Cache#CacheElement").
deleted_field("DNS%.Cache#CacheElement#rrset","rrset","DNS%.Cache#CacheElement").
deleted_field("DNS%.Cache#CacheElement#srcid","srcid","DNS%.Cache#CacheElement").
deleted_field("DNS%.Cache#CacheElement#timeIn","timeIn","DNS%.Cache#CacheElement").
deleted_field("DNS%.Cache#CacheElement#ttl","ttl","DNS%.Cache#CacheElement").
deleted_field("DNS%.Zone#CACHE","CACHE","DNS%.Zone").
deleted_fieldoftype("DNS%.Cache#CacheElement#credibility","byte").
deleted_fieldoftype("DNS%.Cache#CacheElement#rrset","DNS%.RRset").
deleted_fieldoftype("DNS%.Cache#CacheElement#srcid","int").
deleted_fieldoftype("DNS%.Cache#CacheElement#timeIn","long").
deleted_fieldoftype("DNS%.Cache#CacheElement#ttl","int").
deleted_fieldoftype("DNS%.Zone#CACHE","int").
deleted_inheritedmethod("rrToWireCanonical()","DNS%.Record","DNS%.CNAMERecord").
deleted_inheritedmethod("rrToWireCanonical()","DNS%.Record","DNS%.MXRecord").
deleted_inheritedmethod("rrToWireCanonical()","DNS%.Record","DNS%.NSRecord").
deleted_inheritedmethod("rrToWireCanonical()","DNS%.Record","DNS%.NS_CNAME_PTRRecord").
deleted_inheritedmethod("rrToWireCanonical()","DNS%.Record","DNS%.NXTRecord").
deleted_inheritedmethod("rrToWireCanonical()","DNS%.Record","DNS%.OPTRecord").
deleted_inheritedmethod("rrToWireCanonical()","DNS%.Record","DNS%.PTRRecord").
deleted_inheritedmethod("rrToWireCanonical()","DNS%.Record","DNS%.SIGRecord").
deleted_inheritedmethod("rrToWireCanonical()","DNS%.Record","DNS%.SOARecord").
deleted_inheritedmethod("rrToWireCanonical()","DNS%.Record","DNS%.SRVRecord").
deleted_inheritedmethod("rrToWireCanonical()","DNS%.Record","DNS%.TSIGRecord").
deleted_method("%.update#doAdd(DNS%.MyStringTokenizer)","doAdd(DNS%.MyStringTokenizer)","%.update").
deleted_method("%.update#doAssert(DNS%.MyStringTokenizer)","doAssert(DNS%.MyStringTokenizer)","%.update").
deleted_method("%.update#doDelete(DNS%.MyStringTokenizer)","doDelete(DNS%.MyStringTokenizer)","%.update").
deleted_method("%.update#doFile(DNS%.MyStringTokenizer,java.util%.Vector,java.util%.Vector)","doFile(DNS%.MyStringTokenizer,java.util%.Vector,java.util%.Vector)","%.update").
deleted_method("%.update#doGlue(DNS%.MyStringTokenizer)","doGlue(DNS%.MyStringTokenizer)","%.update").
deleted_method("%.update#doLog(DNS%.MyStringTokenizer)","doLog(DNS%.MyStringTokenizer)","%.update").
deleted_method("%.update#doProhibit(DNS%.MyStringTokenizer)","doProhibit(DNS%.MyStringTokenizer)","%.update").
deleted_method("%.update#doQuery(DNS%.MyStringTokenizer)","doQuery(DNS%.MyStringTokenizer)","%.update").
deleted_method("%.update#doRequire(DNS%.MyStringTokenizer)","doRequire(DNS%.MyStringTokenizer)","%.update").
deleted_method("%.update#parseName(DNS%.MyStringTokenizer,short)","parseName(DNS%.MyStringTokenizer,short)","%.update").
deleted_method("%.update#parseRR(DNS%.MyStringTokenizer,short,int)","parseRR(DNS%.MyStringTokenizer,short,int)","%.update").
deleted_method("%.update#parseSet(DNS%.MyStringTokenizer,short)","parseSet(DNS%.MyStringTokenizer,short)","%.update").
deleted_method("DNS%.ARecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)","<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)","DNS%.ARecord").
deleted_method("DNS%.CERTRecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)","<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)","DNS%.CERTRecord").
deleted_method("DNS%.CNAMERecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)","<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)","DNS%.CNAMERecord").
deleted_method("DNS%.Cache#CacheElement#<init>(DNS%.RRset,byte,int)","<init>(DNS%.RRset,byte,int)","DNS%.Cache#CacheElement").
deleted_method("DNS%.Cache#CacheElement#<init>(DNS%.Record,byte,int)","<init>(DNS%.Record,byte,int)","DNS%.Cache#CacheElement").
deleted_method("DNS%.Cache#CacheElement#<init>(int,byte,int)","<init>(int,byte,int)","DNS%.Cache#CacheElement").
deleted_method("DNS%.CacheResponse#answer()","answer()","DNS%.CacheResponse").
deleted_method("DNS%.HINFORecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)","<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)","DNS%.HINFORecord").
deleted_method("DNS%.Header#setFlags(boolean[])","setFlags(boolean[])","DNS%.Header").
deleted_method("DNS%.IO#<init>()","<init>()","DNS%.IO").
deleted_method("DNS%.IO#formatBase64String(java.lang%.String,int,java.lang%.String,boolean)","formatBase64String(java.lang%.String,int,java.lang%.String,boolean)","DNS%.IO").
deleted_method("DNS%.IO#readExtendedLine(java.io%.BufferedReader)","readExtendedLine(java.io%.BufferedReader)","DNS%.IO").
deleted_method("DNS%.IO#stripTrailing(java.lang%.String)","stripTrailing(java.lang%.String)","DNS%.IO").
deleted_method("DNS%.KEYRecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)","<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)","DNS%.KEYRecord").
deleted_method("DNS%.MXRecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)","<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)","DNS%.MXRecord").
deleted_method("DNS%.Master#parseOrigin(DNS%.MyStringTokenizer)","parseOrigin(DNS%.MyStringTokenizer)","DNS%.Master").
deleted_method("DNS%.Master#parseRR(DNS%.MyStringTokenizer,boolean,DNS%.Record,DNS%.Name)","parseRR(DNS%.MyStringTokenizer,boolean,DNS%.Record,DNS%.Name)","DNS%.Master").
deleted_method("DNS%.MyStringTokenizer#main(java.lang%.String[])","main(java.lang%.String[])","DNS%.MyStringTokenizer").
deleted_method("DNS%.NSRecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)","<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)","DNS%.NSRecord").
deleted_method("DNS%.NS_CNAME_PTRRecord#<init>(DNS%.Name,short,short,int,DNS%.MyStringTokenizer,DNS%.Name)","<init>(DNS%.Name,short,short,int,DNS%.MyStringTokenizer,DNS%.Name)","DNS%.NS_CNAME_PTRRecord").
deleted_method("DNS%.NXTRecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)","<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)","DNS%.NXTRecord").
deleted_method("DNS%.PTRRecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)","<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)","DNS%.PTRRecord").
deleted_method("DNS%.Record#fromString(DNS%.Name,short,short,int,DNS%.MyStringTokenizer,DNS%.Name)","fromString(DNS%.Name,short,short,int,DNS%.MyStringTokenizer,DNS%.Name)","DNS%.Record").
deleted_method("DNS%.SIGRecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)","<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)","DNS%.SIGRecord").
deleted_method("DNS%.SOARecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)","<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)","DNS%.SOARecord").
deleted_method("DNS%.SRVRecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)","<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)","DNS%.SRVRecord").
deleted_method("DNS%.TXTRecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)","<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)","DNS%.TXTRecord").
deleted_method("DNS%.UNKRecord#<init>(DNS%.Name,short,short,int,DNS%.MyStringTokenizer,DNS%.Name)","<init>(DNS%.Name,short,short,int,DNS%.MyStringTokenizer,DNS%.Name)","DNS%.UNKRecord").
deleted_method("DNS%.Zone#findName(DNS%.Name)","findName(DNS%.Name)","DNS%.Zone").
deleted_return("%.update#doAdd(DNS%.MyStringTokenizer)","void").
deleted_return("%.update#doAssert(DNS%.MyStringTokenizer)","boolean").
deleted_return("%.update#doDelete(DNS%.MyStringTokenizer)","void").
deleted_return("%.update#doFile(DNS%.MyStringTokenizer,java.util%.Vector,java.util%.Vector)","void").
deleted_return("%.update#doGlue(DNS%.MyStringTokenizer)","void").
deleted_return("%.update#doLog(DNS%.MyStringTokenizer)","void").
deleted_return("%.update#doProhibit(DNS%.MyStringTokenizer)","void").
deleted_return("%.update#doQuery(DNS%.MyStringTokenizer)","void").
deleted_return("%.update#doRequire(DNS%.MyStringTokenizer)","void").
deleted_return("%.update#parseName(DNS%.MyStringTokenizer,short)","DNS%.Record").
deleted_return("%.update#parseRR(DNS%.MyStringTokenizer,short,int)","DNS%.Record").
deleted_return("%.update#parseSet(DNS%.MyStringTokenizer,short)","DNS%.Record").
deleted_return("DNS%.ARecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)","void").
deleted_return("DNS%.CERTRecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)","void").
deleted_return("DNS%.CNAMERecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)","void").
deleted_return("DNS%.Cache#CacheElement#<init>(DNS%.RRset,byte,int)","void").
deleted_return("DNS%.Cache#CacheElement#<init>(DNS%.Record,byte,int)","void").
deleted_return("DNS%.Cache#CacheElement#<init>(int,byte,int)","void").
deleted_return("DNS%.Cache#findAnyRecords(DNS%.Name,short,short)","DNS%.RRset").
deleted_return("DNS%.Cache#findRecords(DNS%.Name,short,short)","DNS%.RRset").
deleted_return("DNS%.Cache#findRecords(DNS%.Name,short,short,byte)","DNS%.RRset").
deleted_return("DNS%.CacheResponse#answer()","DNS%.RRset").
deleted_return("DNS%.CacheResponse#partial()","DNS%.Name").
deleted_return("DNS%.HINFORecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)","void").
deleted_return("DNS%.Header#setFlags(boolean[])","void").
deleted_return("DNS%.IO#<init>()","void").
deleted_return("DNS%.IO#formatBase64String(java.lang%.String,int,java.lang%.String,boolean)","java.lang%.String").
deleted_return("DNS%.IO#readExtendedLine(java.io%.BufferedReader)","java.lang%.String").
deleted_return("DNS%.IO#stripTrailing(java.lang%.String)","java.lang%.String").
deleted_return("DNS%.KEYRecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)","void").
deleted_return("DNS%.MXRecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)","void").
deleted_return("DNS%.Master#parseOrigin(DNS%.MyStringTokenizer)","DNS%.Name").
deleted_return("DNS%.Master#parseRR(DNS%.MyStringTokenizer,boolean,DNS%.Record,DNS%.Name)","DNS%.Record").
deleted_return("DNS%.MyStringTokenizer#main(java.lang%.String[])","void").
deleted_return("DNS%.NSRecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)","void").
deleted_return("DNS%.NS_CNAME_PTRRecord#<init>(DNS%.Name,short,short,int,DNS%.MyStringTokenizer,DNS%.Name)","void").
deleted_return("DNS%.NXTRecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)","void").
deleted_return("DNS%.NameSet#findSet(DNS%.Name,short,short)","java.lang%.Object").
deleted_return("DNS%.PTRRecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)","void").
deleted_return("DNS%.Record#fromString(DNS%.Name,short,short,int,DNS%.MyStringTokenizer,DNS%.Name)","DNS%.Record").
deleted_return("DNS%.Record#rrToWireCanonical()","byte[]").
deleted_return("DNS%.SIGRecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)","void").
deleted_return("DNS%.SOARecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)","void").
deleted_return("DNS%.SRVRecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)","void").
deleted_return("DNS%.TXTRecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)","void").
deleted_return("DNS%.UNKRecord#<init>(DNS%.Name,short,short,int,DNS%.MyStringTokenizer,DNS%.Name)","void").
deleted_return("DNS%.Zone#findName(DNS%.Name)","java.util%.Hashtable").
deleted_return("DNS%.Zone#findRecords(DNS%.Name,short)","DNS%.RRset").
deleted_subtype("java.lang%.Object","DNS%.Cache#CacheElement").
deleted_subtype("java.lang%.Object","DNS%.IO").
deleted_type("DNS%.Cache#CacheElement","Cache#CacheElement","DNS").
deleted_type("DNS%.IO","IO","DNS").
deleted_typeintype("DNS%.Cache#CacheElement","DNS%.Cache").
added_accesses("%.jnamed#cache","%.jnamed#generateReply(DNS%.Message,byte[],int)").
added_accesses("%.update#defaultClass","%.update#doAdd(DNS.utils%.MyStringTokenizer)").
added_accesses("%.update#defaultClass","%.update#doGlue(DNS.utils%.MyStringTokenizer)").
added_accesses("%.update#defaultClass","%.update#doProhibit(DNS.utils%.MyStringTokenizer)").
added_accesses("%.update#defaultClass","%.update#doQuery(DNS.utils%.MyStringTokenizer)").
added_accesses("%.update#defaultClass","%.update#doRequire(DNS.utils%.MyStringTokenizer)").
added_accesses("%.update#defaultTTL","%.update#doAdd(DNS.utils%.MyStringTokenizer)").
added_accesses("%.update#defaultTTL","%.update#doGlue(DNS.utils%.MyStringTokenizer)").
added_accesses("%.update#log","%.update#doLog(DNS.utils%.MyStringTokenizer)").
added_accesses("%.update#origin","%.update#parseName(DNS.utils%.MyStringTokenizer,short)").
added_accesses("%.update#origin","%.update#parseRR(DNS.utils%.MyStringTokenizer,short,int)").
added_accesses("%.update#origin","%.update#parseSet(DNS.utils%.MyStringTokenizer,short)").
added_accesses("%.update#query","%.update#doAdd(DNS.utils%.MyStringTokenizer)").
added_accesses("%.update#query","%.update#doDelete(DNS.utils%.MyStringTokenizer)").
added_accesses("%.update#query","%.update#doGlue(DNS.utils%.MyStringTokenizer)").
added_accesses("%.update#query","%.update#doProhibit(DNS.utils%.MyStringTokenizer)").
added_accesses("%.update#query","%.update#doRequire(DNS.utils%.MyStringTokenizer)").
added_accesses("%.update#res","%.update#doQuery(DNS.utils%.MyStringTokenizer)").
added_accesses("%.update#response","%.update#doAssert(DNS.utils%.MyStringTokenizer)").
added_accesses("%.update#response","%.update#doQuery(DNS.utils%.MyStringTokenizer)").
added_accesses("%.update#server","%.update#doQuery(DNS.utils%.MyStringTokenizer)").
added_accesses("DNS%.ARecord#address","DNS%.ARecord#<init>(DNS%.Name,short,int,DNS.utils%.MyStringTokenizer,DNS%.Name)").
added_accesses("DNS%.CERTRecord#alg","DNS%.CERTRecord#<init>(DNS%.Name,short,int,DNS.utils%.MyStringTokenizer,DNS%.Name)").
added_accesses("DNS%.CERTRecord#cert","DNS%.CERTRecord#<init>(DNS%.Name,short,int,DNS.utils%.MyStringTokenizer,DNS%.Name)").
added_accesses("DNS%.CERTRecord#certType","DNS%.CERTRecord#<init>(DNS%.Name,short,int,DNS.utils%.MyStringTokenizer,DNS%.Name)").
added_accesses("DNS%.CERTRecord#keyTag","DNS%.CERTRecord#<init>(DNS%.Name,short,int,DNS.utils%.MyStringTokenizer,DNS%.Name)").
added_accesses("DNS%.Cache#Element#credibility","DNS%.Cache#Element#<init>(DNS%.RRset,byte,int)").
added_accesses("DNS%.Cache#Element#credibility","DNS%.Cache#Element#<init>(DNS%.Record,byte,int)").
added_accesses("DNS%.Cache#Element#credibility","DNS%.Cache#Element#<init>(int,byte,int)").
added_accesses("DNS%.Cache#Element#credibility","DNS%.Cache#Element#toString()").
added_accesses("DNS%.Cache#Element#credibility","DNS%.Cache#addNegative(DNS%.Name,short,short,int,byte,java.lang%.Object)").
added_accesses("DNS%.Cache#Element#credibility","DNS%.Cache#addRRset(DNS%.RRset,byte,java.lang%.Object)").
added_accesses("DNS%.Cache#Element#credibility","DNS%.Cache#addRecord(DNS%.Record,byte,java.lang%.Object)").
added_accesses("DNS%.Cache#Element#credibility","DNS%.Cache#lookupRecords(DNS%.Name,short,short,byte)").
added_accesses("DNS%.Cache#Element#rrset","DNS%.Cache#Element#<init>(DNS%.RRset,byte,int)").
added_accesses("DNS%.Cache#Element#rrset","DNS%.Cache#Element#<init>(DNS%.Record,byte,int)").
added_accesses("DNS%.Cache#Element#rrset","DNS%.Cache#Element#<init>(int,byte,int)").
added_accesses("DNS%.Cache#Element#rrset","DNS%.Cache#Element#toString()").
added_accesses("DNS%.Cache#Element#rrset","DNS%.Cache#Element#update(DNS%.Record)").
added_accesses("DNS%.Cache#Element#rrset","DNS%.Cache#addRecord(DNS%.Record,byte,java.lang%.Object)").
added_accesses("DNS%.Cache#Element#rrset","DNS%.Cache#lookupRecords(DNS%.Name,short,short,byte)").
added_accesses("DNS%.Cache#Element#srcid","DNS%.Cache#Element#<init>(DNS%.RRset,byte,int)").
added_accesses("DNS%.Cache#Element#srcid","DNS%.Cache#Element#<init>(DNS%.Record,byte,int)").
added_accesses("DNS%.Cache#Element#srcid","DNS%.Cache#Element#<init>(int,byte,int)").
added_accesses("DNS%.Cache#Element#srcid","DNS%.Cache#addRecord(DNS%.Record,byte,java.lang%.Object)").
added_accesses("DNS%.Cache#Element#timeIn","DNS%.Cache#Element#<init>(DNS%.RRset,byte,int)").
added_accesses("DNS%.Cache#Element#timeIn","DNS%.Cache#Element#<init>(int,byte,int)").
added_accesses("DNS%.Cache#Element#timeIn","DNS%.Cache#Element#expiredTTL()").
added_accesses("DNS%.Cache#Element#timeIn","DNS%.Cache#Element#update(DNS%.Record)").
added_accesses("DNS%.Cache#Element#ttl","DNS%.Cache#Element#<init>(DNS%.RRset,byte,int)").
added_accesses("DNS%.Cache#Element#ttl","DNS%.Cache#Element#<init>(DNS%.Record,byte,int)").
added_accesses("DNS%.Cache#Element#ttl","DNS%.Cache#Element#<init>(int,byte,int)").
added_accesses("DNS%.Cache#Element#ttl","DNS%.Cache#Element#expiredTTL()").
added_accesses("DNS%.Cache#Element#ttl","DNS%.Cache#Element#update(DNS%.Record)").
added_accesses("DNS%.CacheResponse#SUCCESSFUL","DNS%.CacheResponse#answers()").
added_accesses("DNS%.CacheResponse#backtrace","DNS%.CacheResponse#addCNAME(DNS%.CNAMERecord)").
added_accesses("DNS%.CacheResponse#backtrace","DNS%.CacheResponse#backtrace()").
added_accesses("DNS%.CacheResponse#data","DNS%.CacheResponse#addRRset(DNS%.RRset)").
added_accesses("DNS%.CacheResponse#data","DNS%.CacheResponse#answers()").
added_accesses("DNS%.CacheResponse#data","DNS%.CacheResponse#set(byte,java.lang%.Object)").
added_accesses("DNS%.CacheResponse#type","DNS%.CacheResponse#answers()").
added_accesses("DNS%.CacheResponse#type","DNS%.CacheResponse#set(byte,java.lang%.Object)").
added_accesses("DNS%.Credibility#NONAUTH_ANSWER","%.jnamed#generateReply(DNS%.Message,byte[],int)").
added_accesses("DNS%.DClass#ANY","%.update#doDelete(DNS.utils%.MyStringTokenizer)").
added_accesses("DNS%.DClass#ANY","%.update#doRequire(DNS.utils%.MyStringTokenizer)").
added_accesses("DNS%.DClass#ANY","DNS%.TypeClass#equals(java.lang%.Object)").
added_accesses("DNS%.DClass#IN","DNS%.Master#parseRR(DNS.utils%.MyStringTokenizer,boolean,DNS%.Record,DNS%.Name)").
added_accesses("DNS%.DClass#NONE","%.update#doDelete(DNS.utils%.MyStringTokenizer)").
added_accesses("DNS%.DClass#NONE","%.update#doProhibit(DNS.utils%.MyStringTokenizer)").
added_accesses("DNS%.FindServer#search","DNS%.FindServer#probe()").
added_accesses("DNS%.HINFORecord#cpu","DNS%.HINFORecord#<init>(DNS%.Name,short,int,DNS.utils%.MyStringTokenizer,DNS%.Name)").
added_accesses("DNS%.HINFORecord#os","DNS%.HINFORecord#<init>(DNS%.Name,short,int,DNS.utils%.MyStringTokenizer,DNS%.Name)").
added_accesses("DNS%.KEYRecord#alg","DNS%.KEYRecord#<init>(DNS%.Name,short,int,DNS.utils%.MyStringTokenizer,DNS%.Name)").
added_accesses("DNS%.KEYRecord#flags","DNS%.KEYRecord#<init>(DNS%.Name,short,int,DNS.utils%.MyStringTokenizer,DNS%.Name)").
added_accesses("DNS%.KEYRecord#key","DNS%.KEYRecord#<init>(DNS%.Name,short,int,DNS.utils%.MyStringTokenizer,DNS%.Name)").
added_accesses("DNS%.KEYRecord#proto","DNS%.KEYRecord#<init>(DNS%.Name,short,int,DNS.utils%.MyStringTokenizer,DNS%.Name)").
added_accesses("DNS%.MXRecord#priority","DNS%.MXRecord#<init>(DNS%.Name,short,int,DNS.utils%.MyStringTokenizer,DNS%.Name)").
added_accesses("DNS%.MXRecord#priority","DNS%.MXRecord#rrToWireCanonical(DNS.utils%.DataByteOutputStream)").
added_accesses("DNS%.MXRecord#target","DNS%.MXRecord#<init>(DNS%.Name,short,int,DNS.utils%.MyStringTokenizer,DNS%.Name)").
added_accesses("DNS%.MXRecord#target","DNS%.MXRecord#rrToWireCanonical(DNS.utils%.DataByteOutputStream)").
added_accesses("DNS%.Message#header","DNS%.Message#toString()").
added_accesses("DNS%.NS_CNAME_PTRRecord#target","DNS%.NS_CNAME_PTRRecord#<init>(DNS%.Name,short,short,int,DNS.utils%.MyStringTokenizer,DNS%.Name)").
added_accesses("DNS%.NS_CNAME_PTRRecord#target","DNS%.NS_CNAME_PTRRecord#rrToWireCanonical(DNS.utils%.DataByteOutputStream)").
added_accesses("DNS%.NXTRecord#bitmap","DNS%.NXTRecord#<init>(DNS%.Name,short,int,DNS.utils%.MyStringTokenizer,DNS%.Name)").
added_accesses("DNS%.NXTRecord#bitmap","DNS%.NXTRecord#rrToWireCanonical(DNS.utils%.DataByteOutputStream)").
added_accesses("DNS%.NXTRecord#next","DNS%.NXTRecord#<init>(DNS%.Name,short,int,DNS.utils%.MyStringTokenizer,DNS%.Name)").
added_accesses("DNS%.NXTRecord#next","DNS%.NXTRecord#rrToWireCanonical(DNS.utils%.DataByteOutputStream)").
added_accesses("DNS%.Opcode#UPDATE","DNS%.Message#toString()").
added_accesses("DNS%.RRset#rrs","DNS%.RRset#first()").
added_accesses("DNS%.RRset#rrs","DNS%.RRset#getTTL()").
added_accesses("DNS%.Rcode#NOERROR","DNS%.dns#lookup(DNS%.Name,short,short,byte)").
added_accesses("DNS%.Rcode#NXDOMAIN","DNS%.dns#lookup(DNS%.Name,short,short,byte)").
added_accesses("DNS%.Record#name","DNS%.SIGRecord#<init>(DNS%.Name,short,int,DNS.utils%.MyStringTokenizer,DNS%.Name)").
added_accesses("DNS%.Record#type","DNS%.UNKRecord#<init>(DNS%.Name,short,short,int,DNS.utils%.MyStringTokenizer,DNS%.Name)").
added_accesses("DNS%.SIGRecord#alg","DNS%.SIGRecord#<init>(DNS%.Name,short,int,DNS.utils%.MyStringTokenizer,DNS%.Name)").
added_accesses("DNS%.SIGRecord#alg","DNS%.SIGRecord#rrToWireCanonical(DNS.utils%.DataByteOutputStream)").
added_accesses("DNS%.SIGRecord#covered","DNS%.SIGRecord#<init>(DNS%.Name,short,int,DNS.utils%.MyStringTokenizer,DNS%.Name)").
added_accesses("DNS%.SIGRecord#covered","DNS%.SIGRecord#rrToWireCanonical(DNS.utils%.DataByteOutputStream)").
added_accesses("DNS%.SIGRecord#expire","DNS%.SIGRecord#<init>(DNS%.Name,short,int,DNS.utils%.MyStringTokenizer,DNS%.Name)").
added_accesses("DNS%.SIGRecord#expire","DNS%.SIGRecord#rrToWireCanonical(DNS.utils%.DataByteOutputStream)").
added_accesses("DNS%.SIGRecord#footprint","DNS%.SIGRecord#<init>(DNS%.Name,short,int,DNS.utils%.MyStringTokenizer,DNS%.Name)").
added_accesses("DNS%.SIGRecord#footprint","DNS%.SIGRecord#rrToWireCanonical(DNS.utils%.DataByteOutputStream)").
added_accesses("DNS%.SIGRecord#labels","DNS%.SIGRecord#<init>(DNS%.Name,short,int,DNS.utils%.MyStringTokenizer,DNS%.Name)").
added_accesses("DNS%.SIGRecord#labels","DNS%.SIGRecord#rrToWireCanonical(DNS.utils%.DataByteOutputStream)").
added_accesses("DNS%.SIGRecord#origttl","DNS%.SIGRecord#<init>(DNS%.Name,short,int,DNS.utils%.MyStringTokenizer,DNS%.Name)").
added_accesses("DNS%.SIGRecord#origttl","DNS%.SIGRecord#rrToWireCanonical(DNS.utils%.DataByteOutputStream)").
added_accesses("DNS%.SIGRecord#signature","DNS%.SIGRecord#<init>(DNS%.Name,short,int,DNS.utils%.MyStringTokenizer,DNS%.Name)").
added_accesses("DNS%.SIGRecord#signature","DNS%.SIGRecord#rrToWireCanonical(DNS.utils%.DataByteOutputStream)").
added_accesses("DNS%.SIGRecord#signer","DNS%.SIGRecord#<init>(DNS%.Name,short,int,DNS.utils%.MyStringTokenizer,DNS%.Name)").
added_accesses("DNS%.SIGRecord#signer","DNS%.SIGRecord#rrToWireCanonical(DNS.utils%.DataByteOutputStream)").
added_accesses("DNS%.SIGRecord#timeSigned","DNS%.SIGRecord#<init>(DNS%.Name,short,int,DNS.utils%.MyStringTokenizer,DNS%.Name)").
added_accesses("DNS%.SIGRecord#timeSigned","DNS%.SIGRecord#rrToWireCanonical(DNS.utils%.DataByteOutputStream)").
added_accesses("DNS%.SOARecord#admin","DNS%.SOARecord#<init>(DNS%.Name,short,int,DNS.utils%.MyStringTokenizer,DNS%.Name)").
added_accesses("DNS%.SOARecord#admin","DNS%.SOARecord#rrToWireCanonical(DNS.utils%.DataByteOutputStream)").
added_accesses("DNS%.SOARecord#expire","DNS%.SOARecord#<init>(DNS%.Name,short,int,DNS.utils%.MyStringTokenizer,DNS%.Name)").
added_accesses("DNS%.SOARecord#expire","DNS%.SOARecord#rrToWireCanonical(DNS.utils%.DataByteOutputStream)").
added_accesses("DNS%.SOARecord#host","DNS%.SOARecord#<init>(DNS%.Name,short,int,DNS.utils%.MyStringTokenizer,DNS%.Name)").
added_accesses("DNS%.SOARecord#host","DNS%.SOARecord#rrToWireCanonical(DNS.utils%.DataByteOutputStream)").
added_accesses("DNS%.SOARecord#minimum","DNS%.SOARecord#<init>(DNS%.Name,short,int,DNS.utils%.MyStringTokenizer,DNS%.Name)").
added_accesses("DNS%.SOARecord#minimum","DNS%.SOARecord#rrToWireCanonical(DNS.utils%.DataByteOutputStream)").
added_accesses("DNS%.SOARecord#refresh","DNS%.SOARecord#<init>(DNS%.Name,short,int,DNS.utils%.MyStringTokenizer,DNS%.Name)").
added_accesses("DNS%.SOARecord#refresh","DNS%.SOARecord#rrToWireCanonical(DNS.utils%.DataByteOutputStream)").
added_accesses("DNS%.SOARecord#retry","DNS%.SOARecord#<init>(DNS%.Name,short,int,DNS.utils%.MyStringTokenizer,DNS%.Name)").
added_accesses("DNS%.SOARecord#retry","DNS%.SOARecord#rrToWireCanonical(DNS.utils%.DataByteOutputStream)").
added_accesses("DNS%.SOARecord#serial","DNS%.SOARecord#<init>(DNS%.Name,short,int,DNS.utils%.MyStringTokenizer,DNS%.Name)").
added_accesses("DNS%.SOARecord#serial","DNS%.SOARecord#rrToWireCanonical(DNS.utils%.DataByteOutputStream)").
added_accesses("DNS%.SRVRecord#port","DNS%.SRVRecord#<init>(DNS%.Name,short,int,DNS.utils%.MyStringTokenizer,DNS%.Name)").
added_accesses("DNS%.SRVRecord#port","DNS%.SRVRecord#rrToWireCanonical(DNS.utils%.DataByteOutputStream)").
added_accesses("DNS%.SRVRecord#priority","DNS%.SRVRecord#<init>(DNS%.Name,short,int,DNS.utils%.MyStringTokenizer,DNS%.Name)").
added_accesses("DNS%.SRVRecord#priority","DNS%.SRVRecord#rrToWireCanonical(DNS.utils%.DataByteOutputStream)").
added_accesses("DNS%.SRVRecord#target","DNS%.SRVRecord#<init>(DNS%.Name,short,int,DNS.utils%.MyStringTokenizer,DNS%.Name)").
added_accesses("DNS%.SRVRecord#target","DNS%.SRVRecord#rrToWireCanonical(DNS.utils%.DataByteOutputStream)").
added_accesses("DNS%.SRVRecord#weight","DNS%.SRVRecord#<init>(DNS%.Name,short,int,DNS.utils%.MyStringTokenizer,DNS%.Name)").
added_accesses("DNS%.SRVRecord#weight","DNS%.SRVRecord#rrToWireCanonical(DNS.utils%.DataByteOutputStream)").
added_accesses("DNS%.Section#ADDITIONAL","%.update#doGlue(DNS.utils%.MyStringTokenizer)").
added_accesses("DNS%.Section#ANSWER","%.jnamed#generateReply(DNS%.Message,byte[],int)").
added_accesses("DNS%.Section#ANSWER","DNS%.dns#lookup(DNS%.Name,short,short,byte)").
added_accesses("DNS%.Section#PREREQ","%.update#doProhibit(DNS.utils%.MyStringTokenizer)").
added_accesses("DNS%.Section#PREREQ","%.update#doRequire(DNS.utils%.MyStringTokenizer)").
added_accesses("DNS%.Section#UPDATE","%.update#doAdd(DNS.utils%.MyStringTokenizer)").
added_accesses("DNS%.Section#UPDATE","%.update#doDelete(DNS.utils%.MyStringTokenizer)").
added_accesses("DNS%.Section#updSections","DNS%.Section#updString(int)").
added_accesses("DNS%.TXTRecord#strings","DNS%.TXTRecord#<init>(DNS%.Name,short,int,DNS.utils%.MyStringTokenizer,DNS%.Name)").
added_accesses("DNS%.Type#A","DNS%.ARecord#<init>(DNS%.Name,short,int,DNS.utils%.MyStringTokenizer,DNS%.Name)").
added_accesses("DNS%.Type#ANY","%.update#parseName(DNS.utils%.MyStringTokenizer,short)").
added_accesses("DNS%.Type#ANY","DNS%.Cache#lookupRecords(DNS%.Name,short,short,byte)").
added_accesses("DNS%.Type#ANY","DNS%.NameSet#findSets(DNS%.Name,short,short)").
added_accesses("DNS%.Type#ANY","DNS%.TypeClass#equals(java.lang%.Object)").
added_accesses("DNS%.Type#ANY","DNS%.Zone#findRecords(DNS%.Name,short)").
added_accesses("DNS%.Type#AXFR","%.update#doQuery(DNS.utils%.MyStringTokenizer)").
added_accesses("DNS%.Type#CERT","DNS%.CERTRecord#<init>(DNS%.Name,short,int,DNS.utils%.MyStringTokenizer,DNS%.Name)").
added_accesses("DNS%.Type#CNAME","DNS%.CNAMERecord#<init>(DNS%.Name,short,int,DNS.utils%.MyStringTokenizer,DNS%.Name)").
added_accesses("DNS%.Type#CNAME","DNS%.Zone#findRecords(DNS%.Name,short)").
added_accesses("DNS%.Type#HINFO","DNS%.HINFORecord#<init>(DNS%.Name,short,int,DNS.utils%.MyStringTokenizer,DNS%.Name)").
added_accesses("DNS%.Type#KEY","DNS%.KEYRecord#<init>(DNS%.Name,short,int,DNS.utils%.MyStringTokenizer,DNS%.Name)").
added_accesses("DNS%.Type#MX","DNS%.MXRecord#<init>(DNS%.Name,short,int,DNS.utils%.MyStringTokenizer,DNS%.Name)").
added_accesses("DNS%.Type#NS","DNS%.NSRecord#<init>(DNS%.Name,short,int,DNS.utils%.MyStringTokenizer,DNS%.Name)").
added_accesses("DNS%.Type#NXT","DNS%.NXTRecord#<init>(DNS%.Name,short,int,DNS.utils%.MyStringTokenizer,DNS%.Name)").
added_accesses("DNS%.Type#PTR","DNS%.PTRRecord#<init>(DNS%.Name,short,int,DNS.utils%.MyStringTokenizer,DNS%.Name)").
added_accesses("DNS%.Type#SIG","DNS%.SIGRecord#<init>(DNS%.Name,short,int,DNS.utils%.MyStringTokenizer,DNS%.Name)").
added_accesses("DNS%.Type#SOA","DNS%.SOARecord#<init>(DNS%.Name,short,int,DNS.utils%.MyStringTokenizer,DNS%.Name)").
added_accesses("DNS%.Type#SRV","DNS%.SRVRecord#<init>(DNS%.Name,short,int,DNS.utils%.MyStringTokenizer,DNS%.Name)").
added_accesses("DNS%.Type#TXT","DNS%.TXTRecord#<init>(DNS%.Name,short,int,DNS.utils%.MyStringTokenizer,DNS%.Name)").
added_accesses("DNS%.Zone#dclass","DNS%.Zone#findExactMatch(DNS%.Name,short)").
added_accesses("DNS%.Zone#origin","DNS%.Zone#findRecords(DNS%.Name,short)").
added_accesses("DNS%.ZoneResponse#NODATA","DNS%.Zone#findRecords(DNS%.Name,short)").
added_accesses("DNS%.ZoneResponse#NODATA","DNS%.ZoneResponse#isNODATA()").
added_accesses("DNS%.ZoneResponse#NODATA","DNS%.ZoneResponse#toString()").
added_accesses("DNS%.ZoneResponse#NXDOMAIN","DNS%.Zone#findRecords(DNS%.Name,short)").
added_accesses("DNS%.ZoneResponse#NXDOMAIN","DNS%.ZoneResponse#isNXDOMAIN()").
added_accesses("DNS%.ZoneResponse#NXDOMAIN","DNS%.ZoneResponse#toString()").
added_accesses("DNS%.ZoneResponse#PARTIAL","DNS%.Zone#findRecords(DNS%.Name,short)").
added_accesses("DNS%.ZoneResponse#PARTIAL","DNS%.ZoneResponse#isPartial()").
added_accesses("DNS%.ZoneResponse#PARTIAL","DNS%.ZoneResponse#toString()").
added_accesses("DNS%.ZoneResponse#SUCCESSFUL","DNS%.Zone#findRecords(DNS%.Name,short)").
added_accesses("DNS%.ZoneResponse#SUCCESSFUL","DNS%.ZoneResponse#answers()").
added_accesses("DNS%.ZoneResponse#SUCCESSFUL","DNS%.ZoneResponse#isSuccessful()").
added_accesses("DNS%.ZoneResponse#SUCCESSFUL","DNS%.ZoneResponse#partial()").
added_accesses("DNS%.ZoneResponse#SUCCESSFUL","DNS%.ZoneResponse#toString()").
added_accesses("DNS%.ZoneResponse#backtrace","DNS%.ZoneResponse#addCNAME(DNS%.CNAMERecord)").
added_accesses("DNS%.ZoneResponse#backtrace","DNS%.ZoneResponse#backtrace()").
added_accesses("DNS%.ZoneResponse#data","DNS%.ZoneResponse#<init>(byte,java.lang%.Object)").
added_accesses("DNS%.ZoneResponse#data","DNS%.ZoneResponse#addRRset(DNS%.RRset)").
added_accesses("DNS%.ZoneResponse#data","DNS%.ZoneResponse#answers()").
added_accesses("DNS%.ZoneResponse#data","DNS%.ZoneResponse#partial()").
added_accesses("DNS%.ZoneResponse#data","DNS%.ZoneResponse#set(byte,java.lang%.Object)").
added_accesses("DNS%.ZoneResponse#data","DNS%.ZoneResponse#toString()").
added_accesses("DNS%.ZoneResponse#type","DNS%.ZoneResponse#<init>(byte,java.lang%.Object)").
added_accesses("DNS%.ZoneResponse#type","DNS%.ZoneResponse#answers()").
added_accesses("DNS%.ZoneResponse#type","DNS%.ZoneResponse#isNODATA()").
added_accesses("DNS%.ZoneResponse#type","DNS%.ZoneResponse#isNXDOMAIN()").
added_accesses("DNS%.ZoneResponse#type","DNS%.ZoneResponse#isPartial()").
added_accesses("DNS%.ZoneResponse#type","DNS%.ZoneResponse#isSuccessful()").
added_accesses("DNS%.ZoneResponse#type","DNS%.ZoneResponse#partial()").
added_accesses("DNS%.ZoneResponse#type","DNS%.ZoneResponse#set(byte,java.lang%.Object)").
added_accesses("DNS%.ZoneResponse#type","DNS%.ZoneResponse#toString()").
added_accesses("DNS%.dns#cache","DNS%.dns#lookup(DNS%.Name,short,short,byte)").
added_accesses("DNS%.dns#res","DNS%.dns#lookup(DNS%.Name,short,short,byte)").
added_accesses("DNS%.dns#searchPath","DNS%.dns#getRecords(java.lang%.String,short,short,byte)").
added_accesses("DNS%.dns#searchPathSet","DNS%.dns#getRecords(java.lang%.String,short,short,byte)").
added_accesses("DNS%.dns#searchPathSet","DNS%.dns#setSearchPath(java.lang%.String[])").
added_accesses("java.lang%.Integer#TYPE","DNS%.Record#fromString(DNS%.Name,short,short,int,DNS.utils%.MyStringTokenizer,DNS%.Name)").
added_accesses("java.lang%.Short#TYPE","DNS%.Record#fromString(DNS%.Name,short,short,int,DNS.utils%.MyStringTokenizer,DNS%.Name)").
added_accesses("java.lang%.System#in","%.update#doFile(DNS.utils%.MyStringTokenizer,java.util%.Vector,java.util%.Vector)").
added_accesses("java.lang%.System#in","DNS.utils%.MyStringTokenizer#main(java.lang%.String[])").
added_accesses("java.lang%.System#out","DNS%.ARecord#<init>(DNS%.Name,short,int,DNS.utils%.MyStringTokenizer,DNS%.Name)").
added_accesses("java.lang%.System#out","DNS%.Record#fromString(DNS%.Name,short,short,int,DNS.utils%.MyStringTokenizer,DNS%.Name)").
added_accesses("java.lang%.System#out","DNS%.UNKRecord#<init>(DNS%.Name,short,short,int,DNS.utils%.MyStringTokenizer,DNS%.Name)").
added_accesses("java.lang%.System#out","DNS.utils%.MyStringTokenizer#main(java.lang%.String[])").
added_calls("%.jnamed#findExactMatch(DNS%.Name,short,short,boolean)","DNS%.Zone#findExactMatch(DNS%.Name,short)").
added_calls("%.jnamed#formerrMessage(byte[])","DNS%.Message#removeAllRecords(int)").
added_calls("%.jnamed#generateReply(DNS%.Message,byte[],int)","DNS%.Cache#lookupRecords(DNS%.Name,short,short,byte)").
added_calls("%.jnamed#generateReply(DNS%.Message,byte[],int)","DNS%.Record#getDClass()").
added_calls("%.jnamed#generateReply(DNS%.Message,byte[],int)","DNS%.Zone#findRecords(DNS%.Name,short)").
added_calls("%.jnamed#generateReply(DNS%.Message,byte[],int)","DNS%.ZoneResponse#answers()").
added_calls("%.jnamed#generateReply(DNS%.Message,byte[],int)","DNS%.ZoneResponse#backtrace()").
added_calls("%.jnamed#generateReply(DNS%.Message,byte[],int)","DNS%.ZoneResponse#isNXDOMAIN()").
added_calls("%.jnamed#generateReply(DNS%.Message,byte[],int)","DNS%.ZoneResponse#isSuccessful()").
added_calls("%.jnamed#generateReply(DNS%.Message,byte[],int)","java.util%.Vector#elements()").
added_calls("%.jnamed#notimplMessage(DNS%.Message)","DNS%.Message#removeAllRecords(int)").
added_calls("%.update#<init>(java.io%.InputStream)","%.update#doAdd(DNS.utils%.MyStringTokenizer)").
added_calls("%.update#<init>(java.io%.InputStream)","%.update#doAssert(DNS.utils%.MyStringTokenizer)").
added_calls("%.update#<init>(java.io%.InputStream)","%.update#doDelete(DNS.utils%.MyStringTokenizer)").
added_calls("%.update#<init>(java.io%.InputStream)","%.update#doFile(DNS.utils%.MyStringTokenizer,java.util%.Vector,java.util%.Vector)").
added_calls("%.update#<init>(java.io%.InputStream)","%.update#doGlue(DNS.utils%.MyStringTokenizer)").
added_calls("%.update#<init>(java.io%.InputStream)","%.update#doLog(DNS.utils%.MyStringTokenizer)").
added_calls("%.update#<init>(java.io%.InputStream)","%.update#doProhibit(DNS.utils%.MyStringTokenizer)").
added_calls("%.update#<init>(java.io%.InputStream)","%.update#doQuery(DNS.utils%.MyStringTokenizer)").
added_calls("%.update#<init>(java.io%.InputStream)","%.update#doRequire(DNS.utils%.MyStringTokenizer)").
added_calls("%.update#<init>(java.io%.InputStream)","DNS%.Master#readExtendedLine(java.io%.BufferedReader)").
added_calls("%.update#doAdd(DNS.utils%.MyStringTokenizer)","%.update#parseRR(DNS.utils%.MyStringTokenizer,short,int)").
added_calls("%.update#doAdd(DNS.utils%.MyStringTokenizer)","%.update#print(java.lang%.Object)").
added_calls("%.update#doAdd(DNS.utils%.MyStringTokenizer)","DNS%.Message#addRecord(DNS%.Record,int)").
added_calls("%.update#doAdd(DNS.utils%.MyStringTokenizer)","DNS.utils%.MyStringTokenizer#nextToken()").
added_calls("%.update#doAdd(DNS.utils%.MyStringTokenizer)","DNS.utils%.MyStringTokenizer#putBackToken(java.lang%.String)").
added_calls("%.update#doAdd(DNS.utils%.MyStringTokenizer)","java.lang%.String#equals(java.lang%.Object)").
added_calls("%.update#doAdd(DNS.utils%.MyStringTokenizer)","java.lang%.String#startsWith(java.lang%.String)").
added_calls("%.update#doAssert(DNS.utils%.MyStringTokenizer)","%.update#print(java.lang%.Object)").
added_calls("%.update#doAssert(DNS.utils%.MyStringTokenizer)","DNS%.Header#getCount(int)").
added_calls("%.update#doAssert(DNS.utils%.MyStringTokenizer)","DNS%.Header#getRcode()").
added_calls("%.update#doAssert(DNS.utils%.MyStringTokenizer)","DNS%.Message#getHeader()").
added_calls("%.update#doAssert(DNS.utils%.MyStringTokenizer)","DNS%.Rcode#string(int)").
added_calls("%.update#doAssert(DNS.utils%.MyStringTokenizer)","DNS%.Rcode#value(java.lang%.String)").
added_calls("%.update#doAssert(DNS.utils%.MyStringTokenizer)","DNS%.Section#value(java.lang%.String)").
added_calls("%.update#doAssert(DNS.utils%.MyStringTokenizer)","DNS.utils%.MyStringTokenizer#hasMoreTokens()").
added_calls("%.update#doAssert(DNS.utils%.MyStringTokenizer)","DNS.utils%.MyStringTokenizer#nextToken()").
added_calls("%.update#doAssert(DNS.utils%.MyStringTokenizer)","java.lang%.Short#<init>(short)").
added_calls("%.update#doAssert(DNS.utils%.MyStringTokenizer)","java.lang%.Short#parseShort(java.lang%.String)").
added_calls("%.update#doAssert(DNS.utils%.MyStringTokenizer)","java.lang%.Short#toString()").
added_calls("%.update#doAssert(DNS.utils%.MyStringTokenizer)","java.lang%.String#equalsIgnoreCase(java.lang%.String)").
added_calls("%.update#doDelete(DNS.utils%.MyStringTokenizer)","%.update#parseName(DNS.utils%.MyStringTokenizer,short)").
added_calls("%.update#doDelete(DNS.utils%.MyStringTokenizer)","%.update#parseRR(DNS.utils%.MyStringTokenizer,short,int)").
added_calls("%.update#doDelete(DNS.utils%.MyStringTokenizer)","%.update#parseSet(DNS.utils%.MyStringTokenizer,short)").
added_calls("%.update#doDelete(DNS.utils%.MyStringTokenizer)","%.update#print(java.lang%.Object)").
added_calls("%.update#doDelete(DNS.utils%.MyStringTokenizer)","DNS%.Message#addRecord(DNS%.Record,int)").
added_calls("%.update#doDelete(DNS.utils%.MyStringTokenizer)","DNS.utils%.MyStringTokenizer#nextToken()").
added_calls("%.update#doDelete(DNS.utils%.MyStringTokenizer)","java.lang%.String#equals(java.lang%.Object)").
added_calls("%.update#doFile(DNS.utils%.MyStringTokenizer,java.util%.Vector,java.util%.Vector)","%.update#print(java.lang%.Object)").
added_calls("%.update#doFile(DNS.utils%.MyStringTokenizer,java.util%.Vector,java.util%.Vector)","DNS.utils%.MyStringTokenizer#nextToken()").
added_calls("%.update#doFile(DNS.utils%.MyStringTokenizer,java.util%.Vector,java.util%.Vector)","java.io%.BufferedReader#<init>(java.io%.Reader)").
added_calls("%.update#doFile(DNS.utils%.MyStringTokenizer,java.util%.Vector,java.util%.Vector)","java.io%.FileInputStream#<init>(java.lang%.String)").
added_calls("%.update#doFile(DNS.utils%.MyStringTokenizer,java.util%.Vector,java.util%.Vector)","java.io%.InputStreamReader#<init>(java.io%.InputStream)").
added_calls("%.update#doFile(DNS.utils%.MyStringTokenizer,java.util%.Vector,java.util%.Vector)","java.lang%.String#equals(java.lang%.Object)").
added_calls("%.update#doFile(DNS.utils%.MyStringTokenizer,java.util%.Vector,java.util%.Vector)","java.util%.Vector#addElement(java.lang%.Object)").
added_calls("%.update#doGlue(DNS.utils%.MyStringTokenizer)","%.update#parseRR(DNS.utils%.MyStringTokenizer,short,int)").
added_calls("%.update#doGlue(DNS.utils%.MyStringTokenizer)","%.update#print(java.lang%.Object)").
added_calls("%.update#doGlue(DNS.utils%.MyStringTokenizer)","DNS%.Message#addRecord(DNS%.Record,int)").
added_calls("%.update#doGlue(DNS.utils%.MyStringTokenizer)","DNS.utils%.MyStringTokenizer#nextToken()").
added_calls("%.update#doGlue(DNS.utils%.MyStringTokenizer)","DNS.utils%.MyStringTokenizer#putBackToken(java.lang%.String)").
added_calls("%.update#doGlue(DNS.utils%.MyStringTokenizer)","java.lang%.String#equals(java.lang%.Object)").
added_calls("%.update#doGlue(DNS.utils%.MyStringTokenizer)","java.lang%.String#startsWith(java.lang%.String)").
added_calls("%.update#doLog(DNS.utils%.MyStringTokenizer)","%.update#print(java.lang%.Object)").
added_calls("%.update#doLog(DNS.utils%.MyStringTokenizer)","DNS.utils%.MyStringTokenizer#nextToken()").
added_calls("%.update#doLog(DNS.utils%.MyStringTokenizer)","java.io%.FileOutputStream#<init>(java.lang%.String)").
added_calls("%.update#doLog(DNS.utils%.MyStringTokenizer)","java.io%.PrintStream#<init>(java.io%.OutputStream)").
added_calls("%.update#doProhibit(DNS.utils%.MyStringTokenizer)","%.update#parseName(DNS.utils%.MyStringTokenizer,short)").
added_calls("%.update#doProhibit(DNS.utils%.MyStringTokenizer)","%.update#parseRR(DNS.utils%.MyStringTokenizer,short,int)").
added_calls("%.update#doProhibit(DNS.utils%.MyStringTokenizer)","%.update#parseSet(DNS.utils%.MyStringTokenizer,short)").
added_calls("%.update#doProhibit(DNS.utils%.MyStringTokenizer)","%.update#print(java.lang%.Object)").
added_calls("%.update#doProhibit(DNS.utils%.MyStringTokenizer)","DNS%.Message#addRecord(DNS%.Record,int)").
added_calls("%.update#doProhibit(DNS.utils%.MyStringTokenizer)","DNS.utils%.MyStringTokenizer#nextToken()").
added_calls("%.update#doProhibit(DNS.utils%.MyStringTokenizer)","java.lang%.String#equals(java.lang%.Object)").
added_calls("%.update#doQuery(DNS.utils%.MyStringTokenizer)","%.update#parseSet(DNS.utils%.MyStringTokenizer,short)").
added_calls("%.update#doQuery(DNS.utils%.MyStringTokenizer)","%.update#print(java.lang%.Object)").
added_calls("%.update#doQuery(DNS.utils%.MyStringTokenizer)","DNS%.Message#newQuery(DNS%.Record)").
added_calls("%.update#doQuery(DNS.utils%.MyStringTokenizer)","DNS%.Record#getType()").
added_calls("%.update#doQuery(DNS.utils%.MyStringTokenizer)","DNS%.Resolver#send(DNS%.Message)").
added_calls("%.update#doQuery(DNS.utils%.MyStringTokenizer)","DNS%.Resolver#sendAXFR(DNS%.Message)").
added_calls("%.update#doQuery(DNS.utils%.MyStringTokenizer)","DNS%.SimpleResolver#<init>(java.lang%.String)").
added_calls("%.update#doRequire(DNS.utils%.MyStringTokenizer)","%.update#parseName(DNS.utils%.MyStringTokenizer,short)").
added_calls("%.update#doRequire(DNS.utils%.MyStringTokenizer)","%.update#parseRR(DNS.utils%.MyStringTokenizer,short,int)").
added_calls("%.update#doRequire(DNS.utils%.MyStringTokenizer)","%.update#parseSet(DNS.utils%.MyStringTokenizer,short)").
added_calls("%.update#doRequire(DNS.utils%.MyStringTokenizer)","%.update#print(java.lang%.Object)").
added_calls("%.update#doRequire(DNS.utils%.MyStringTokenizer)","DNS%.Message#addRecord(DNS%.Record,int)").
added_calls("%.update#doRequire(DNS.utils%.MyStringTokenizer)","DNS.utils%.MyStringTokenizer#nextToken()").
added_calls("%.update#doRequire(DNS.utils%.MyStringTokenizer)","java.lang%.String#equals(java.lang%.Object)").
added_calls("%.update#parseName(DNS.utils%.MyStringTokenizer,short)","DNS%.Name#<init>(java.lang%.String,DNS%.Name)").
added_calls("%.update#parseName(DNS.utils%.MyStringTokenizer,short)","DNS%.Record#newRecord(DNS%.Name,short,short,int)").
added_calls("%.update#parseName(DNS.utils%.MyStringTokenizer,short)","DNS.utils%.MyStringTokenizer#nextToken()").
added_calls("%.update#parseRR(DNS.utils%.MyStringTokenizer,short,int)","DNS%.DClass#value(java.lang%.String)").
added_calls("%.update#parseRR(DNS.utils%.MyStringTokenizer,short,int)","DNS%.Name#<init>(java.lang%.String,DNS%.Name)").
added_calls("%.update#parseRR(DNS.utils%.MyStringTokenizer,short,int)","DNS%.Record#fromString(DNS%.Name,short,short,int,DNS.utils%.MyStringTokenizer,DNS%.Name)").
added_calls("%.update#parseRR(DNS.utils%.MyStringTokenizer,short,int)","DNS%.TTL#parseTTL(java.lang%.String)").
added_calls("%.update#parseRR(DNS.utils%.MyStringTokenizer,short,int)","DNS%.Type#value(java.lang%.String)").
added_calls("%.update#parseRR(DNS.utils%.MyStringTokenizer,short,int)","DNS.utils%.MyStringTokenizer#nextToken()").
added_calls("%.update#parseRR(DNS.utils%.MyStringTokenizer,short,int)","java.io%.IOException#<init>(java.lang%.String)").
added_calls("%.update#parseSet(DNS.utils%.MyStringTokenizer,short)","DNS%.Name#<init>(java.lang%.String,DNS%.Name)").
added_calls("%.update#parseSet(DNS.utils%.MyStringTokenizer,short)","DNS%.Record#newRecord(DNS%.Name,short,short,int)").
added_calls("%.update#parseSet(DNS.utils%.MyStringTokenizer,short)","DNS%.Type#value(java.lang%.String)").
added_calls("%.update#parseSet(DNS.utils%.MyStringTokenizer,short)","DNS.utils%.MyStringTokenizer#nextToken()").
added_calls("%.update#parseSet(DNS.utils%.MyStringTokenizer,short)","java.io%.IOException#<init>(java.lang%.String)").
added_calls("DNS%.ARecord#<init>(DNS%.Name,short,int,DNS.utils%.MyStringTokenizer,DNS%.Name)","DNS%.Record#<init>(DNS%.Name,short,short,int)").
added_calls("DNS%.ARecord#<init>(DNS%.Name,short,int,DNS.utils%.MyStringTokenizer,DNS%.Name)","DNS.utils%.MyStringTokenizer#nextToken()").
added_calls("DNS%.ARecord#<init>(DNS%.Name,short,int,DNS.utils%.MyStringTokenizer,DNS%.Name)","java.io%.PrintStream#println(java.lang%.String)").
added_calls("DNS%.ARecord#<init>(DNS%.Name,short,int,DNS.utils%.MyStringTokenizer,DNS%.Name)","java.lang%.String#equals(java.lang%.Object)").
added_calls("DNS%.ARecord#<init>(DNS%.Name,short,int,DNS.utils%.MyStringTokenizer,DNS%.Name)","java.lang%.System#exit(int)").
added_calls("DNS%.ARecord#<init>(DNS%.Name,short,int,DNS.utils%.MyStringTokenizer,DNS%.Name)","java.net%.InetAddress#equals(java.lang%.Object)").
added_calls("DNS%.ARecord#<init>(DNS%.Name,short,int,DNS.utils%.MyStringTokenizer,DNS%.Name)","java.net%.InetAddress#getByName(java.lang%.String)").
added_calls("DNS%.ARecord#<init>(DNS%.Name,short,int,DNS.utils%.MyStringTokenizer,DNS%.Name)","java.net%.InetAddress#getLocalHost()").
added_calls("DNS%.CERTRecord#<init>(DNS%.Name,short,int,DNS.utils%.MyStringTokenizer,DNS%.Name)","DNS%.Record#<init>(DNS%.Name,short,short,int)").
added_calls("DNS%.CERTRecord#<init>(DNS%.Name,short,int,DNS.utils%.MyStringTokenizer,DNS%.Name)","DNS.utils%.MyStringTokenizer#nextToken()").
added_calls("DNS%.CERTRecord#<init>(DNS%.Name,short,int,DNS.utils%.MyStringTokenizer,DNS%.Name)","DNS.utils%.base64#fromString(java.lang%.String)").
added_calls("DNS%.CERTRecord#<init>(DNS%.Name,short,int,DNS.utils%.MyStringTokenizer,DNS%.Name)","java.lang%.Integer#parseInt(java.lang%.String)").
added_calls("DNS%.CERTRecord#toString()","DNS.utils%.base64#formatString(byte[],int,java.lang%.String,boolean)").
added_calls("DNS%.CNAMERecord#<init>(DNS%.Name,short,int,DNS.utils%.MyStringTokenizer,DNS%.Name)","DNS%.NS_CNAME_PTRRecord#<init>(DNS%.Name,short,short,int,DNS.utils%.MyStringTokenizer,DNS%.Name)").
added_calls("DNS%.Cache#Element#<init>(DNS%.RRset,byte,int)","DNS%.RRset#getTTL()").
added_calls("DNS%.Cache#Element#<init>(DNS%.RRset,byte,int)","java.lang%.System#currentTimeMillis()").
added_calls("DNS%.Cache#Element#<init>(DNS%.Record,byte,int)","DNS%.Cache#Element#update(DNS%.Record)").
added_calls("DNS%.Cache#Element#<init>(DNS%.Record,byte,int)","DNS%.RRset#<init>()").
added_calls("DNS%.Cache#Element#<init>(int,byte,int)","java.lang%.System#currentTimeMillis()").
added_calls("DNS%.Cache#addNegative(DNS%.Name,short,short,int,byte,java.lang%.Object)","DNS%.Cache#Element#<init>(int,byte,int)").
added_calls("DNS%.Cache#addNegative(DNS%.Name,short,short,int,byte,java.lang%.Object)","DNS%.NameSet#findExactSet(DNS%.Name,short,short)").
added_calls("DNS%.Cache#addRRset(DNS%.RRset,byte,java.lang%.Object)","DNS%.Cache#Element#<init>(DNS%.RRset,byte,int)").
added_calls("DNS%.Cache#addRRset(DNS%.RRset,byte,java.lang%.Object)","DNS%.NameSet#findExactSet(DNS%.Name,short,short)").
added_calls("DNS%.Cache#addRecord(DNS%.Record,byte,java.lang%.Object)","DNS%.Cache#Element#<init>(DNS%.Record,byte,int)").
added_calls("DNS%.Cache#findRecords(DNS%.Name,short,short,byte)","DNS%.CacheResponse#answers()").
added_calls("DNS%.Cache#lookupRecords(DNS%.Name,short,short,byte)","DNS%.CacheResponse#addCNAME(DNS%.CNAMERecord)").
added_calls("DNS%.Cache#lookupRecords(DNS%.Name,short,short,byte)","DNS%.CacheResponse#addRRset(DNS%.RRset)").
added_calls("DNS%.Cache#lookupRecords(DNS%.Name,short,short,byte)","DNS%.CacheResponse#set(byte,java.lang%.Object)").
added_calls("DNS%.Cache#lookupRecords(DNS%.Name,short,short,byte)","DNS%.RRset#first()").
added_calls("DNS%.CacheResponse#addCNAME(DNS%.CNAMERecord)","java.util%.Vector#<init>()").
added_calls("DNS%.CacheResponse#addCNAME(DNS%.CNAMERecord)","java.util%.Vector#insertElementAt(java.lang%.Object,int)").
added_calls("DNS%.CacheResponse#addRRset(DNS%.RRset)","java.util%.Vector#<init>()").
added_calls("DNS%.CacheResponse#addRRset(DNS%.RRset)","java.util%.Vector#addElement(java.lang%.Object)").
added_calls("DNS%.CacheResponse#answers()","java.util%.Vector#elementAt(int)").
added_calls("DNS%.CacheResponse#answers()","java.util%.Vector#size()").
added_calls("DNS%.HINFORecord#<init>(DNS%.Name,short,int,DNS.utils%.MyStringTokenizer,DNS%.Name)","DNS%.Record#<init>(DNS%.Name,short,short,int)").
added_calls("DNS%.HINFORecord#<init>(DNS%.Name,short,int,DNS.utils%.MyStringTokenizer,DNS%.Name)","DNS.utils%.MyStringTokenizer#nextToken()").
added_calls("DNS%.KEYRecord#<init>(DNS%.Name,short,int,DNS.utils%.MyStringTokenizer,DNS%.Name)","DNS%.Record#<init>(DNS%.Name,short,short,int)").
added_calls("DNS%.KEYRecord#<init>(DNS%.Name,short,int,DNS.utils%.MyStringTokenizer,DNS%.Name)","DNS.utils%.MyStringTokenizer#nextToken()").
added_calls("DNS%.KEYRecord#<init>(DNS%.Name,short,int,DNS.utils%.MyStringTokenizer,DNS%.Name)","DNS.utils%.base64#fromString(java.lang%.String)").
added_calls("DNS%.KEYRecord#<init>(DNS%.Name,short,int,DNS.utils%.MyStringTokenizer,DNS%.Name)","java.lang%.Integer#decode(java.lang%.String)").
added_calls("DNS%.KEYRecord#<init>(DNS%.Name,short,int,DNS.utils%.MyStringTokenizer,DNS%.Name)","java.lang%.Integer#intValue()").
added_calls("DNS%.KEYRecord#<init>(DNS%.Name,short,int,DNS.utils%.MyStringTokenizer,DNS%.Name)","java.lang%.Integer#parseInt(java.lang%.String)").
added_calls("DNS%.KEYRecord#toString()","DNS.utils%.base64#formatString(byte[],int,java.lang%.String,boolean)").
added_calls("DNS%.MXRecord#<init>(DNS%.Name,short,int,DNS.utils%.MyStringTokenizer,DNS%.Name)","DNS%.Name#<init>(java.lang%.String,DNS%.Name)").
added_calls("DNS%.MXRecord#<init>(DNS%.Name,short,int,DNS.utils%.MyStringTokenizer,DNS%.Name)","DNS%.Record#<init>(DNS%.Name,short,short,int)").
added_calls("DNS%.MXRecord#<init>(DNS%.Name,short,int,DNS.utils%.MyStringTokenizer,DNS%.Name)","DNS.utils%.MyStringTokenizer#nextToken()").
added_calls("DNS%.MXRecord#<init>(DNS%.Name,short,int,DNS.utils%.MyStringTokenizer,DNS%.Name)","java.lang%.Short#parseShort(java.lang%.String)").
added_calls("DNS%.MXRecord#rrToWireCanonical(DNS.utils%.DataByteOutputStream)","DNS%.Name#toWireCanonical(DNS.utils%.DataByteOutputStream)").
added_calls("DNS%.MXRecord#rrToWireCanonical(DNS.utils%.DataByteOutputStream)","DNS.utils%.DataByteOutputStream#writeShort(int)").
added_calls("DNS%.Master#nextRecord()","DNS%.Master#parseOrigin(DNS.utils%.MyStringTokenizer)").
added_calls("DNS%.Master#nextRecord()","DNS%.Master#parseRR(DNS.utils%.MyStringTokenizer,boolean,DNS%.Record,DNS%.Name)").
added_calls("DNS%.Master#nextRecord()","DNS%.Master#readExtendedLine(java.io%.BufferedReader)").
added_calls("DNS%.Master#parseOrigin(DNS.utils%.MyStringTokenizer)","DNS%.Name#<init>(java.lang%.String)").
added_calls("DNS%.Master#parseOrigin(DNS.utils%.MyStringTokenizer)","DNS.utils%.MyStringTokenizer#nextToken()").
added_calls("DNS%.Master#parseRR(DNS.utils%.MyStringTokenizer,boolean,DNS%.Record,DNS%.Name)","DNS%.DClass#value(java.lang%.String)").
added_calls("DNS%.Master#parseRR(DNS.utils%.MyStringTokenizer,boolean,DNS%.Record,DNS%.Name)","DNS%.Name#<init>(java.lang%.String,DNS%.Name)").
added_calls("DNS%.Master#parseRR(DNS.utils%.MyStringTokenizer,boolean,DNS%.Record,DNS%.Name)","DNS%.Record#fromString(DNS%.Name,short,short,int,DNS.utils%.MyStringTokenizer,DNS%.Name)").
added_calls("DNS%.Master#parseRR(DNS.utils%.MyStringTokenizer,boolean,DNS%.Record,DNS%.Name)","DNS%.Record#getName()").
added_calls("DNS%.Master#parseRR(DNS.utils%.MyStringTokenizer,boolean,DNS%.Record,DNS%.Name)","DNS%.Record#getTTL()").
added_calls("DNS%.Master#parseRR(DNS.utils%.MyStringTokenizer,boolean,DNS%.Record,DNS%.Name)","DNS%.TTL#parseTTL(java.lang%.String)").
added_calls("DNS%.Master#parseRR(DNS.utils%.MyStringTokenizer,boolean,DNS%.Record,DNS%.Name)","DNS%.Type#value(java.lang%.String)").
added_calls("DNS%.Master#parseRR(DNS.utils%.MyStringTokenizer,boolean,DNS%.Record,DNS%.Name)","DNS.utils%.MyStringTokenizer#nextToken()").
added_calls("DNS%.Master#parseRR(DNS.utils%.MyStringTokenizer,boolean,DNS%.Record,DNS%.Name)","java.io%.IOException#<init>(java.lang%.String)").
added_calls("DNS%.Master#readExtendedLine(java.io%.BufferedReader)","DNS%.Master#stripTrailing(java.lang%.String)").
added_calls("DNS%.Master#readExtendedLine(java.io%.BufferedReader)","java.io%.BufferedReader#readLine()").
added_calls("DNS%.Master#readExtendedLine(java.io%.BufferedReader)","java.lang%.String#endsWith(java.lang%.String)").
added_calls("DNS%.Master#readExtendedLine(java.io%.BufferedReader)","java.lang%.String#length()").
added_calls("DNS%.Master#readExtendedLine(java.io%.BufferedReader)","java.lang%.String#substring(int,int)").
added_calls("DNS%.Master#readExtendedLine(java.io%.BufferedReader)","java.lang%.StringBuffer#<init>(java.lang%.String)").
added_calls("DNS%.Master#readExtendedLine(java.io%.BufferedReader)","java.lang%.StringBuffer#append(java.lang%.String)").
added_calls("DNS%.Master#readExtendedLine(java.io%.BufferedReader)","java.lang%.StringBuffer#toString()").
added_calls("DNS%.Master#stripTrailing(java.lang%.String)","java.lang%.Character#isWhitespace(char)").
added_calls("DNS%.Master#stripTrailing(java.lang%.String)","java.lang%.String#charAt(int)").
added_calls("DNS%.Master#stripTrailing(java.lang%.String)","java.lang%.String#lastIndexOf(int)").
added_calls("DNS%.Master#stripTrailing(java.lang%.String)","java.lang%.String#length()").
added_calls("DNS%.Master#stripTrailing(java.lang%.String)","java.lang%.String#substring(int,int)").
added_calls("DNS%.Message#toString()","DNS%.Header#getOpcode()").
added_calls("DNS%.Message#toString()","DNS%.Section#longString(int)").
added_calls("DNS%.Message#toString()","DNS%.Section#updString(int)").
added_calls("DNS%.NSRecord#<init>(DNS%.Name,short,int,DNS.utils%.MyStringTokenizer,DNS%.Name)","DNS%.NS_CNAME_PTRRecord#<init>(DNS%.Name,short,short,int,DNS.utils%.MyStringTokenizer,DNS%.Name)").
added_calls("DNS%.NS_CNAME_PTRRecord#<init>(DNS%.Name,short,short,int,DNS.utils%.MyStringTokenizer,DNS%.Name)","DNS%.Name#<init>(java.lang%.String,DNS%.Name)").
added_calls("DNS%.NS_CNAME_PTRRecord#<init>(DNS%.Name,short,short,int,DNS.utils%.MyStringTokenizer,DNS%.Name)","DNS%.Record#<init>(DNS%.Name,short,short,int)").
added_calls("DNS%.NS_CNAME_PTRRecord#<init>(DNS%.Name,short,short,int,DNS.utils%.MyStringTokenizer,DNS%.Name)","DNS.utils%.MyStringTokenizer#nextToken()").
added_calls("DNS%.NS_CNAME_PTRRecord#rrToWireCanonical(DNS.utils%.DataByteOutputStream)","DNS%.Name#toWireCanonical(DNS.utils%.DataByteOutputStream)").
added_calls("DNS%.NXTRecord#<init>(DNS%.Name,short,int,DNS.utils%.MyStringTokenizer,DNS%.Name)","DNS%.Name#<init>(java.lang%.String,DNS%.Name)").
added_calls("DNS%.NXTRecord#<init>(DNS%.Name,short,int,DNS.utils%.MyStringTokenizer,DNS%.Name)","DNS%.Record#<init>(DNS%.Name,short,short,int)").
added_calls("DNS%.NXTRecord#<init>(DNS%.Name,short,int,DNS.utils%.MyStringTokenizer,DNS%.Name)","DNS%.Type#value(java.lang%.String)").
added_calls("DNS%.NXTRecord#<init>(DNS%.Name,short,int,DNS.utils%.MyStringTokenizer,DNS%.Name)","DNS.utils%.MyStringTokenizer#hasMoreTokens()").
added_calls("DNS%.NXTRecord#<init>(DNS%.Name,short,int,DNS.utils%.MyStringTokenizer,DNS%.Name)","DNS.utils%.MyStringTokenizer#nextToken()").
added_calls("DNS%.NXTRecord#<init>(DNS%.Name,short,int,DNS.utils%.MyStringTokenizer,DNS%.Name)","java.util%.BitSet#<init>()").
added_calls("DNS%.NXTRecord#<init>(DNS%.Name,short,int,DNS.utils%.MyStringTokenizer,DNS%.Name)","java.util%.BitSet#set(int)").
added_calls("DNS%.NXTRecord#<init>(DNS%.Name,short,int,DNS.utils%.MyStringTokenizer,DNS%.Name)","java.util%.Vector#<init>()").
added_calls("DNS%.NXTRecord#rrToWireCanonical(DNS.utils%.DataByteOutputStream)","DNS%.Name#toWireCanonical(DNS.utils%.DataByteOutputStream)").
added_calls("DNS%.NXTRecord#rrToWireCanonical(DNS.utils%.DataByteOutputStream)","DNS.utils%.DataByteOutputStream#writeByte(int)").
added_calls("DNS%.NXTRecord#rrToWireCanonical(DNS.utils%.DataByteOutputStream)","java.util%.BitSet#get(int)").
added_calls("DNS%.NXTRecord#rrToWireCanonical(DNS.utils%.DataByteOutputStream)","java.util%.BitSet#size()").
added_calls("DNS%.NameSet#findSets(DNS%.Name,short,short)","java.util%.Enumeration#hasMoreElements()").
added_calls("DNS%.NameSet#findSets(DNS%.Name,short,short)","java.util%.Enumeration#nextElement()").
added_calls("DNS%.NameSet#findSets(DNS%.Name,short,short)","java.util%.Hashtable#elements()").
added_calls("DNS%.NameSet#findSets(DNS%.Name,short,short)","java.util%.Hashtable#size()").
added_calls("DNS%.OPTRecord#rrToWireCanonical(DNS.utils%.DataByteOutputStream)","java.io%.IOException#<init>(java.lang%.String)").
added_calls("DNS%.PTRRecord#<init>(DNS%.Name,short,int,DNS.utils%.MyStringTokenizer,DNS%.Name)","DNS%.NS_CNAME_PTRRecord#<init>(DNS%.Name,short,short,int,DNS.utils%.MyStringTokenizer,DNS%.Name)").
added_calls("DNS%.RRset#first()","java.util%.Vector#elementAt(int)").
added_calls("DNS%.RRset#first()","java.util%.Vector#size()").
added_calls("DNS%.RRset#getDClass()","java.util%.Vector#size()").
added_calls("DNS%.RRset#getName()","java.util%.Vector#size()").
added_calls("DNS%.RRset#getTTL()","java.util%.Vector#size()").
added_calls("DNS%.RRset#getType()","java.util%.Vector#size()").
added_calls("DNS%.Record#fromString(DNS%.Name,short,short,int,DNS.utils%.MyStringTokenizer,DNS%.Name)","DNS%.Record#toClass(short)").
added_calls("DNS%.Record#fromString(DNS%.Name,short,short,int,DNS.utils%.MyStringTokenizer,DNS%.Name)","DNS%.UNKRecord#<init>(DNS%.Name,short,short,int,DNS.utils%.MyStringTokenizer,DNS%.Name)").
added_calls("DNS%.Record#fromString(DNS%.Name,short,short,int,DNS.utils%.MyStringTokenizer,DNS%.Name)","java.io%.PrintStream#println(java.lang%.Object)").
added_calls("DNS%.Record#fromString(DNS%.Name,short,short,int,DNS.utils%.MyStringTokenizer,DNS%.Name)","java.io%.PrintStream#println(java.lang%.String)").
added_calls("DNS%.Record#fromString(DNS%.Name,short,short,int,DNS.utils%.MyStringTokenizer,DNS%.Name)","java.lang%.Class#getConstructor(java.lang%.Class[])").
added_calls("DNS%.Record#fromString(DNS%.Name,short,short,int,DNS.utils%.MyStringTokenizer,DNS%.Name)","java.lang%.Integer#<init>(int)").
added_calls("DNS%.Record#fromString(DNS%.Name,short,short,int,DNS.utils%.MyStringTokenizer,DNS%.Name)","java.lang%.Short#<init>(short)").
added_calls("DNS%.Record#fromString(DNS%.Name,short,short,int,DNS.utils%.MyStringTokenizer,DNS%.Name)","java.lang.reflect%.Constructor#newInstance(java.lang%.Object[])").
added_calls("DNS%.Record#fromString(DNS%.Name,short,short,int,DNS.utils%.MyStringTokenizer,DNS%.Name)","java.lang.reflect%.InvocationTargetException#getTargetException()").
added_calls("DNS%.Record#toWireCanonical(DNS.utils%.DataByteOutputStream)","DNS.utils%.DataByteOutputStream#getPos()").
added_calls("DNS%.Record#toWireCanonical(DNS.utils%.DataByteOutputStream)","DNS.utils%.DataByteOutputStream#writeShortAt(int,int)").
added_calls("DNS%.Record#toWireCanonical(int)","DNS%.Record#toWireCanonical(DNS.utils%.DataByteOutputStream)").
added_calls("DNS%.Record#toWireCanonical(int)","DNS.utils%.DataByteOutputStream#<init>()").
added_calls("DNS%.Record#toWireCanonical(int)","java.io%.ByteArrayOutputStream#toByteArray()").
added_calls("DNS%.SIGRecord#<init>(DNS%.Name,short,int,DNS.utils%.MyStringTokenizer,DNS%.Name)","DNS%.Name#<init>(java.lang%.String,DNS%.Name)").
added_calls("DNS%.SIGRecord#<init>(DNS%.Name,short,int,DNS.utils%.MyStringTokenizer,DNS%.Name)","DNS%.Name#labels()").
added_calls("DNS%.SIGRecord#<init>(DNS%.Name,short,int,DNS.utils%.MyStringTokenizer,DNS%.Name)","DNS%.Record#<init>(DNS%.Name,short,short,int)").
added_calls("DNS%.SIGRecord#<init>(DNS%.Name,short,int,DNS.utils%.MyStringTokenizer,DNS%.Name)","DNS%.SIGRecord#parseDate(java.lang%.String)").
added_calls("DNS%.SIGRecord#<init>(DNS%.Name,short,int,DNS.utils%.MyStringTokenizer,DNS%.Name)","DNS%.TTL#parseTTL(java.lang%.String)").
added_calls("DNS%.SIGRecord#<init>(DNS%.Name,short,int,DNS.utils%.MyStringTokenizer,DNS%.Name)","DNS%.Type#value(java.lang%.String)").
added_calls("DNS%.SIGRecord#<init>(DNS%.Name,short,int,DNS.utils%.MyStringTokenizer,DNS%.Name)","DNS.utils%.MyStringTokenizer#hasMoreTokens()").
added_calls("DNS%.SIGRecord#<init>(DNS%.Name,short,int,DNS.utils%.MyStringTokenizer,DNS%.Name)","DNS.utils%.MyStringTokenizer#nextToken()").
added_calls("DNS%.SIGRecord#<init>(DNS%.Name,short,int,DNS.utils%.MyStringTokenizer,DNS%.Name)","DNS.utils%.base64#fromString(java.lang%.String)").
added_calls("DNS%.SIGRecord#<init>(DNS%.Name,short,int,DNS.utils%.MyStringTokenizer,DNS%.Name)","java.lang%.Byte#parseByte(java.lang%.String)").
added_calls("DNS%.SIGRecord#<init>(DNS%.Name,short,int,DNS.utils%.MyStringTokenizer,DNS%.Name)","java.lang%.Integer#parseInt(java.lang%.String)").
added_calls("DNS%.SIGRecord#rrToWireCanonical(DNS.utils%.DataByteOutputStream)","DNS%.Name#toWireCanonical(DNS.utils%.DataByteOutputStream)").
added_calls("DNS%.SIGRecord#rrToWireCanonical(DNS.utils%.DataByteOutputStream)","DNS.utils%.DataByteOutputStream#writeByte(int)").
added_calls("DNS%.SIGRecord#rrToWireCanonical(DNS.utils%.DataByteOutputStream)","DNS.utils%.DataByteOutputStream#writeInt(int)").
added_calls("DNS%.SIGRecord#rrToWireCanonical(DNS.utils%.DataByteOutputStream)","DNS.utils%.DataByteOutputStream#writeShort(int)").
added_calls("DNS%.SIGRecord#rrToWireCanonical(DNS.utils%.DataByteOutputStream)","java.io%.OutputStream#write(byte[])").
added_calls("DNS%.SIGRecord#rrToWireCanonical(DNS.utils%.DataByteOutputStream)","java.util%.Date#getTime()").
added_calls("DNS%.SIGRecord#toString()","DNS.utils%.base64#formatString(byte[],int,java.lang%.String,boolean)").
added_calls("DNS%.SOARecord#<init>(DNS%.Name,short,int,DNS.utils%.MyStringTokenizer,DNS%.Name)","DNS%.Name#<init>(java.lang%.String,DNS%.Name)").
added_calls("DNS%.SOARecord#<init>(DNS%.Name,short,int,DNS.utils%.MyStringTokenizer,DNS%.Name)","DNS%.Record#<init>(DNS%.Name,short,short,int)").
added_calls("DNS%.SOARecord#<init>(DNS%.Name,short,int,DNS.utils%.MyStringTokenizer,DNS%.Name)","DNS%.TTL#parseTTL(java.lang%.String)").
added_calls("DNS%.SOARecord#<init>(DNS%.Name,short,int,DNS.utils%.MyStringTokenizer,DNS%.Name)","DNS.utils%.MyStringTokenizer#nextToken()").
added_calls("DNS%.SOARecord#<init>(DNS%.Name,short,int,DNS.utils%.MyStringTokenizer,DNS%.Name)","java.lang%.Integer#parseInt(java.lang%.String)").
added_calls("DNS%.SOARecord#rrToWireCanonical(DNS.utils%.DataByteOutputStream)","DNS%.Name#toWireCanonical(DNS.utils%.DataByteOutputStream)").
added_calls("DNS%.SOARecord#rrToWireCanonical(DNS.utils%.DataByteOutputStream)","DNS.utils%.DataByteOutputStream#writeInt(int)").
added_calls("DNS%.SRVRecord#<init>(DNS%.Name,short,int,DNS.utils%.MyStringTokenizer,DNS%.Name)","DNS%.Name#<init>(java.lang%.String,DNS%.Name)").
added_calls("DNS%.SRVRecord#<init>(DNS%.Name,short,int,DNS.utils%.MyStringTokenizer,DNS%.Name)","DNS%.Record#<init>(DNS%.Name,short,short,int)").
added_calls("DNS%.SRVRecord#<init>(DNS%.Name,short,int,DNS.utils%.MyStringTokenizer,DNS%.Name)","DNS.utils%.MyStringTokenizer#nextToken()").
added_calls("DNS%.SRVRecord#<init>(DNS%.Name,short,int,DNS.utils%.MyStringTokenizer,DNS%.Name)","java.lang%.Short#parseShort(java.lang%.String)").
added_calls("DNS%.SRVRecord#rrToWireCanonical(DNS.utils%.DataByteOutputStream)","DNS%.Name#toWireCanonical(DNS.utils%.DataByteOutputStream)").
added_calls("DNS%.SRVRecord#rrToWireCanonical(DNS.utils%.DataByteOutputStream)","DNS.utils%.DataByteOutputStream#writeShort(int)").
added_calls("DNS%.Section#updString(int)","DNS.utils%.StringValueTable#getString(int)").
added_calls("DNS%.Section#updString(int)","java.lang%.Integer#<init>(int)").
added_calls("DNS%.Section#updString(int)","java.lang%.Integer#toString()").
added_calls("DNS%.TSIGRecord#rrToWireCanonical(DNS.utils%.DataByteOutputStream)","java.io%.IOException#<init>(java.lang%.String)").
added_calls("DNS%.TSIGRecord#toString()","DNS.utils%.base64#formatString(byte[],int,java.lang%.String,boolean)").
added_calls("DNS%.TXTRecord#<init>(DNS%.Name,short,int,DNS.utils%.MyStringTokenizer,DNS%.Name)","DNS%.Record#<init>(DNS%.Name,short,short,int)").
added_calls("DNS%.TXTRecord#<init>(DNS%.Name,short,int,DNS.utils%.MyStringTokenizer,DNS%.Name)","DNS.utils%.MyStringTokenizer#hasMoreTokens()").
added_calls("DNS%.TXTRecord#<init>(DNS%.Name,short,int,DNS.utils%.MyStringTokenizer,DNS%.Name)","DNS.utils%.MyStringTokenizer#nextToken()").
added_calls("DNS%.TXTRecord#<init>(DNS%.Name,short,int,DNS.utils%.MyStringTokenizer,DNS%.Name)","java.util%.Vector#<init>()").
added_calls("DNS%.TXTRecord#<init>(DNS%.Name,short,int,DNS.utils%.MyStringTokenizer,DNS%.Name)","java.util%.Vector#addElement(java.lang%.Object)").
added_calls("DNS%.UNKRecord#<init>(DNS%.Name,short,short,int,DNS.utils%.MyStringTokenizer,DNS%.Name)","DNS%.Record#<init>(DNS%.Name,short,short,int)").
added_calls("DNS%.UNKRecord#<init>(DNS%.Name,short,short,int,DNS.utils%.MyStringTokenizer,DNS%.Name)","java.io%.PrintStream#println(java.lang%.String)").
added_calls("DNS%.UNKRecord#<init>(DNS%.Name,short,short,int,DNS.utils%.MyStringTokenizer,DNS%.Name)","java.lang%.System#exit(int)").
added_calls("DNS%.Zone#addRecord(DNS%.Record)","DNS%.NameSet#findExactSet(DNS%.Name,short,short)").
added_calls("DNS%.Zone#findExactMatch(DNS%.Name,short)","DNS%.NameSet#findExactSet(DNS%.Name,short,short)").
added_calls("DNS%.Zone#findRecords(DNS%.Name,short)","DNS%.NS_CNAME_PTRRecord#getTarget()").
added_calls("DNS%.Zone#findRecords(DNS%.Name,short)","DNS%.Name#subdomain(DNS%.Name)").
added_calls("DNS%.Zone#findRecords(DNS%.Name,short)","DNS%.NameSet#findName(DNS%.Name)").
added_calls("DNS%.Zone#findRecords(DNS%.Name,short)","DNS%.RRset#first()").
added_calls("DNS%.Zone#findRecords(DNS%.Name,short)","DNS%.RRset#getType()").
added_calls("DNS%.Zone#findRecords(DNS%.Name,short)","DNS%.Zone#findRecords(DNS%.Name,short)").
added_calls("DNS%.Zone#findRecords(DNS%.Name,short)","DNS%.ZoneResponse#<init>(byte)").
added_calls("DNS%.Zone#findRecords(DNS%.Name,short)","DNS%.ZoneResponse#addCNAME(DNS%.CNAMERecord)").
added_calls("DNS%.Zone#findRecords(DNS%.Name,short)","DNS%.ZoneResponse#addRRset(DNS%.RRset)").
added_calls("DNS%.Zone#findRecords(DNS%.Name,short)","DNS%.ZoneResponse#isNODATA()").
added_calls("DNS%.Zone#findRecords(DNS%.Name,short)","DNS%.ZoneResponse#isNXDOMAIN()").
added_calls("DNS%.Zone#findRecords(DNS%.Name,short)","DNS%.ZoneResponse#set(byte,java.lang%.Object)").
added_calls("DNS%.Zone#findRecords(DNS%.Name,short)","java.lang%.System#arraycopy(java.lang%.Object,int,java.lang%.Object,int,int)").
added_calls("DNS%.Zone#getNS()","DNS%.NameSet#findExactSet(DNS%.Name,short,short)").
added_calls("DNS%.Zone#getSOA()","DNS%.NameSet#findExactSet(DNS%.Name,short,short)").
added_calls("DNS%.ZoneResponse#<init>(byte)","DNS%.ZoneResponse#<init>(byte,java.lang%.Object)").
added_calls("DNS%.ZoneResponse#addCNAME(DNS%.CNAMERecord)","java.util%.Vector#<init>()").
added_calls("DNS%.ZoneResponse#addCNAME(DNS%.CNAMERecord)","java.util%.Vector#insertElementAt(java.lang%.Object,int)").
added_calls("DNS%.ZoneResponse#addRRset(DNS%.RRset)","java.util%.Vector#<init>()").
added_calls("DNS%.ZoneResponse#addRRset(DNS%.RRset)","java.util%.Vector#addElement(java.lang%.Object)").
added_calls("DNS%.ZoneResponse#answers()","java.util%.Vector#elementAt(int)").
added_calls("DNS%.ZoneResponse#answers()","java.util%.Vector#size()").
added_calls("DNS%.dns#getRecords(java.lang%.String,short,short,byte)","DNS%.FindServer#searchPath()").
added_calls("DNS%.dns#getRecords(java.lang%.String,short,short,byte)","DNS%.Name#<init>(java.lang%.String,DNS%.Name)").
added_calls("DNS%.dns#getRecords(java.lang%.String,short,short,byte)","DNS%.Name#isQualified()").
added_calls("DNS%.dns#getRecords(java.lang%.String,short,short,byte)","DNS%.dns#lookup(DNS%.Name,short,short,byte)").
added_calls("DNS%.dns#lookup(DNS%.Name,short,short,byte)","DNS%.Cache#addMessage(DNS%.Message)").
added_calls("DNS%.dns#lookup(DNS%.Name,short,short,byte)","DNS%.Cache#lookupRecords(DNS%.Name,short,short,byte)").
added_calls("DNS%.dns#lookup(DNS%.Name,short,short,byte)","DNS%.CacheResponse#answers()").
added_calls("DNS%.dns#lookup(DNS%.Name,short,short,byte)","DNS%.CacheResponse#isNegative()").
added_calls("DNS%.dns#lookup(DNS%.Name,short,short,byte)","DNS%.CacheResponse#isSuccessful()").
added_calls("DNS%.dns#lookup(DNS%.Name,short,short,byte)","DNS%.Header#getRcode()").
added_calls("DNS%.dns#lookup(DNS%.Name,short,short,byte)","DNS%.Message#getHeader()").
added_calls("DNS%.dns#lookup(DNS%.Name,short,short,byte)","DNS%.Message#getSection(int)").
added_calls("DNS%.dns#lookup(DNS%.Name,short,short,byte)","DNS%.Message#newQuery(DNS%.Record)").
added_calls("DNS%.dns#lookup(DNS%.Name,short,short,byte)","DNS%.RRset#rrs()").
added_calls("DNS%.dns#lookup(DNS%.Name,short,short,byte)","DNS%.RRset#size()").
added_calls("DNS%.dns#lookup(DNS%.Name,short,short,byte)","DNS%.Record#getType()").
added_calls("DNS%.dns#lookup(DNS%.Name,short,short,byte)","DNS%.Record#newRecord(DNS%.Name,short,short)").
added_calls("DNS%.dns#lookup(DNS%.Name,short,short,byte)","DNS%.Resolver#send(DNS%.Message)").
added_calls("DNS%.dns#lookup(DNS%.Name,short,short,byte)","DNS%.dns#matchType(short,short)").
added_calls("DNS%.dns#lookup(DNS%.Name,short,short,byte)","java.util%.Enumeration#hasMoreElements()").
added_calls("DNS%.dns#lookup(DNS%.Name,short,short,byte)","java.util%.Enumeration#nextElement()").
added_calls("DNS.utils%.MyStringTokenizer#main(java.lang%.String[])","DNS.utils%.MyStringTokenizer#<init>(java.lang%.String)").
added_calls("DNS.utils%.MyStringTokenizer#main(java.lang%.String[])","DNS.utils%.MyStringTokenizer#hasMoreTokens()").
added_calls("DNS.utils%.MyStringTokenizer#main(java.lang%.String[])","DNS.utils%.MyStringTokenizer#nextToken()").
added_calls("DNS.utils%.MyStringTokenizer#main(java.lang%.String[])","java.io%.BufferedReader#<init>(java.io%.Reader)").
added_calls("DNS.utils%.MyStringTokenizer#main(java.lang%.String[])","java.io%.BufferedReader#readLine()").
added_calls("DNS.utils%.MyStringTokenizer#main(java.lang%.String[])","java.io%.InputStreamReader#<init>(java.io%.InputStream)").
added_calls("DNS.utils%.MyStringTokenizer#main(java.lang%.String[])","java.io%.PrintStream#println(java.lang%.String)").
added_calls("DNS.utils%.base64#formatString(byte[],int,java.lang%.String,boolean)","DNS.utils%.base64#toString(byte[])").
added_calls("DNS.utils%.base64#formatString(byte[],int,java.lang%.String,boolean)","java.lang%.String#length()").
added_calls("DNS.utils%.base64#formatString(byte[],int,java.lang%.String,boolean)","java.lang%.String#substring(int)").
added_calls("DNS.utils%.base64#formatString(byte[],int,java.lang%.String,boolean)","java.lang%.String#substring(int,int)").
added_calls("DNS.utils%.base64#formatString(byte[],int,java.lang%.String,boolean)","java.lang%.StringBuffer#<init>()").
added_calls("DNS.utils%.base64#formatString(byte[],int,java.lang%.String,boolean)","java.lang%.StringBuffer#append(java.lang%.String)").
added_calls("DNS.utils%.base64#formatString(byte[],int,java.lang%.String,boolean)","java.lang%.StringBuffer#toString()").
added_field("DNS%.Cache#Element#credibility","credibility","DNS%.Cache#Element").
added_field("DNS%.Cache#Element#rrset","rrset","DNS%.Cache#Element").
added_field("DNS%.Cache#Element#srcid","srcid","DNS%.Cache#Element").
added_field("DNS%.Cache#Element#timeIn","timeIn","DNS%.Cache#Element").
added_field("DNS%.Cache#Element#ttl","ttl","DNS%.Cache#Element").
added_field("DNS%.CacheResponse#backtrace","backtrace","DNS%.CacheResponse").
added_field("DNS%.Section#updSections","updSections","DNS%.Section").
added_field("DNS%.ZoneResponse#NODATA","NODATA","DNS%.ZoneResponse").
added_field("DNS%.ZoneResponse#NXDOMAIN","NXDOMAIN","DNS%.ZoneResponse").
added_field("DNS%.ZoneResponse#PARTIAL","PARTIAL","DNS%.ZoneResponse").
added_field("DNS%.ZoneResponse#SUCCESSFUL","SUCCESSFUL","DNS%.ZoneResponse").
added_field("DNS%.ZoneResponse#backtrace","backtrace","DNS%.ZoneResponse").
added_field("DNS%.ZoneResponse#data","data","DNS%.ZoneResponse").
added_field("DNS%.ZoneResponse#type","type","DNS%.ZoneResponse").
added_field("DNS%.dns#searchPathSet","searchPathSet","DNS%.dns").
added_fieldoftype("DNS%.Cache#Element#credibility","byte").
added_fieldoftype("DNS%.Cache#Element#rrset","DNS%.RRset").
added_fieldoftype("DNS%.Cache#Element#srcid","int").
added_fieldoftype("DNS%.Cache#Element#timeIn","long").
added_fieldoftype("DNS%.Cache#Element#ttl","int").
added_fieldoftype("DNS%.CacheResponse#backtrace","java.util%.Vector").
added_fieldoftype("DNS%.Section#updSections","DNS.utils%.StringValueTable").
added_fieldoftype("DNS%.ZoneResponse#NODATA","byte").
added_fieldoftype("DNS%.ZoneResponse#NXDOMAIN","byte").
added_fieldoftype("DNS%.ZoneResponse#PARTIAL","byte").
added_fieldoftype("DNS%.ZoneResponse#SUCCESSFUL","byte").
added_fieldoftype("DNS%.ZoneResponse#backtrace","java.util%.Vector").
added_fieldoftype("DNS%.ZoneResponse#data","java.lang%.Object").
added_fieldoftype("DNS%.ZoneResponse#type","byte").
added_fieldoftype("DNS%.dns#searchPathSet","boolean").
added_inheritedmethod("findName(DNS%.Name)","DNS%.NameSet","DNS%.Zone").
added_inheritedmethod("rrToWireCanonical(DNS.utils%.DataByteOutputStream)","DNS%.NS_CNAME_PTRRecord","DNS%.CNAMERecord").
added_inheritedmethod("rrToWireCanonical(DNS.utils%.DataByteOutputStream)","DNS%.NS_CNAME_PTRRecord","DNS%.NSRecord").
added_inheritedmethod("rrToWireCanonical(DNS.utils%.DataByteOutputStream)","DNS%.NS_CNAME_PTRRecord","DNS%.PTRRecord").
added_inheritedmethod("toWireCanonical(int)","DNS%.Record","DNS%.ARecord").
added_inheritedmethod("toWireCanonical(int)","DNS%.Record","DNS%.CERTRecord").
added_inheritedmethod("toWireCanonical(int)","DNS%.Record","DNS%.CNAMERecord").
added_inheritedmethod("toWireCanonical(int)","DNS%.Record","DNS%.HINFORecord").
added_inheritedmethod("toWireCanonical(int)","DNS%.Record","DNS%.KEYRecord").
added_inheritedmethod("toWireCanonical(int)","DNS%.Record","DNS%.MXRecord").
added_inheritedmethod("toWireCanonical(int)","DNS%.Record","DNS%.NSRecord").
added_inheritedmethod("toWireCanonical(int)","DNS%.Record","DNS%.NS_CNAME_PTRRecord").
added_inheritedmethod("toWireCanonical(int)","DNS%.Record","DNS%.NXTRecord").
added_inheritedmethod("toWireCanonical(int)","DNS%.Record","DNS%.OPTRecord").
added_inheritedmethod("toWireCanonical(int)","DNS%.Record","DNS%.PTRRecord").
added_inheritedmethod("toWireCanonical(int)","DNS%.Record","DNS%.SIGRecord").
added_inheritedmethod("toWireCanonical(int)","DNS%.Record","DNS%.SOARecord").
added_inheritedmethod("toWireCanonical(int)","DNS%.Record","DNS%.SRVRecord").
added_inheritedmethod("toWireCanonical(int)","DNS%.Record","DNS%.TSIGRecord").
added_inheritedmethod("toWireCanonical(int)","DNS%.Record","DNS%.TXTRecord").
added_inheritedmethod("toWireCanonical(int)","DNS%.Record","DNS%.UNKRecord").
added_method("%.update#doAdd(DNS.utils%.MyStringTokenizer)","doAdd(DNS.utils%.MyStringTokenizer)","%.update").
added_method("%.update#doAssert(DNS.utils%.MyStringTokenizer)","doAssert(DNS.utils%.MyStringTokenizer)","%.update").
added_method("%.update#doDelete(DNS.utils%.MyStringTokenizer)","doDelete(DNS.utils%.MyStringTokenizer)","%.update").
added_method("%.update#doFile(DNS.utils%.MyStringTokenizer,java.util%.Vector,java.util%.Vector)","doFile(DNS.utils%.MyStringTokenizer,java.util%.Vector,java.util%.Vector)","%.update").
added_method("%.update#doGlue(DNS.utils%.MyStringTokenizer)","doGlue(DNS.utils%.MyStringTokenizer)","%.update").
added_method("%.update#doLog(DNS.utils%.MyStringTokenizer)","doLog(DNS.utils%.MyStringTokenizer)","%.update").
added_method("%.update#doProhibit(DNS.utils%.MyStringTokenizer)","doProhibit(DNS.utils%.MyStringTokenizer)","%.update").
added_method("%.update#doQuery(DNS.utils%.MyStringTokenizer)","doQuery(DNS.utils%.MyStringTokenizer)","%.update").
added_method("%.update#doRequire(DNS.utils%.MyStringTokenizer)","doRequire(DNS.utils%.MyStringTokenizer)","%.update").
added_method("%.update#parseName(DNS.utils%.MyStringTokenizer,short)","parseName(DNS.utils%.MyStringTokenizer,short)","%.update").
added_method("%.update#parseRR(DNS.utils%.MyStringTokenizer,short,int)","parseRR(DNS.utils%.MyStringTokenizer,short,int)","%.update").
added_method("%.update#parseSet(DNS.utils%.MyStringTokenizer,short)","parseSet(DNS.utils%.MyStringTokenizer,short)","%.update").
added_method("DNS%.ARecord#<init>(DNS%.Name,short,int,DNS.utils%.MyStringTokenizer,DNS%.Name)","<init>(DNS%.Name,short,int,DNS.utils%.MyStringTokenizer,DNS%.Name)","DNS%.ARecord").
added_method("DNS%.CERTRecord#<init>(DNS%.Name,short,int,DNS.utils%.MyStringTokenizer,DNS%.Name)","<init>(DNS%.Name,short,int,DNS.utils%.MyStringTokenizer,DNS%.Name)","DNS%.CERTRecord").
added_method("DNS%.CNAMERecord#<init>(DNS%.Name,short,int,DNS.utils%.MyStringTokenizer,DNS%.Name)","<init>(DNS%.Name,short,int,DNS.utils%.MyStringTokenizer,DNS%.Name)","DNS%.CNAMERecord").
added_method("DNS%.Cache#Element#<init>(DNS%.RRset,byte,int)","<init>(DNS%.RRset,byte,int)","DNS%.Cache#Element").
added_method("DNS%.Cache#Element#<init>(DNS%.Record,byte,int)","<init>(DNS%.Record,byte,int)","DNS%.Cache#Element").
added_method("DNS%.Cache#Element#<init>(int,byte,int)","<init>(int,byte,int)","DNS%.Cache#Element").
added_method("DNS%.CacheResponse#<init>()","<init>()","DNS%.CacheResponse").
added_method("DNS%.CacheResponse#addCNAME(DNS%.CNAMERecord)","addCNAME(DNS%.CNAMERecord)","DNS%.CacheResponse").
added_method("DNS%.CacheResponse#addRRset(DNS%.RRset)","addRRset(DNS%.RRset)","DNS%.CacheResponse").
added_method("DNS%.CacheResponse#answers()","answers()","DNS%.CacheResponse").
added_method("DNS%.CacheResponse#backtrace()","backtrace()","DNS%.CacheResponse").
added_method("DNS%.CacheResponse#set(byte,java.lang%.Object)","set(byte,java.lang%.Object)","DNS%.CacheResponse").
added_method("DNS%.HINFORecord#<init>(DNS%.Name,short,int,DNS.utils%.MyStringTokenizer,DNS%.Name)","<init>(DNS%.Name,short,int,DNS.utils%.MyStringTokenizer,DNS%.Name)","DNS%.HINFORecord").
added_method("DNS%.KEYRecord#<init>(DNS%.Name,short,int,DNS.utils%.MyStringTokenizer,DNS%.Name)","<init>(DNS%.Name,short,int,DNS.utils%.MyStringTokenizer,DNS%.Name)","DNS%.KEYRecord").
added_method("DNS%.MXRecord#<init>(DNS%.Name,short,int,DNS.utils%.MyStringTokenizer,DNS%.Name)","<init>(DNS%.Name,short,int,DNS.utils%.MyStringTokenizer,DNS%.Name)","DNS%.MXRecord").
added_method("DNS%.MXRecord#rrToWireCanonical(DNS.utils%.DataByteOutputStream)","rrToWireCanonical(DNS.utils%.DataByteOutputStream)","DNS%.MXRecord").
added_method("DNS%.Master#parseOrigin(DNS.utils%.MyStringTokenizer)","parseOrigin(DNS.utils%.MyStringTokenizer)","DNS%.Master").
added_method("DNS%.Master#parseRR(DNS.utils%.MyStringTokenizer,boolean,DNS%.Record,DNS%.Name)","parseRR(DNS.utils%.MyStringTokenizer,boolean,DNS%.Record,DNS%.Name)","DNS%.Master").
added_method("DNS%.Master#readExtendedLine(java.io%.BufferedReader)","readExtendedLine(java.io%.BufferedReader)","DNS%.Master").
added_method("DNS%.Master#stripTrailing(java.lang%.String)","stripTrailing(java.lang%.String)","DNS%.Master").
added_method("DNS%.NSRecord#<init>(DNS%.Name,short,int,DNS.utils%.MyStringTokenizer,DNS%.Name)","<init>(DNS%.Name,short,int,DNS.utils%.MyStringTokenizer,DNS%.Name)","DNS%.NSRecord").
added_method("DNS%.NS_CNAME_PTRRecord#<init>(DNS%.Name,short,short,int,DNS.utils%.MyStringTokenizer,DNS%.Name)","<init>(DNS%.Name,short,short,int,DNS.utils%.MyStringTokenizer,DNS%.Name)","DNS%.NS_CNAME_PTRRecord").
added_method("DNS%.NS_CNAME_PTRRecord#rrToWireCanonical(DNS.utils%.DataByteOutputStream)","rrToWireCanonical(DNS.utils%.DataByteOutputStream)","DNS%.NS_CNAME_PTRRecord").
added_method("DNS%.NXTRecord#<init>(DNS%.Name,short,int,DNS.utils%.MyStringTokenizer,DNS%.Name)","<init>(DNS%.Name,short,int,DNS.utils%.MyStringTokenizer,DNS%.Name)","DNS%.NXTRecord").
added_method("DNS%.NXTRecord#rrToWireCanonical(DNS.utils%.DataByteOutputStream)","rrToWireCanonical(DNS.utils%.DataByteOutputStream)","DNS%.NXTRecord").
added_method("DNS%.OPTRecord#rrToWireCanonical(DNS.utils%.DataByteOutputStream)","rrToWireCanonical(DNS.utils%.DataByteOutputStream)","DNS%.OPTRecord").
added_method("DNS%.PTRRecord#<init>(DNS%.Name,short,int,DNS.utils%.MyStringTokenizer,DNS%.Name)","<init>(DNS%.Name,short,int,DNS.utils%.MyStringTokenizer,DNS%.Name)","DNS%.PTRRecord").
added_method("DNS%.RRset#first()","first()","DNS%.RRset").
added_method("DNS%.Record#fromString(DNS%.Name,short,short,int,DNS.utils%.MyStringTokenizer,DNS%.Name)","fromString(DNS%.Name,short,short,int,DNS.utils%.MyStringTokenizer,DNS%.Name)","DNS%.Record").
added_method("DNS%.Record#toWireCanonical(int)","toWireCanonical(int)","DNS%.Record").
added_method("DNS%.SIGRecord#<init>(DNS%.Name,short,int,DNS.utils%.MyStringTokenizer,DNS%.Name)","<init>(DNS%.Name,short,int,DNS.utils%.MyStringTokenizer,DNS%.Name)","DNS%.SIGRecord").
added_method("DNS%.SIGRecord#rrToWireCanonical(DNS.utils%.DataByteOutputStream)","rrToWireCanonical(DNS.utils%.DataByteOutputStream)","DNS%.SIGRecord").
added_method("DNS%.SOARecord#<init>(DNS%.Name,short,int,DNS.utils%.MyStringTokenizer,DNS%.Name)","<init>(DNS%.Name,short,int,DNS.utils%.MyStringTokenizer,DNS%.Name)","DNS%.SOARecord").
added_method("DNS%.SOARecord#rrToWireCanonical(DNS.utils%.DataByteOutputStream)","rrToWireCanonical(DNS.utils%.DataByteOutputStream)","DNS%.SOARecord").
added_method("DNS%.SRVRecord#<init>()","<init>()","DNS%.SRVRecord").
added_method("DNS%.SRVRecord#<init>(DNS%.Name,short,int,DNS.utils%.MyStringTokenizer,DNS%.Name)","<init>(DNS%.Name,short,int,DNS.utils%.MyStringTokenizer,DNS%.Name)","DNS%.SRVRecord").
added_method("DNS%.SRVRecord#rrToWireCanonical(DNS.utils%.DataByteOutputStream)","rrToWireCanonical(DNS.utils%.DataByteOutputStream)","DNS%.SRVRecord").
added_method("DNS%.Section#updString(int)","updString(int)","DNS%.Section").
added_method("DNS%.TSIGRecord#rrToWireCanonical(DNS.utils%.DataByteOutputStream)","rrToWireCanonical(DNS.utils%.DataByteOutputStream)","DNS%.TSIGRecord").
added_method("DNS%.TXTRecord#<init>(DNS%.Name,short,int,DNS.utils%.MyStringTokenizer,DNS%.Name)","<init>(DNS%.Name,short,int,DNS.utils%.MyStringTokenizer,DNS%.Name)","DNS%.TXTRecord").
added_method("DNS%.TypeClass#<init>()","<init>()","DNS%.TypeClass").
added_method("DNS%.UNKRecord#<init>(DNS%.Name,short,short,int,DNS.utils%.MyStringTokenizer,DNS%.Name)","<init>(DNS%.Name,short,short,int,DNS.utils%.MyStringTokenizer,DNS%.Name)","DNS%.UNKRecord").
added_method("DNS%.Zone#findExactMatch(DNS%.Name,short)","findExactMatch(DNS%.Name,short)","DNS%.Zone").
added_method("DNS%.ZoneResponse#<init>()","<init>()","DNS%.ZoneResponse").
added_method("DNS%.ZoneResponse#<init>(byte)","<init>(byte)","DNS%.ZoneResponse").
added_method("DNS%.ZoneResponse#<init>(byte,java.lang%.Object)","<init>(byte,java.lang%.Object)","DNS%.ZoneResponse").
added_method("DNS%.ZoneResponse#addCNAME(DNS%.CNAMERecord)","addCNAME(DNS%.CNAMERecord)","DNS%.ZoneResponse").
added_method("DNS%.ZoneResponse#addRRset(DNS%.RRset)","addRRset(DNS%.RRset)","DNS%.ZoneResponse").
added_method("DNS%.ZoneResponse#answers()","answers()","DNS%.ZoneResponse").
added_method("DNS%.ZoneResponse#backtrace()","backtrace()","DNS%.ZoneResponse").
added_method("DNS%.ZoneResponse#isNODATA()","isNODATA()","DNS%.ZoneResponse").
added_method("DNS%.ZoneResponse#isNXDOMAIN()","isNXDOMAIN()","DNS%.ZoneResponse").
added_method("DNS%.ZoneResponse#isPartial()","isPartial()","DNS%.ZoneResponse").
added_method("DNS%.ZoneResponse#isSuccessful()","isSuccessful()","DNS%.ZoneResponse").
added_method("DNS%.ZoneResponse#partial()","partial()","DNS%.ZoneResponse").
added_method("DNS%.ZoneResponse#set(byte,java.lang%.Object)","set(byte,java.lang%.Object)","DNS%.ZoneResponse").
added_method("DNS%.ZoneResponse#toString()","toString()","DNS%.ZoneResponse").
added_method("DNS%.dns#lookup(DNS%.Name,short,short,byte)","lookup(DNS%.Name,short,short,byte)","DNS%.dns").
added_method("DNS.utils%.MyStringTokenizer#main(java.lang%.String[])","main(java.lang%.String[])","DNS.utils%.MyStringTokenizer").
added_method("DNS.utils%.base64#formatString(byte[],int,java.lang%.String,boolean)","formatString(byte[],int,java.lang%.String,boolean)","DNS.utils%.base64").
added_return("%.update#doAdd(DNS.utils%.MyStringTokenizer)","void").
added_return("%.update#doAssert(DNS.utils%.MyStringTokenizer)","boolean").
added_return("%.update#doDelete(DNS.utils%.MyStringTokenizer)","void").
added_return("%.update#doFile(DNS.utils%.MyStringTokenizer,java.util%.Vector,java.util%.Vector)","void").
added_return("%.update#doGlue(DNS.utils%.MyStringTokenizer)","void").
added_return("%.update#doLog(DNS.utils%.MyStringTokenizer)","void").
added_return("%.update#doProhibit(DNS.utils%.MyStringTokenizer)","void").
added_return("%.update#doQuery(DNS.utils%.MyStringTokenizer)","void").
added_return("%.update#doRequire(DNS.utils%.MyStringTokenizer)","void").
added_return("%.update#parseName(DNS.utils%.MyStringTokenizer,short)","DNS%.Record").
added_return("%.update#parseRR(DNS.utils%.MyStringTokenizer,short,int)","DNS%.Record").
added_return("%.update#parseSet(DNS.utils%.MyStringTokenizer,short)","DNS%.Record").
added_return("DNS%.ARecord#<init>(DNS%.Name,short,int,DNS.utils%.MyStringTokenizer,DNS%.Name)","void").
added_return("DNS%.CERTRecord#<init>(DNS%.Name,short,int,DNS.utils%.MyStringTokenizer,DNS%.Name)","void").
added_return("DNS%.CNAMERecord#<init>(DNS%.Name,short,int,DNS.utils%.MyStringTokenizer,DNS%.Name)","void").
added_return("DNS%.Cache#Element#<init>(DNS%.RRset,byte,int)","void").
added_return("DNS%.Cache#Element#<init>(DNS%.Record,byte,int)","void").
added_return("DNS%.Cache#Element#<init>(int,byte,int)","void").
added_return("DNS%.Cache#findAnyRecords(DNS%.Name,short,short)","DNS%.RRset[]").
added_return("DNS%.Cache#findRecords(DNS%.Name,short,short)","DNS%.RRset[]").
added_return("DNS%.Cache#findRecords(DNS%.Name,short,short,byte)","DNS%.RRset[]").
added_return("DNS%.CacheResponse#<init>()","void").
added_return("DNS%.CacheResponse#addCNAME(DNS%.CNAMERecord)","void").
added_return("DNS%.CacheResponse#addRRset(DNS%.RRset)","void").
added_return("DNS%.CacheResponse#answers()","DNS%.RRset[]").
added_return("DNS%.CacheResponse#backtrace()","java.util%.Vector").
added_return("DNS%.CacheResponse#partial()","DNS%.CNAMERecord").
added_return("DNS%.CacheResponse#set(byte,java.lang%.Object)","void").
added_return("DNS%.HINFORecord#<init>(DNS%.Name,short,int,DNS.utils%.MyStringTokenizer,DNS%.Name)","void").
added_return("DNS%.KEYRecord#<init>(DNS%.Name,short,int,DNS.utils%.MyStringTokenizer,DNS%.Name)","void").
added_return("DNS%.MXRecord#<init>(DNS%.Name,short,int,DNS.utils%.MyStringTokenizer,DNS%.Name)","void").
added_return("DNS%.MXRecord#rrToWireCanonical(DNS.utils%.DataByteOutputStream)","void").
added_return("DNS%.Master#parseOrigin(DNS.utils%.MyStringTokenizer)","DNS%.Name").
added_return("DNS%.Master#parseRR(DNS.utils%.MyStringTokenizer,boolean,DNS%.Record,DNS%.Name)","DNS%.Record").
added_return("DNS%.Master#readExtendedLine(java.io%.BufferedReader)","java.lang%.String").
added_return("DNS%.Master#stripTrailing(java.lang%.String)","java.lang%.String").
added_return("DNS%.NSRecord#<init>(DNS%.Name,short,int,DNS.utils%.MyStringTokenizer,DNS%.Name)","void").
added_return("DNS%.NS_CNAME_PTRRecord#<init>(DNS%.Name,short,short,int,DNS.utils%.MyStringTokenizer,DNS%.Name)","void").
added_return("DNS%.NS_CNAME_PTRRecord#rrToWireCanonical(DNS.utils%.DataByteOutputStream)","void").
added_return("DNS%.NXTRecord#<init>(DNS%.Name,short,int,DNS.utils%.MyStringTokenizer,DNS%.Name)","void").
added_return("DNS%.NXTRecord#rrToWireCanonical(DNS.utils%.DataByteOutputStream)","void").
added_return("DNS%.NameSet#findSets(DNS%.Name,short,short)","java.lang%.Object[]").
added_return("DNS%.OPTRecord#rrToWireCanonical(DNS.utils%.DataByteOutputStream)","void").
added_return("DNS%.PTRRecord#<init>(DNS%.Name,short,int,DNS.utils%.MyStringTokenizer,DNS%.Name)","void").
added_return("DNS%.RRset#first()","DNS%.Record").
added_return("DNS%.Record#fromString(DNS%.Name,short,short,int,DNS.utils%.MyStringTokenizer,DNS%.Name)","DNS%.Record").
added_return("DNS%.Record#rrToWireCanonical(DNS.utils%.DataByteOutputStream)","void").
added_return("DNS%.Record#toWireCanonical(int)","byte[]").
added_return("DNS%.SIGRecord#<init>(DNS%.Name,short,int,DNS.utils%.MyStringTokenizer,DNS%.Name)","void").
added_return("DNS%.SIGRecord#rrToWireCanonical(DNS.utils%.DataByteOutputStream)","void").
added_return("DNS%.SOARecord#<init>(DNS%.Name,short,int,DNS.utils%.MyStringTokenizer,DNS%.Name)","void").
added_return("DNS%.SOARecord#rrToWireCanonical(DNS.utils%.DataByteOutputStream)","void").
added_return("DNS%.SRVRecord#<init>()","void").
added_return("DNS%.SRVRecord#<init>(DNS%.Name,short,int,DNS.utils%.MyStringTokenizer,DNS%.Name)","void").
added_return("DNS%.SRVRecord#rrToWireCanonical(DNS.utils%.DataByteOutputStream)","void").
added_return("DNS%.Section#updString(int)","java.lang%.String").
added_return("DNS%.TSIGRecord#rrToWireCanonical(DNS.utils%.DataByteOutputStream)","void").
added_return("DNS%.TXTRecord#<init>(DNS%.Name,short,int,DNS.utils%.MyStringTokenizer,DNS%.Name)","void").
added_return("DNS%.TypeClass#<init>()","void").
added_return("DNS%.UNKRecord#<init>(DNS%.Name,short,short,int,DNS.utils%.MyStringTokenizer,DNS%.Name)","void").
added_return("DNS%.Zone#findExactMatch(DNS%.Name,short)","DNS%.RRset").
added_return("DNS%.Zone#findRecords(DNS%.Name,short)","DNS%.ZoneResponse").
added_return("DNS%.ZoneResponse#<init>()","void").
added_return("DNS%.ZoneResponse#<init>(byte)","void").
added_return("DNS%.ZoneResponse#<init>(byte,java.lang%.Object)","void").
added_return("DNS%.ZoneResponse#addCNAME(DNS%.CNAMERecord)","void").
added_return("DNS%.ZoneResponse#addRRset(DNS%.RRset)","void").
added_return("DNS%.ZoneResponse#answers()","DNS%.RRset[]").
added_return("DNS%.ZoneResponse#backtrace()","java.util%.Vector").
added_return("DNS%.ZoneResponse#isNODATA()","boolean").
added_return("DNS%.ZoneResponse#isNXDOMAIN()","boolean").
added_return("DNS%.ZoneResponse#isPartial()","boolean").
added_return("DNS%.ZoneResponse#isSuccessful()","boolean").
added_return("DNS%.ZoneResponse#partial()","DNS%.CNAMERecord").
added_return("DNS%.ZoneResponse#set(byte,java.lang%.Object)","void").
added_return("DNS%.ZoneResponse#toString()","java.lang%.String").
added_return("DNS%.dns#lookup(DNS%.Name,short,short,byte)","DNS%.Record[]").
added_return("DNS.utils%.MyStringTokenizer#main(java.lang%.String[])","void").
added_return("DNS.utils%.base64#formatString(byte[],int,java.lang%.String,boolean)","java.lang%.String").
added_subtype("java.lang%.Object","DNS%.Cache#Element").
added_subtype("java.lang%.Object","DNS%.ZoneResponse").
added_type("DNS%.Cache#Element","Cache#Element","DNS").
added_type("DNS%.ZoneResponse","ZoneResponse","DNS").
added_typeintype("DNS%.Cache#Element","DNS%.Cache").
