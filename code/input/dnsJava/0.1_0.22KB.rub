#include "2KB_lsdPred.rub"
// Old KB	3109
// New LB	3159
before_accesses("%.dig#_class","%.dig#main(java.lang%.String[])").
before_accesses("%.dig#name","%.dig#doAXFR(DNS%.Message,DNS%.Resolver)").
before_accesses("%.dig#name","%.dig#main(java.lang%.String[])").
before_accesses("%.dig#type","%.dig#main(java.lang%.String[])").
before_accesses("%.dnsServer#zcount","%.dnsServer#<init>()").
before_accesses("%.dnsServer#zcount","%.dnsServer#addZone(java.lang%.String)").
before_accesses("%.dnsServer#znames","%.dnsServer#<init>()").
before_accesses("%.dnsServer#znames","%.dnsServer#addZone(java.lang%.String)").
before_accesses("%.dnsServer#znames","%.dnsServer#findBestZone(DNS%.Name)").
before_accesses("%.dnsServer#zones","%.dnsServer#<init>()").
before_accesses("%.dnsServer#zones","%.dnsServer#addZone(java.lang%.String)").
before_accesses("%.update#ADDITIONAL","%.update#doGlue(DNS%.MyStringTokenizer)").
before_accesses("%.update#PREREQ","%.update#doProhibit(DNS%.MyStringTokenizer)").
before_accesses("%.update#PREREQ","%.update#doRequire(DNS%.MyStringTokenizer)").
before_accesses("%.update#UPDATE","%.update#doAdd(DNS%.MyStringTokenizer)").
before_accesses("%.update#UPDATE","%.update#doDelete(DNS%.MyStringTokenizer)").
before_accesses("%.update#UPDATE","%.update#sendUpdate()").
before_accesses("%.update#ZONE","%.update#sendUpdate()").
before_accesses("%.update#defaultClass","%.update#<init>(java.io%.InputStream)").
before_accesses("%.update#defaultClass","%.update#doAdd(DNS%.MyStringTokenizer)").
before_accesses("%.update#defaultClass","%.update#doGlue(DNS%.MyStringTokenizer)").
before_accesses("%.update#defaultClass","%.update#doProhibit(DNS%.MyStringTokenizer)").
before_accesses("%.update#defaultClass","%.update#doQuery(DNS%.MyStringTokenizer)").
before_accesses("%.update#defaultClass","%.update#doRequire(DNS%.MyStringTokenizer)").
before_accesses("%.update#defaultClass","%.update#sendUpdate()").
before_accesses("%.update#defaultTTL","%.update#<init>(java.io%.InputStream)").
before_accesses("%.update#defaultTTL","%.update#doAdd(DNS%.MyStringTokenizer)").
before_accesses("%.update#defaultTTL","%.update#doGlue(DNS%.MyStringTokenizer)").
before_accesses("%.update#origin","%.update#<init>(java.io%.InputStream)").
before_accesses("%.update#origin","%.update#parseName(DNS%.MyStringTokenizer,short)").
before_accesses("%.update#origin","%.update#parseRR(DNS%.MyStringTokenizer,short,int)").
before_accesses("%.update#origin","%.update#parseSet(DNS%.MyStringTokenizer,short)").
before_accesses("%.update#origin","%.update#sendUpdate()").
before_accesses("%.update#query","%.update#<init>(java.io%.InputStream)").
before_accesses("%.update#query","%.update#doAdd(DNS%.MyStringTokenizer)").
before_accesses("%.update#query","%.update#doDelete(DNS%.MyStringTokenizer)").
before_accesses("%.update#query","%.update#doGlue(DNS%.MyStringTokenizer)").
before_accesses("%.update#query","%.update#doProhibit(DNS%.MyStringTokenizer)").
before_accesses("%.update#query","%.update#doRequire(DNS%.MyStringTokenizer)").
before_accesses("%.update#query","%.update#sendUpdate()").
before_accesses("%.update#res","%.update#<init>(java.io%.InputStream)").
before_accesses("%.update#res","%.update#doQuery(DNS%.MyStringTokenizer)").
before_accesses("%.update#res","%.update#sendUpdate()").
before_accesses("%.update#response","%.update#doAssert(DNS%.MyStringTokenizer)").
before_accesses("%.update#response","%.update#doQuery(DNS%.MyStringTokenizer)").
before_accesses("%.update#response","%.update#sendUpdate()").
before_accesses("%.update#server","%.update#<init>(java.io%.InputStream)").
before_accesses("%.update#server","%.update#doQuery(DNS%.MyStringTokenizer)").
before_accesses("DNS%.ARecord#address","DNS%.ARecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)").
before_accesses("DNS%.ARecord#address","DNS%.ARecord#<init>(DNS%.Name,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)").
before_accesses("DNS%.ARecord#address","DNS%.ARecord#<init>(DNS%.Name,short,int,java.net%.InetAddress)").
before_accesses("DNS%.ARecord#address","DNS%.ARecord#getAddress()").
before_accesses("DNS%.ARecord#address","DNS%.ARecord#rrToWire(DNS%.Compression)").
before_accesses("DNS%.ARecord#address","DNS%.ARecord#toString()").
before_accesses("DNS%.CERTRecord#alg","DNS%.CERTRecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)").
before_accesses("DNS%.CERTRecord#alg","DNS%.CERTRecord#<init>(DNS%.Name,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)").
before_accesses("DNS%.CERTRecord#alg","DNS%.CERTRecord#<init>(DNS%.Name,short,int,int,int,int,byte[])").
before_accesses("DNS%.CERTRecord#alg","DNS%.CERTRecord#getAlgorithm()").
before_accesses("DNS%.CERTRecord#alg","DNS%.CERTRecord#rrToWire(DNS%.Compression)").
before_accesses("DNS%.CERTRecord#alg","DNS%.CERTRecord#toString()").
before_accesses("DNS%.CERTRecord#cert","DNS%.CERTRecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)").
before_accesses("DNS%.CERTRecord#cert","DNS%.CERTRecord#<init>(DNS%.Name,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)").
before_accesses("DNS%.CERTRecord#cert","DNS%.CERTRecord#<init>(DNS%.Name,short,int,int,int,int,byte[])").
before_accesses("DNS%.CERTRecord#cert","DNS%.CERTRecord#rrToWire(DNS%.Compression)").
before_accesses("DNS%.CERTRecord#cert","DNS%.CERTRecord#toString()").
before_accesses("DNS%.CERTRecord#certType","DNS%.CERTRecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)").
before_accesses("DNS%.CERTRecord#certType","DNS%.CERTRecord#<init>(DNS%.Name,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)").
before_accesses("DNS%.CERTRecord#certType","DNS%.CERTRecord#<init>(DNS%.Name,short,int,int,int,int,byte[])").
before_accesses("DNS%.CERTRecord#certType","DNS%.CERTRecord#getCertType()").
before_accesses("DNS%.CERTRecord#certType","DNS%.CERTRecord#rrToWire(DNS%.Compression)").
before_accesses("DNS%.CERTRecord#certType","DNS%.CERTRecord#toString()").
before_accesses("DNS%.CERTRecord#keyTag","DNS%.CERTRecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)").
before_accesses("DNS%.CERTRecord#keyTag","DNS%.CERTRecord#<init>(DNS%.Name,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)").
before_accesses("DNS%.CERTRecord#keyTag","DNS%.CERTRecord#<init>(DNS%.Name,short,int,int,int,int,byte[])").
before_accesses("DNS%.CERTRecord#keyTag","DNS%.CERTRecord#getKeyTag()").
before_accesses("DNS%.CERTRecord#keyTag","DNS%.CERTRecord#rrToWire(DNS%.Compression)").
before_accesses("DNS%.CERTRecord#keyTag","DNS%.CERTRecord#toString()").
before_accesses("DNS%.Compression#h","DNS%.Compression#<init>()").
before_accesses("DNS%.Compression#h","DNS%.Compression#add(int,DNS%.Name)").
before_accesses("DNS%.Compression#h","DNS%.Compression#get(DNS%.Name)").
before_accesses("DNS%.Compression#h","DNS%.Compression#get(int)").
before_accesses("DNS%.FindResolver#server","DNS%.FindResolver#find()").
before_accesses("DNS%.HINFORecord#cpu","DNS%.HINFORecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)").
before_accesses("DNS%.HINFORecord#cpu","DNS%.HINFORecord#<init>(DNS%.Name,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)").
before_accesses("DNS%.HINFORecord#cpu","DNS%.HINFORecord#<init>(DNS%.Name,short,int,java.lang%.String,java.lang%.String)").
before_accesses("DNS%.HINFORecord#cpu","DNS%.HINFORecord#getCPU()").
before_accesses("DNS%.HINFORecord#cpu","DNS%.HINFORecord#rrToWire(DNS%.Compression)").
before_accesses("DNS%.HINFORecord#cpu","DNS%.HINFORecord#toString()").
before_accesses("DNS%.HINFORecord#os","DNS%.HINFORecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)").
before_accesses("DNS%.HINFORecord#os","DNS%.HINFORecord#<init>(DNS%.Name,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)").
before_accesses("DNS%.HINFORecord#os","DNS%.HINFORecord#<init>(DNS%.Name,short,int,java.lang%.String,java.lang%.String)").
before_accesses("DNS%.HINFORecord#os","DNS%.HINFORecord#getOS()").
before_accesses("DNS%.HINFORecord#os","DNS%.HINFORecord#rrToWire(DNS%.Compression)").
before_accesses("DNS%.HINFORecord#os","DNS%.HINFORecord#toString()").
before_accesses("DNS%.Header#counts","DNS%.Header#<init>(DNS.utils%.CountedDataInputStream)").
before_accesses("DNS%.Header#counts","DNS%.Header#<init>(int)").
before_accesses("DNS%.Header#counts","DNS%.Header#decCount(int)").
before_accesses("DNS%.Header#counts","DNS%.Header#getCount(int)").
before_accesses("DNS%.Header#counts","DNS%.Header#incCount(int)").
before_accesses("DNS%.Header#counts","DNS%.Header#setCount(int,short)").
before_accesses("DNS%.Header#counts","DNS%.Header#toWire(DNS.utils%.CountedDataOutputStream)").
before_accesses("DNS%.Header#flags","DNS%.Header#<init>(int)").
before_accesses("DNS%.Header#flags","DNS%.Header#getFlag(int)").
before_accesses("DNS%.Header#flags","DNS%.Header#printFlags()").
before_accesses("DNS%.Header#flags","DNS%.Header#readFlags(DNS.utils%.CountedDataInputStream)").
before_accesses("DNS%.Header#flags","DNS%.Header#setFlag(int)").
before_accesses("DNS%.Header#flags","DNS%.Header#unsetFlag(int)").
before_accesses("DNS%.Header#flags","DNS%.Header#writeFlags(DNS.utils%.CountedDataOutputStream)").
before_accesses("DNS%.Header#id","DNS%.Header#<init>(int)").
before_accesses("DNS%.Header#id","DNS%.Header#getID()").
before_accesses("DNS%.Header#id","DNS%.Header#setID(int)").
before_accesses("DNS%.Header#id","DNS%.Header#toWire(DNS.utils%.CountedDataOutputStream)").
before_accesses("DNS%.Header#opcode","DNS%.Header#getOpcode()").
before_accesses("DNS%.Header#opcode","DNS%.Header#readFlags(DNS.utils%.CountedDataInputStream)").
before_accesses("DNS%.Header#opcode","DNS%.Header#setOpcode(byte)").
before_accesses("DNS%.Header#opcode","DNS%.Header#writeFlags(DNS.utils%.CountedDataOutputStream)").
before_accesses("DNS%.Header#rcode","DNS%.Header#getRcode()").
before_accesses("DNS%.Header#rcode","DNS%.Header#readFlags(DNS.utils%.CountedDataInputStream)").
before_accesses("DNS%.Header#rcode","DNS%.Header#setRcode(byte)").
before_accesses("DNS%.Header#rcode","DNS%.Header#writeFlags(DNS.utils%.CountedDataOutputStream)").
before_accesses("DNS%.KEYRecord#NOAUTH","DNS%.KEYRecord#rrToWire(DNS%.Compression)").
before_accesses("DNS%.KEYRecord#NOAUTH","DNS%.KEYRecord#toString()").
before_accesses("DNS%.KEYRecord#NOCONF","DNS%.KEYRecord#rrToWire(DNS%.Compression)").
before_accesses("DNS%.KEYRecord#NOCONF","DNS%.KEYRecord#toString()").
before_accesses("DNS%.KEYRecord#alg","DNS%.KEYRecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)").
before_accesses("DNS%.KEYRecord#alg","DNS%.KEYRecord#<init>(DNS%.Name,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)").
before_accesses("DNS%.KEYRecord#alg","DNS%.KEYRecord#<init>(DNS%.Name,short,int,int,int,int,byte[])").
before_accesses("DNS%.KEYRecord#alg","DNS%.KEYRecord#getAlgorithm()").
before_accesses("DNS%.KEYRecord#alg","DNS%.KEYRecord#rrToWire(DNS%.Compression)").
before_accesses("DNS%.KEYRecord#alg","DNS%.KEYRecord#toString()").
before_accesses("DNS%.KEYRecord#flags","DNS%.KEYRecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)").
before_accesses("DNS%.KEYRecord#flags","DNS%.KEYRecord#<init>(DNS%.Name,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)").
before_accesses("DNS%.KEYRecord#flags","DNS%.KEYRecord#<init>(DNS%.Name,short,int,int,int,int,byte[])").
before_accesses("DNS%.KEYRecord#flags","DNS%.KEYRecord#getFlags()").
before_accesses("DNS%.KEYRecord#flags","DNS%.KEYRecord#rrToWire(DNS%.Compression)").
before_accesses("DNS%.KEYRecord#flags","DNS%.KEYRecord#toString()").
before_accesses("DNS%.KEYRecord#key","DNS%.KEYRecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)").
before_accesses("DNS%.KEYRecord#key","DNS%.KEYRecord#<init>(DNS%.Name,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)").
before_accesses("DNS%.KEYRecord#key","DNS%.KEYRecord#<init>(DNS%.Name,short,int,int,int,int,byte[])").
before_accesses("DNS%.KEYRecord#key","DNS%.KEYRecord#rrToWire(DNS%.Compression)").
before_accesses("DNS%.KEYRecord#key","DNS%.KEYRecord#toString()").
before_accesses("DNS%.KEYRecord#proto","DNS%.KEYRecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)").
before_accesses("DNS%.KEYRecord#proto","DNS%.KEYRecord#<init>(DNS%.Name,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)").
before_accesses("DNS%.KEYRecord#proto","DNS%.KEYRecord#<init>(DNS%.Name,short,int,int,int,int,byte[])").
before_accesses("DNS%.KEYRecord#proto","DNS%.KEYRecord#getProtocol()").
before_accesses("DNS%.KEYRecord#proto","DNS%.KEYRecord#rrToWire(DNS%.Compression)").
before_accesses("DNS%.KEYRecord#proto","DNS%.KEYRecord#toString()").
before_accesses("DNS%.MXRecord#priority","DNS%.MXRecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)").
before_accesses("DNS%.MXRecord#priority","DNS%.MXRecord#<init>(DNS%.Name,short,int,int,DNS%.Name)").
before_accesses("DNS%.MXRecord#priority","DNS%.MXRecord#<init>(DNS%.Name,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)").
before_accesses("DNS%.MXRecord#priority","DNS%.MXRecord#getPriority()").
before_accesses("DNS%.MXRecord#priority","DNS%.MXRecord#rrToWire(DNS%.Compression)").
before_accesses("DNS%.MXRecord#priority","DNS%.MXRecord#toString()").
before_accesses("DNS%.MXRecord#target","DNS%.MXRecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)").
before_accesses("DNS%.MXRecord#target","DNS%.MXRecord#<init>(DNS%.Name,short,int,int,DNS%.Name)").
before_accesses("DNS%.MXRecord#target","DNS%.MXRecord#<init>(DNS%.Name,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)").
before_accesses("DNS%.MXRecord#target","DNS%.MXRecord#getTarget()").
before_accesses("DNS%.MXRecord#target","DNS%.MXRecord#rrToWire(DNS%.Compression)").
before_accesses("DNS%.MXRecord#target","DNS%.MXRecord#toString()").
before_accesses("DNS%.Message#header","DNS%.Message#<init>(DNS.utils%.CountedDataInputStream)").
before_accesses("DNS%.Message#header","DNS%.Message#<init>(int)").
before_accesses("DNS%.Message#header","DNS%.Message#addRecord(int,DNS%.Record)").
before_accesses("DNS%.Message#header","DNS%.Message#getHeader()").
before_accesses("DNS%.Message#header","DNS%.Message#getTSIG()").
before_accesses("DNS%.Message#header","DNS%.Message#removeRecord(int,DNS%.Record)").
before_accesses("DNS%.Message#header","DNS%.Message#setHeader(DNS%.Header)").
before_accesses("DNS%.Message#header","DNS%.Message#toWire(DNS.utils%.CountedDataOutputStream)").
before_accesses("DNS%.Message#header","DNS%.Message#toWireCanonical(DNS.utils%.CountedDataOutputStream)").
before_accesses("DNS%.Message#sections","DNS%.Message#<init>(DNS.utils%.CountedDataInputStream)").
before_accesses("DNS%.Message#sections","DNS%.Message#<init>(int)").
before_accesses("DNS%.Message#sections","DNS%.Message#addRecord(int,DNS%.Record)").
before_accesses("DNS%.Message#sections","DNS%.Message#getSection(int)").
before_accesses("DNS%.Message#sections","DNS%.Message#getTSIG()").
before_accesses("DNS%.Message#sections","DNS%.Message#removeRecord(int,DNS%.Record)").
before_accesses("DNS%.Message#sections","DNS%.Message#toWire(DNS.utils%.CountedDataOutputStream)").
before_accesses("DNS%.Message#sections","DNS%.Message#toWireCanonical(DNS.utils%.CountedDataOutputStream)").
before_accesses("DNS%.Message#size","DNS%.Message#<init>(DNS.utils%.CountedDataInputStream)").
before_accesses("DNS%.Message#size","DNS%.Message#numBytes()").
before_accesses("DNS%.MyStringTokenizer#current","DNS%.MyStringTokenizer#<init>(java.lang%.String,java.lang%.String,boolean)").
before_accesses("DNS%.MyStringTokenizer#current","DNS%.MyStringTokenizer#hasMoreDelimiters()").
before_accesses("DNS%.MyStringTokenizer#current","DNS%.MyStringTokenizer#hasMoreTokens()").
before_accesses("DNS%.MyStringTokenizer#current","DNS%.MyStringTokenizer#nextToken()").
before_accesses("DNS%.MyStringTokenizer#delim","DNS%.MyStringTokenizer#<init>(java.lang%.String,java.lang%.String,boolean)").
before_accesses("DNS%.MyStringTokenizer#delim","DNS%.MyStringTokenizer#isDelim(int)").
before_accesses("DNS%.MyStringTokenizer#putBack","DNS%.MyStringTokenizer#nextToken()").
before_accesses("DNS%.MyStringTokenizer#putBack","DNS%.MyStringTokenizer#putBackToken(java.lang%.String)").
before_accesses("DNS%.MyStringTokenizer#returnTokens","DNS%.MyStringTokenizer#<init>(java.lang%.String,java.lang%.String,boolean)").
before_accesses("DNS%.MyStringTokenizer#returnTokens","DNS%.MyStringTokenizer#hasMoreTokens()").
before_accesses("DNS%.MyStringTokenizer#returnTokens","DNS%.MyStringTokenizer#nextToken()").
before_accesses("DNS%.MyStringTokenizer#string","DNS%.MyStringTokenizer#<init>(java.lang%.String,java.lang%.String,boolean)").
before_accesses("DNS%.MyStringTokenizer#string","DNS%.MyStringTokenizer#hasMoreDelimiters()").
before_accesses("DNS%.MyStringTokenizer#string","DNS%.MyStringTokenizer#hasMoreTokens()").
before_accesses("DNS%.MyStringTokenizer#string","DNS%.MyStringTokenizer#isDelim(int)").
before_accesses("DNS%.MyStringTokenizer#string","DNS%.MyStringTokenizer#nextToken()").
before_accesses("DNS%.NS_CNAME_PTRRecord#target","DNS%.NS_CNAME_PTRRecord#<init>(DNS%.Name,short,short,int,DNS%.MyStringTokenizer,DNS%.Name)").
before_accesses("DNS%.NS_CNAME_PTRRecord#target","DNS%.NS_CNAME_PTRRecord#<init>(DNS%.Name,short,short,int,DNS%.Name)").
before_accesses("DNS%.NS_CNAME_PTRRecord#target","DNS%.NS_CNAME_PTRRecord#<init>(DNS%.Name,short,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)").
before_accesses("DNS%.NS_CNAME_PTRRecord#target","DNS%.NS_CNAME_PTRRecord#getTarget()").
before_accesses("DNS%.NS_CNAME_PTRRecord#target","DNS%.NS_CNAME_PTRRecord#rrToWire(DNS%.Compression)").
before_accesses("DNS%.NS_CNAME_PTRRecord#target","DNS%.NS_CNAME_PTRRecord#toString()").
before_accesses("DNS%.NXTRecord#bitmap","DNS%.NXTRecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)").
before_accesses("DNS%.NXTRecord#bitmap","DNS%.NXTRecord#<init>(DNS%.Name,short,int,DNS%.Name,java.util%.BitSet)").
before_accesses("DNS%.NXTRecord#bitmap","DNS%.NXTRecord#<init>(DNS%.Name,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)").
before_accesses("DNS%.NXTRecord#bitmap","DNS%.NXTRecord#getBitmap()").
before_accesses("DNS%.NXTRecord#bitmap","DNS%.NXTRecord#rrToWire(DNS%.Compression)").
before_accesses("DNS%.NXTRecord#bitmap","DNS%.NXTRecord#toString()").
before_accesses("DNS%.NXTRecord#next","DNS%.NXTRecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)").
before_accesses("DNS%.NXTRecord#next","DNS%.NXTRecord#<init>(DNS%.Name,short,int,DNS%.Name,java.util%.BitSet)").
before_accesses("DNS%.NXTRecord#next","DNS%.NXTRecord#<init>(DNS%.Name,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)").
before_accesses("DNS%.NXTRecord#next","DNS%.NXTRecord#getNext()").
before_accesses("DNS%.NXTRecord#next","DNS%.NXTRecord#rrToWire(DNS%.Compression)").
before_accesses("DNS%.NXTRecord#next","DNS%.NXTRecord#toString()").
before_accesses("DNS%.Name#MAXLABELS","DNS%.Name#<init>(DNS%.Name,int)").
before_accesses("DNS%.Name#MAXLABELS","DNS%.Name#<init>(DNS.utils%.CountedDataInputStream,DNS%.Compression)").
before_accesses("DNS%.Name#MAXLABELS","DNS%.Name#<init>(java.lang%.String,DNS%.Name)").
before_accesses("DNS%.Name#labels","DNS%.Name#<init>(DNS%.Name,int)").
before_accesses("DNS%.Name#labels","DNS%.Name#<init>(DNS.utils%.CountedDataInputStream,DNS%.Compression)").
before_accesses("DNS%.Name#labels","DNS%.Name#<init>(java.lang%.String,DNS%.Name)").
before_accesses("DNS%.Name#labels","DNS%.Name#append(DNS%.Name)").
before_accesses("DNS%.Name#labels","DNS%.Name#equals(java.lang%.Object)").
before_accesses("DNS%.Name#labels","DNS%.Name#hashCode()").
before_accesses("DNS%.Name#labels","DNS%.Name#labels()").
before_accesses("DNS%.Name#labels","DNS%.Name#length()").
before_accesses("DNS%.Name#labels","DNS%.Name#toString()").
before_accesses("DNS%.Name#labels","DNS%.Name#toWire(DNS.utils%.CountedDataOutputStream,DNS%.Compression)").
before_accesses("DNS%.Name#labels","DNS%.Name#toWireCanonical(DNS.utils%.CountedDataOutputStream)").
before_accesses("DNS%.Name#name","DNS%.Name#<init>(DNS%.Name,int)").
before_accesses("DNS%.Name#name","DNS%.Name#<init>(DNS.utils%.CountedDataInputStream,DNS%.Compression)").
before_accesses("DNS%.Name#name","DNS%.Name#<init>(java.lang%.String,DNS%.Name)").
before_accesses("DNS%.Name#name","DNS%.Name#append(DNS%.Name)").
before_accesses("DNS%.Name#name","DNS%.Name#equals(java.lang%.Object)").
before_accesses("DNS%.Name#name","DNS%.Name#hashCode()").
before_accesses("DNS%.Name#name","DNS%.Name#length()").
before_accesses("DNS%.Name#name","DNS%.Name#toString()").
before_accesses("DNS%.Name#name","DNS%.Name#toWire(DNS.utils%.CountedDataOutputStream,DNS%.Compression)").
before_accesses("DNS%.Name#name","DNS%.Name#toWireCanonical(DNS.utils%.CountedDataOutputStream)").
before_accesses("DNS%.Name#root","%.dnsServer#findBestZone(DNS%.Name)").
before_accesses("DNS%.Name#root","DNS%.EDNS#newOPT(int)").
before_accesses("DNS%.Record#dclass","DNS%.Message#sectionToString(int)").
before_accesses("DNS%.Record#dclass","DNS%.OPTRecord#getPayloadSize()").
before_accesses("DNS%.Record#dclass","DNS%.Record#<init>(DNS%.Name,short,short,int)").
before_accesses("DNS%.Record#dclass","DNS%.Record#getDClass()").
before_accesses("DNS%.Record#dclass","DNS%.Record#toStringNoData()").
before_accesses("DNS%.Record#dclass","DNS%.Record#toWire(DNS.utils%.CountedDataOutputStream,int,DNS%.Compression)").
before_accesses("DNS%.Record#dclass","DNS%.Record#toWireCanonical(DNS.utils%.CountedDataOutputStream,int)").
before_accesses("DNS%.Record#dclass","DNS%.TSIG#verify(DNS%.Message,byte[],DNS%.TSIGRecord)").
before_accesses("DNS%.Record#name","DNS%.Message#sectionToString(int)").
before_accesses("DNS%.Record#name","DNS%.Record#<init>(DNS%.Name,short,short,int)").
before_accesses("DNS%.Record#name","DNS%.Record#getName()").
before_accesses("DNS%.Record#name","DNS%.Record#toStringNoData()").
before_accesses("DNS%.Record#name","DNS%.Record#toWire(DNS.utils%.CountedDataOutputStream,int,DNS%.Compression)").
before_accesses("DNS%.Record#name","DNS%.Record#toWireCanonical(DNS.utils%.CountedDataOutputStream,int)").
before_accesses("DNS%.Record#name","DNS%.SIGRecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)").
before_accesses("DNS%.Record#name","DNS%.SIGRecord#<init>(DNS%.Name,short,int,int,int,int,java.util%.Date,java.util%.Date,int,DNS%.Name,byte[])").
before_accesses("DNS%.Record#name","DNS%.Zone#<init>(java.lang%.String)").
before_accesses("DNS%.Record#name","DNS%.Zone#parseRR(DNS%.MyStringTokenizer,boolean,DNS%.Record,DNS%.Name)").
before_accesses("DNS%.Record#oLength","DNS%.Record#newRecord(DNS%.Name,short,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)").
before_accesses("DNS%.Record#oLength","DNS%.TSIG#verify(DNS%.Message,byte[],DNS%.TSIGRecord)").
before_accesses("DNS%.Record#oLength","DNS%.TSIG#verifyAXFR(DNS%.Message,byte[],DNS%.TSIGRecord,boolean,boolean)").
before_accesses("DNS%.Record#ttl","DNS%.OPTRecord#getExtendedRcode()").
before_accesses("DNS%.Record#ttl","DNS%.OPTRecord#getVersion()").
before_accesses("DNS%.Record#ttl","DNS%.Record#<init>(DNS%.Name,short,short,int)").
before_accesses("DNS%.Record#ttl","DNS%.Record#toStringNoData()").
before_accesses("DNS%.Record#ttl","DNS%.Record#toWire(DNS.utils%.CountedDataOutputStream,int,DNS%.Compression)").
before_accesses("DNS%.Record#ttl","DNS%.Record#toWireCanonical(DNS.utils%.CountedDataOutputStream,int)").
before_accesses("DNS%.Record#ttl","DNS%.TSIG#verify(DNS%.Message,byte[],DNS%.TSIGRecord)").
before_accesses("DNS%.Record#ttl","DNS%.Zone#parseRR(DNS%.MyStringTokenizer,boolean,DNS%.Record,DNS%.Name)").
before_accesses("DNS%.Record#type","DNS%.Message#getTSIG()").
before_accesses("DNS%.Record#type","DNS%.Message#sectionToString(int)").
before_accesses("DNS%.Record#type","DNS%.Record#<init>(DNS%.Name,short,short,int)").
before_accesses("DNS%.Record#type","DNS%.Record#getType()").
before_accesses("DNS%.Record#type","DNS%.Record#toStringNoData()").
before_accesses("DNS%.Record#type","DNS%.Record#toWire(DNS.utils%.CountedDataOutputStream,int,DNS%.Compression)").
before_accesses("DNS%.Record#type","DNS%.Record#toWireCanonical(DNS.utils%.CountedDataOutputStream,int)").
before_accesses("DNS%.Record#type","DNS%.UNKRecord#<init>(DNS%.Name,short,short,int,DNS%.MyStringTokenizer,DNS%.Name)").
before_accesses("DNS%.Resolver#addr","DNS%.Resolver#<init>(java.lang%.String)").
before_accesses("DNS%.Resolver#addr","DNS%.Resolver#send(DNS%.Message)").
before_accesses("DNS%.Resolver#addr","DNS%.Resolver#sendAXFR(DNS%.Message)").
before_accesses("DNS%.Resolver#addr","DNS%.Resolver#sendTCP(DNS%.Message,byte[])").
before_accesses("DNS%.Resolver#defaultResolver","DNS%.Resolver#<init>(java.lang%.String)").
before_accesses("DNS%.Resolver#defaultResolver","DNS%.Resolver#setDefaultResolver(java.lang%.String)").
before_accesses("DNS%.Resolver#port","DNS%.Resolver#send(DNS%.Message)").
before_accesses("DNS%.Resolver#port","DNS%.Resolver#sendAXFR(DNS%.Message)").
before_accesses("DNS%.Resolver#port","DNS%.Resolver#sendTCP(DNS%.Message,byte[])").
before_accesses("DNS%.Resolver#port","DNS%.Resolver#setPort(int)").
before_accesses("DNS%.Resolver#timeoutValue","DNS%.Resolver#send(DNS%.Message)").
before_accesses("DNS%.Resolver#timeoutValue","DNS%.Resolver#sendAXFR(DNS%.Message)").
before_accesses("DNS%.Resolver#timeoutValue","DNS%.Resolver#sendTCP(DNS%.Message,byte[])").
before_accesses("DNS%.Resolver#tsig","DNS%.Resolver#send(DNS%.Message)").
before_accesses("DNS%.Resolver#tsig","DNS%.Resolver#sendAXFR(DNS%.Message)").
before_accesses("DNS%.Resolver#tsig","DNS%.Resolver#sendTCP(DNS%.Message,byte[])").
before_accesses("DNS%.Resolver#tsig","DNS%.Resolver#setTSIGKey(java.lang%.String,java.lang%.String)").
before_accesses("DNS%.Resolver#useEDNS","DNS%.Resolver#send(DNS%.Message)").
before_accesses("DNS%.Resolver#useEDNS","DNS%.Resolver#setEDNS(boolean)").
before_accesses("DNS%.Resolver#useTCP","DNS%.Resolver#send(DNS%.Message)").
before_accesses("DNS%.Resolver#useTCP","DNS%.Resolver#setTCP(boolean)").
before_accesses("DNS%.SIGRecord#alg","DNS%.SIGRecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)").
before_accesses("DNS%.SIGRecord#alg","DNS%.SIGRecord#<init>(DNS%.Name,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)").
before_accesses("DNS%.SIGRecord#alg","DNS%.SIGRecord#<init>(DNS%.Name,short,int,int,int,int,java.util%.Date,java.util%.Date,int,DNS%.Name,byte[])").
before_accesses("DNS%.SIGRecord#alg","DNS%.SIGRecord#rrToWire(DNS%.Compression)").
before_accesses("DNS%.SIGRecord#alg","DNS%.SIGRecord#toString()").
before_accesses("DNS%.SIGRecord#covered","DNS%.SIGRecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)").
before_accesses("DNS%.SIGRecord#covered","DNS%.SIGRecord#<init>(DNS%.Name,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)").
before_accesses("DNS%.SIGRecord#covered","DNS%.SIGRecord#<init>(DNS%.Name,short,int,int,int,int,java.util%.Date,java.util%.Date,int,DNS%.Name,byte[])").
before_accesses("DNS%.SIGRecord#covered","DNS%.SIGRecord#rrToWire(DNS%.Compression)").
before_accesses("DNS%.SIGRecord#covered","DNS%.SIGRecord#toString()").
before_accesses("DNS%.SIGRecord#expire","DNS%.SIGRecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)").
before_accesses("DNS%.SIGRecord#expire","DNS%.SIGRecord#<init>(DNS%.Name,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)").
before_accesses("DNS%.SIGRecord#expire","DNS%.SIGRecord#<init>(DNS%.Name,short,int,int,int,int,java.util%.Date,java.util%.Date,int,DNS%.Name,byte[])").
before_accesses("DNS%.SIGRecord#expire","DNS%.SIGRecord#rrToWire(DNS%.Compression)").
before_accesses("DNS%.SIGRecord#expire","DNS%.SIGRecord#toString()").
before_accesses("DNS%.SIGRecord#footprint","DNS%.SIGRecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)").
before_accesses("DNS%.SIGRecord#footprint","DNS%.SIGRecord#<init>(DNS%.Name,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)").
before_accesses("DNS%.SIGRecord#footprint","DNS%.SIGRecord#<init>(DNS%.Name,short,int,int,int,int,java.util%.Date,java.util%.Date,int,DNS%.Name,byte[])").
before_accesses("DNS%.SIGRecord#footprint","DNS%.SIGRecord#rrToWire(DNS%.Compression)").
before_accesses("DNS%.SIGRecord#footprint","DNS%.SIGRecord#toString()").
before_accesses("DNS%.SIGRecord#labels","DNS%.SIGRecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)").
before_accesses("DNS%.SIGRecord#labels","DNS%.SIGRecord#<init>(DNS%.Name,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)").
before_accesses("DNS%.SIGRecord#labels","DNS%.SIGRecord#<init>(DNS%.Name,short,int,int,int,int,java.util%.Date,java.util%.Date,int,DNS%.Name,byte[])").
before_accesses("DNS%.SIGRecord#labels","DNS%.SIGRecord#rrToWire(DNS%.Compression)").
before_accesses("DNS%.SIGRecord#origttl","DNS%.SIGRecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)").
before_accesses("DNS%.SIGRecord#origttl","DNS%.SIGRecord#<init>(DNS%.Name,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)").
before_accesses("DNS%.SIGRecord#origttl","DNS%.SIGRecord#<init>(DNS%.Name,short,int,int,int,int,java.util%.Date,java.util%.Date,int,DNS%.Name,byte[])").
before_accesses("DNS%.SIGRecord#origttl","DNS%.SIGRecord#rrToWire(DNS%.Compression)").
before_accesses("DNS%.SIGRecord#origttl","DNS%.SIGRecord#toString()").
before_accesses("DNS%.SIGRecord#signature","DNS%.SIGRecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)").
before_accesses("DNS%.SIGRecord#signature","DNS%.SIGRecord#<init>(DNS%.Name,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)").
before_accesses("DNS%.SIGRecord#signature","DNS%.SIGRecord#<init>(DNS%.Name,short,int,int,int,int,java.util%.Date,java.util%.Date,int,DNS%.Name,byte[])").
before_accesses("DNS%.SIGRecord#signature","DNS%.SIGRecord#rrToWire(DNS%.Compression)").
before_accesses("DNS%.SIGRecord#signature","DNS%.SIGRecord#toString()").
before_accesses("DNS%.SIGRecord#signer","DNS%.SIGRecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)").
before_accesses("DNS%.SIGRecord#signer","DNS%.SIGRecord#<init>(DNS%.Name,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)").
before_accesses("DNS%.SIGRecord#signer","DNS%.SIGRecord#<init>(DNS%.Name,short,int,int,int,int,java.util%.Date,java.util%.Date,int,DNS%.Name,byte[])").
before_accesses("DNS%.SIGRecord#signer","DNS%.SIGRecord#rrToWire(DNS%.Compression)").
before_accesses("DNS%.SIGRecord#signer","DNS%.SIGRecord#toString()").
before_accesses("DNS%.SIGRecord#timeSigned","DNS%.SIGRecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)").
before_accesses("DNS%.SIGRecord#timeSigned","DNS%.SIGRecord#<init>(DNS%.Name,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)").
before_accesses("DNS%.SIGRecord#timeSigned","DNS%.SIGRecord#<init>(DNS%.Name,short,int,int,int,int,java.util%.Date,java.util%.Date,int,DNS%.Name,byte[])").
before_accesses("DNS%.SIGRecord#timeSigned","DNS%.SIGRecord#rrToWire(DNS%.Compression)").
before_accesses("DNS%.SIGRecord#timeSigned","DNS%.SIGRecord#toString()").
before_accesses("DNS%.SOARecord#admin","DNS%.SOARecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)").
before_accesses("DNS%.SOARecord#admin","DNS%.SOARecord#<init>(DNS%.Name,short,int,DNS%.Name,DNS%.Name,int,int,int,int,int)").
before_accesses("DNS%.SOARecord#admin","DNS%.SOARecord#<init>(DNS%.Name,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)").
before_accesses("DNS%.SOARecord#admin","DNS%.SOARecord#getAdmin()").
before_accesses("DNS%.SOARecord#admin","DNS%.SOARecord#rrToWire(DNS%.Compression)").
before_accesses("DNS%.SOARecord#admin","DNS%.SOARecord#toString()").
before_accesses("DNS%.SOARecord#expire","DNS%.SOARecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)").
before_accesses("DNS%.SOARecord#expire","DNS%.SOARecord#<init>(DNS%.Name,short,int,DNS%.Name,DNS%.Name,int,int,int,int,int)").
before_accesses("DNS%.SOARecord#expire","DNS%.SOARecord#<init>(DNS%.Name,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)").
before_accesses("DNS%.SOARecord#expire","DNS%.SOARecord#getExpire()").
before_accesses("DNS%.SOARecord#expire","DNS%.SOARecord#rrToWire(DNS%.Compression)").
before_accesses("DNS%.SOARecord#expire","DNS%.SOARecord#toString()").
before_accesses("DNS%.SOARecord#host","DNS%.SOARecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)").
before_accesses("DNS%.SOARecord#host","DNS%.SOARecord#<init>(DNS%.Name,short,int,DNS%.Name,DNS%.Name,int,int,int,int,int)").
before_accesses("DNS%.SOARecord#host","DNS%.SOARecord#<init>(DNS%.Name,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)").
before_accesses("DNS%.SOARecord#host","DNS%.SOARecord#getHost()").
before_accesses("DNS%.SOARecord#host","DNS%.SOARecord#rrToWire(DNS%.Compression)").
before_accesses("DNS%.SOARecord#host","DNS%.SOARecord#toString()").
before_accesses("DNS%.SOARecord#minimum","DNS%.SOARecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)").
before_accesses("DNS%.SOARecord#minimum","DNS%.SOARecord#<init>(DNS%.Name,short,int,DNS%.Name,DNS%.Name,int,int,int,int,int)").
before_accesses("DNS%.SOARecord#minimum","DNS%.SOARecord#<init>(DNS%.Name,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)").
before_accesses("DNS%.SOARecord#minimum","DNS%.SOARecord#getMinimum()").
before_accesses("DNS%.SOARecord#minimum","DNS%.SOARecord#rrToWire(DNS%.Compression)").
before_accesses("DNS%.SOARecord#minimum","DNS%.SOARecord#toString()").
before_accesses("DNS%.SOARecord#refresh","DNS%.SOARecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)").
before_accesses("DNS%.SOARecord#refresh","DNS%.SOARecord#<init>(DNS%.Name,short,int,DNS%.Name,DNS%.Name,int,int,int,int,int)").
before_accesses("DNS%.SOARecord#refresh","DNS%.SOARecord#<init>(DNS%.Name,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)").
before_accesses("DNS%.SOARecord#refresh","DNS%.SOARecord#getRefresh()").
before_accesses("DNS%.SOARecord#refresh","DNS%.SOARecord#rrToWire(DNS%.Compression)").
before_accesses("DNS%.SOARecord#refresh","DNS%.SOARecord#toString()").
before_accesses("DNS%.SOARecord#retry","DNS%.SOARecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)").
before_accesses("DNS%.SOARecord#retry","DNS%.SOARecord#<init>(DNS%.Name,short,int,DNS%.Name,DNS%.Name,int,int,int,int,int)").
before_accesses("DNS%.SOARecord#retry","DNS%.SOARecord#<init>(DNS%.Name,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)").
before_accesses("DNS%.SOARecord#retry","DNS%.SOARecord#getRetry()").
before_accesses("DNS%.SOARecord#retry","DNS%.SOARecord#rrToWire(DNS%.Compression)").
before_accesses("DNS%.SOARecord#retry","DNS%.SOARecord#toString()").
before_accesses("DNS%.SOARecord#serial","DNS%.SOARecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)").
before_accesses("DNS%.SOARecord#serial","DNS%.SOARecord#<init>(DNS%.Name,short,int,DNS%.Name,DNS%.Name,int,int,int,int,int)").
before_accesses("DNS%.SOARecord#serial","DNS%.SOARecord#<init>(DNS%.Name,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)").
before_accesses("DNS%.SOARecord#serial","DNS%.SOARecord#getSerial()").
before_accesses("DNS%.SOARecord#serial","DNS%.SOARecord#rrToWire(DNS%.Compression)").
before_accesses("DNS%.SOARecord#serial","DNS%.SOARecord#toString()").
before_accesses("DNS%.SRVRecord#port","DNS%.SRVRecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)").
before_accesses("DNS%.SRVRecord#port","DNS%.SRVRecord#<init>(DNS%.Name,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)").
before_accesses("DNS%.SRVRecord#port","DNS%.SRVRecord#<init>(DNS%.Name,short,int,int,int,int,DNS%.Name)").
before_accesses("DNS%.SRVRecord#port","DNS%.SRVRecord#getPort()").
before_accesses("DNS%.SRVRecord#port","DNS%.SRVRecord#rrToWire(DNS%.Compression)").
before_accesses("DNS%.SRVRecord#port","DNS%.SRVRecord#toString()").
before_accesses("DNS%.SRVRecord#priority","DNS%.SRVRecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)").
before_accesses("DNS%.SRVRecord#priority","DNS%.SRVRecord#<init>(DNS%.Name,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)").
before_accesses("DNS%.SRVRecord#priority","DNS%.SRVRecord#<init>(DNS%.Name,short,int,int,int,int,DNS%.Name)").
before_accesses("DNS%.SRVRecord#priority","DNS%.SRVRecord#getPriority()").
before_accesses("DNS%.SRVRecord#priority","DNS%.SRVRecord#rrToWire(DNS%.Compression)").
before_accesses("DNS%.SRVRecord#priority","DNS%.SRVRecord#toString()").
before_accesses("DNS%.SRVRecord#target","DNS%.SRVRecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)").
before_accesses("DNS%.SRVRecord#target","DNS%.SRVRecord#<init>(DNS%.Name,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)").
before_accesses("DNS%.SRVRecord#target","DNS%.SRVRecord#<init>(DNS%.Name,short,int,int,int,int,DNS%.Name)").
before_accesses("DNS%.SRVRecord#target","DNS%.SRVRecord#getTarget()").
before_accesses("DNS%.SRVRecord#target","DNS%.SRVRecord#rrToWire(DNS%.Compression)").
before_accesses("DNS%.SRVRecord#target","DNS%.SRVRecord#toString()").
before_accesses("DNS%.SRVRecord#weight","DNS%.SRVRecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)").
before_accesses("DNS%.SRVRecord#weight","DNS%.SRVRecord#<init>(DNS%.Name,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)").
before_accesses("DNS%.SRVRecord#weight","DNS%.SRVRecord#<init>(DNS%.Name,short,int,int,int,int,DNS%.Name)").
before_accesses("DNS%.SRVRecord#weight","DNS%.SRVRecord#getWeight()").
before_accesses("DNS%.SRVRecord#weight","DNS%.SRVRecord#rrToWire(DNS%.Compression)").
before_accesses("DNS%.SRVRecord#weight","DNS%.SRVRecord#toString()").
before_accesses("DNS%.TSIG#axfrSigner","DNS%.TSIG#verify(DNS%.Message,byte[],DNS%.TSIGRecord)").
before_accesses("DNS%.TSIG#axfrSigner","DNS%.TSIG#verifyAXFR(DNS%.Message,byte[],DNS%.TSIGRecord,boolean,boolean)").
before_accesses("DNS%.TSIG#axfrSigner","DNS%.TSIG#verifyAXFRStart()").
before_accesses("DNS%.TSIG#key","DNS%.TSIG#<init>(java.lang%.String,byte[])").
before_accesses("DNS%.TSIG#key","DNS%.TSIG#apply(DNS%.Message)").
before_accesses("DNS%.TSIG#key","DNS%.TSIG#verify(DNS%.Message,byte[],DNS%.TSIGRecord)").
before_accesses("DNS%.TSIG#key","DNS%.TSIG#verifyAXFRStart()").
before_accesses("DNS%.TSIG#name","DNS%.TSIG#<init>(java.lang%.String,byte[])").
before_accesses("DNS%.TSIG#name","DNS%.TSIG#apply(DNS%.Message)").
before_accesses("DNS%.TSIGRecord#alg","DNS%.TSIGRecord#<init>(DNS%.Name,short,int,DNS%.Name,java.util%.Date,short,byte[],int,short,byte[])").
before_accesses("DNS%.TSIGRecord#alg","DNS%.TSIGRecord#<init>(DNS%.Name,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)").
before_accesses("DNS%.TSIGRecord#alg","DNS%.TSIGRecord#getAlg()").
before_accesses("DNS%.TSIGRecord#alg","DNS%.TSIGRecord#rrToWire(DNS%.Compression)").
before_accesses("DNS%.TSIGRecord#alg","DNS%.TSIGRecord#toString()").
before_accesses("DNS%.TSIGRecord#error","DNS%.TSIGRecord#<init>(DNS%.Name,short,int,DNS%.Name,java.util%.Date,short,byte[],int,short,byte[])").
before_accesses("DNS%.TSIGRecord#error","DNS%.TSIGRecord#<init>(DNS%.Name,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)").
before_accesses("DNS%.TSIGRecord#error","DNS%.TSIGRecord#getError()").
before_accesses("DNS%.TSIGRecord#error","DNS%.TSIGRecord#rrToWire(DNS%.Compression)").
before_accesses("DNS%.TSIGRecord#error","DNS%.TSIGRecord#toString()").
before_accesses("DNS%.TSIGRecord#fudge","DNS%.TSIGRecord#<init>(DNS%.Name,short,int,DNS%.Name,java.util%.Date,short,byte[],int,short,byte[])").
before_accesses("DNS%.TSIGRecord#fudge","DNS%.TSIGRecord#<init>(DNS%.Name,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)").
before_accesses("DNS%.TSIGRecord#fudge","DNS%.TSIGRecord#getFudge()").
before_accesses("DNS%.TSIGRecord#fudge","DNS%.TSIGRecord#rrToWire(DNS%.Compression)").
before_accesses("DNS%.TSIGRecord#originalID","DNS%.TSIGRecord#<init>(DNS%.Name,short,int,DNS%.Name,java.util%.Date,short,byte[],int,short,byte[])").
before_accesses("DNS%.TSIGRecord#originalID","DNS%.TSIGRecord#<init>(DNS%.Name,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)").
before_accesses("DNS%.TSIGRecord#originalID","DNS%.TSIGRecord#getOriginalID()").
before_accesses("DNS%.TSIGRecord#originalID","DNS%.TSIGRecord#rrToWire(DNS%.Compression)").
before_accesses("DNS%.TSIGRecord#other","DNS%.TSIGRecord#<init>(DNS%.Name,short,int,DNS%.Name,java.util%.Date,short,byte[],int,short,byte[])").
before_accesses("DNS%.TSIGRecord#other","DNS%.TSIGRecord#<init>(DNS%.Name,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)").
before_accesses("DNS%.TSIGRecord#other","DNS%.TSIGRecord#getOther()").
before_accesses("DNS%.TSIGRecord#other","DNS%.TSIGRecord#rrToWire(DNS%.Compression)").
before_accesses("DNS%.TSIGRecord#other","DNS%.TSIGRecord#toString()").
before_accesses("DNS%.TSIGRecord#signature","DNS%.TSIGRecord#<init>(DNS%.Name,short,int,DNS%.Name,java.util%.Date,short,byte[],int,short,byte[])").
before_accesses("DNS%.TSIGRecord#signature","DNS%.TSIGRecord#<init>(DNS%.Name,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)").
before_accesses("DNS%.TSIGRecord#signature","DNS%.TSIGRecord#getSignature()").
before_accesses("DNS%.TSIGRecord#signature","DNS%.TSIGRecord#rrToWire(DNS%.Compression)").
before_accesses("DNS%.TSIGRecord#signature","DNS%.TSIGRecord#toString()").
before_accesses("DNS%.TSIGRecord#timeSigned","DNS%.TSIGRecord#<init>(DNS%.Name,short,int,DNS%.Name,java.util%.Date,short,byte[],int,short,byte[])").
before_accesses("DNS%.TSIGRecord#timeSigned","DNS%.TSIGRecord#<init>(DNS%.Name,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)").
before_accesses("DNS%.TSIGRecord#timeSigned","DNS%.TSIGRecord#getTimeSigned()").
before_accesses("DNS%.TSIGRecord#timeSigned","DNS%.TSIGRecord#rrToWire(DNS%.Compression)").
before_accesses("DNS%.TSIGRecord#timeSigned","DNS%.TSIGRecord#toString()").
before_accesses("DNS%.TXTRecord#strings","DNS%.TXTRecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)").
before_accesses("DNS%.TXTRecord#strings","DNS%.TXTRecord#<init>(DNS%.Name,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)").
before_accesses("DNS%.TXTRecord#strings","DNS%.TXTRecord#<init>(DNS%.Name,short,int,java.lang%.String)").
before_accesses("DNS%.TXTRecord#strings","DNS%.TXTRecord#<init>(DNS%.Name,short,int,java.util%.Vector)").
before_accesses("DNS%.TXTRecord#strings","DNS%.TXTRecord#getStrings()").
before_accesses("DNS%.TXTRecord#strings","DNS%.TXTRecord#rrToWire(DNS%.Compression)").
before_accesses("DNS%.TXTRecord#strings","DNS%.TXTRecord#toString()").
before_accesses("DNS%.UNKRecord#data","DNS%.UNKRecord#<init>(DNS%.Name,short,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)").
before_accesses("DNS%.UNKRecord#data","DNS%.UNKRecord#rrToWire(DNS%.Compression)").
before_accesses("DNS%.UNKRecord#data","DNS%.UNKRecord#toString()").
before_accesses("DNS%.Zone#data","DNS%.Zone#<init>(java.lang%.String)").
before_accesses("DNS%.Zone#data","DNS%.Zone#findName(DNS%.Name)").
before_accesses("DNS%.Zone#origin","DNS%.Zone#<init>(java.lang%.String)").
before_accesses("DNS%.Zone#origin","DNS%.Zone#getOrigin()").
before_accesses("DNS%.dns#A","%.dig#main(java.lang%.String[])").
before_accesses("DNS%.dns#A","DNS%.ARecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)").
before_accesses("DNS%.dns#A","DNS%.ARecord#<init>(DNS%.Name,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)").
before_accesses("DNS%.dns#A","DNS%.ARecord#<init>(DNS%.Name,short,int,java.net%.InetAddress)").
before_accesses("DNS%.dns#AA","%.dnsServer#generateReply(DNS%.Message)").
before_accesses("DNS%.dns#ADDITIONAL","%.dig#doAXFR(DNS%.Message,DNS%.Resolver)").
before_accesses("DNS%.dns#ADDITIONAL","DNS%.Message#getTSIG()").
before_accesses("DNS%.dns#ADDITIONAL","DNS%.Resolver#send(DNS%.Message)").
before_accesses("DNS%.dns#ADDITIONAL","DNS%.TSIG#apply(DNS%.Message)").
before_accesses("DNS%.dns#ADDITIONAL","DNS%.TSIG#verify(DNS%.Message,byte[],DNS%.TSIGRecord)").
before_accesses("DNS%.dns#ADDITIONAL","DNS%.TSIG#verifyAXFR(DNS%.Message,byte[],DNS%.TSIGRecord,boolean,boolean)").
before_accesses("DNS%.dns#ANSWER","%.dig#doAXFR(DNS%.Message,DNS%.Resolver)").
before_accesses("DNS%.dns#ANSWER","%.dnsServer#generateReply(DNS%.Message)").
before_accesses("DNS%.dns#ANSWER","DNS%.Resolver#sendAXFR(DNS%.Message)").
before_accesses("DNS%.dns#ANSWER","DNS%.dns#getRecords(DNS%.Resolver,java.lang%.String,short,short)").
before_accesses("DNS%.dns#ANY","%.update#doDelete(DNS%.MyStringTokenizer)").
before_accesses("DNS%.dns#ANY","%.update#doRequire(DNS%.MyStringTokenizer)").
before_accesses("DNS%.dns#ANY","%.update#parseName(DNS%.MyStringTokenizer,short)").
before_accesses("DNS%.dns#ANY","DNS%.TSIG#apply(DNS%.Message)").
before_accesses("DNS%.dns#ANY","DNS%.dns#matchType(short,short)").
before_accesses("DNS%.dns#AUTHORITY","DNS%.Resolver#sendAXFR(DNS%.Message)").
before_accesses("DNS%.dns#AXFR","%.dig#main(java.lang%.String[])").
before_accesses("DNS%.dns#AXFR","%.update#doQuery(DNS%.MyStringTokenizer)").
before_accesses("DNS%.dns#BADTIME","DNS%.TSIGRecord#toString()").
before_accesses("DNS%.dns#CERT","DNS%.CERTRecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)").
before_accesses("DNS%.dns#CERT","DNS%.CERTRecord#<init>(DNS%.Name,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)").
before_accesses("DNS%.dns#CERT","DNS%.CERTRecord#<init>(DNS%.Name,short,int,int,int,int,byte[])").
before_accesses("DNS%.dns#CNAME","DNS%.CNAMERecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)").
before_accesses("DNS%.dns#CNAME","DNS%.CNAMERecord#<init>(DNS%.Name,short,int,DNS%.Name)").
before_accesses("DNS%.dns#CNAME","DNS%.CNAMERecord#<init>(DNS%.Name,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)").
before_accesses("DNS%.dns#HINFO","DNS%.HINFORecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)").
before_accesses("DNS%.dns#HINFO","DNS%.HINFORecord#<init>(DNS%.Name,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)").
before_accesses("DNS%.dns#HINFO","DNS%.HINFORecord#<init>(DNS%.Name,short,int,java.lang%.String,java.lang%.String)").
before_accesses("DNS%.dns#HMAC","DNS%.TSIG#apply(DNS%.Message)").
before_accesses("DNS%.dns#IN","%.dig#main(java.lang%.String[])").
before_accesses("DNS%.dns#IN","DNS%.Record#toStringNoData()").
before_accesses("DNS%.dns#IN","DNS%.Zone#parseRR(DNS%.MyStringTokenizer,boolean,DNS%.Record,DNS%.Name)").
before_accesses("DNS%.dns#IN","DNS%.dns#getRecords(DNS%.Resolver,java.lang%.String,short)").
before_accesses("DNS%.dns#IN","DNS%.dns#getRecords(java.lang%.String,short)").
before_accesses("DNS%.dns#IN","DNS%.dns#getRecordsByAddress(DNS%.Resolver,java.lang%.String,short)").
before_accesses("DNS%.dns#KEY","DNS%.KEYRecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)").
before_accesses("DNS%.dns#KEY","DNS%.KEYRecord#<init>(DNS%.Name,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)").
before_accesses("DNS%.dns#KEY","DNS%.KEYRecord#<init>(DNS%.Name,short,int,int,int,int,byte[])").
before_accesses("DNS%.dns#MX","DNS%.MXRecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)").
before_accesses("DNS%.dns#MX","DNS%.MXRecord#<init>(DNS%.Name,short,int,int,DNS%.Name)").
before_accesses("DNS%.dns#MX","DNS%.MXRecord#<init>(DNS%.Name,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)").
before_accesses("DNS%.dns#NOERROR","DNS%.TSIG#apply(DNS%.Message)").
before_accesses("DNS%.dns#NOERROR","DNS%.TSIG#verify(DNS%.Message,byte[],DNS%.TSIGRecord)").
before_accesses("DNS%.dns#NOERROR","DNS%.dns#getRecords(DNS%.Resolver,java.lang%.String,short,short)").
before_accesses("DNS%.dns#NONE","%.update#doDelete(DNS%.MyStringTokenizer)").
before_accesses("DNS%.dns#NONE","%.update#doProhibit(DNS%.MyStringTokenizer)").
before_accesses("DNS%.dns#NS","DNS%.NSRecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)").
before_accesses("DNS%.dns#NS","DNS%.NSRecord#<init>(DNS%.Name,short,int,DNS%.Name)").
before_accesses("DNS%.dns#NS","DNS%.NSRecord#<init>(DNS%.Name,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)").
before_accesses("DNS%.dns#NXDOMAIN","%.dnsServer#generateReply(DNS%.Message)").
before_accesses("DNS%.dns#NXT","DNS%.NXTRecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)").
before_accesses("DNS%.dns#NXT","DNS%.NXTRecord#<init>(DNS%.Name,short,int,DNS%.Name,java.util%.BitSet)").
before_accesses("DNS%.dns#NXT","DNS%.NXTRecord#<init>(DNS%.Name,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)").
before_accesses("DNS%.dns#OPT","DNS%.OPTRecord#<init>(DNS%.Name,short,int)").
before_accesses("DNS%.dns#OPT","DNS%.OPTRecord#<init>(DNS%.Name,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)").
before_accesses("DNS%.dns#PTR","DNS%.PTRRecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)").
before_accesses("DNS%.dns#PTR","DNS%.PTRRecord#<init>(DNS%.Name,short,int,DNS%.Name)").
before_accesses("DNS%.dns#PTR","DNS%.PTRRecord#<init>(DNS%.Name,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)").
before_accesses("DNS%.dns#QUERY","%.dig#main(java.lang%.String[])").
before_accesses("DNS%.dns#QUERY","%.update#doQuery(DNS%.MyStringTokenizer)").
before_accesses("DNS%.dns#QUERY","DNS%.dns#getRecords(DNS%.Resolver,java.lang%.String,short,short)").
before_accesses("DNS%.dns#QUESTION","%.dig#main(java.lang%.String[])").
before_accesses("DNS%.dns#QUESTION","%.dnsServer#generateReply(DNS%.Message)").
before_accesses("DNS%.dns#QUESTION","%.update#doQuery(DNS%.MyStringTokenizer)").
before_accesses("DNS%.dns#QUESTION","DNS%.Message#sectionToString(int)").
before_accesses("DNS%.dns#QUESTION","DNS%.Record#fromWire(DNS.utils%.CountedDataInputStream,int,DNS%.Compression)").
before_accesses("DNS%.dns#QUESTION","DNS%.Record#toWire(DNS.utils%.CountedDataOutputStream,int,DNS%.Compression)").
before_accesses("DNS%.dns#QUESTION","DNS%.Record#toWireCanonical(DNS.utils%.CountedDataOutputStream,int)").
before_accesses("DNS%.dns#QUESTION","DNS%.Resolver#sendAXFR(DNS%.Message)").
before_accesses("DNS%.dns#QUESTION","DNS%.dns#getRecords(DNS%.Resolver,java.lang%.String,short,short)").
before_accesses("DNS%.dns#RD","%.dig#main(java.lang%.String[])").
before_accesses("DNS%.dns#RD","%.update#doQuery(DNS%.MyStringTokenizer)").
before_accesses("DNS%.dns#RD","DNS%.dns#getRecords(DNS%.Resolver,java.lang%.String,short,short)").
before_accesses("DNS%.dns#SERVFAIL","%.dnsServer#generateReply(DNS%.Message)").
before_accesses("DNS%.dns#SIG","DNS%.SIGRecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)").
before_accesses("DNS%.dns#SIG","DNS%.SIGRecord#<init>(DNS%.Name,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)").
before_accesses("DNS%.dns#SIG","DNS%.SIGRecord#<init>(DNS%.Name,short,int,int,int,int,java.util%.Date,java.util%.Date,int,DNS%.Name,byte[])").
before_accesses("DNS%.dns#SOA","%.update#sendUpdate()").
before_accesses("DNS%.dns#SOA","DNS%.SOARecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)").
before_accesses("DNS%.dns#SOA","DNS%.SOARecord#<init>(DNS%.Name,short,int,DNS%.Name,DNS%.Name,int,int,int,int,int)").
before_accesses("DNS%.dns#SOA","DNS%.SOARecord#<init>(DNS%.Name,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)").
before_accesses("DNS%.dns#SRV","DNS%.SRVRecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)").
before_accesses("DNS%.dns#SRV","DNS%.SRVRecord#<init>(DNS%.Name,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)").
before_accesses("DNS%.dns#SRV","DNS%.SRVRecord#<init>(DNS%.Name,short,int,int,int,int,DNS%.Name)").
before_accesses("DNS%.dns#TC","DNS%.Resolver#send(DNS%.Message)").
before_accesses("DNS%.dns#TSIG","DNS%.Message#getTSIG()").
before_accesses("DNS%.dns#TSIG","DNS%.TSIGRecord#<init>(DNS%.Name,short,int,DNS%.Name,java.util%.Date,short,byte[],int,short,byte[])").
before_accesses("DNS%.dns#TSIG","DNS%.TSIGRecord#<init>(DNS%.Name,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)").
before_accesses("DNS%.dns#TXT","DNS%.TXTRecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)").
before_accesses("DNS%.dns#TXT","DNS%.TXTRecord#<init>(DNS%.Name,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)").
before_accesses("DNS%.dns#TXT","DNS%.TXTRecord#<init>(DNS%.Name,short,int,java.lang%.String)").
before_accesses("DNS%.dns#TXT","DNS%.TXTRecord#<init>(DNS%.Name,short,int,java.util%.Vector)").
before_accesses("DNS%.dns#UPDATE","%.update#<init>(java.io%.InputStream)").
before_accesses("DNS%.dns#_res","DNS%.dns#getRecords(DNS%.Resolver,java.lang%.String,short,short)").
before_accesses("DNS%.dns#_res","DNS%.dns#getRecords(java.lang%.String,short)").
before_accesses("DNS%.dns#_res","DNS%.dns#getRecords(java.lang%.String,short,short)").
before_accesses("DNS%.dns#_res","DNS%.dns#getRecordsByAddress(java.lang%.String,short)").
before_accesses("DNS%.dns#classes","DNS%.dns#classString(int)").
before_accesses("DNS%.dns#classes","DNS%.dns#classValue(java.lang%.String)").
before_accesses("DNS%.dns#flags","DNS%.dns#flagString(int)").
before_accesses("DNS%.dns#longSections","DNS%.dns#longSectionString(int)").
before_accesses("DNS%.dns#opcodes","DNS%.dns#opcodeString(int)").
before_accesses("DNS%.dns#rcodes","DNS%.dns#rcodeString(int)").
before_accesses("DNS%.dns#rcodes","DNS%.dns#rcodeValue(java.lang%.String)").
before_accesses("DNS%.dns#sections","DNS%.dns#sectionString(int)").
before_accesses("DNS%.dns#sections","DNS%.dns#sectionValue(java.lang%.String)").
before_accesses("DNS%.dns#types","DNS%.dns#typeString(int)").
before_accesses("DNS%.dns#types","DNS%.dns#typeValue(java.lang%.String)").
before_accesses("DNS.utils%.CountedDataInputStream#counter","DNS.utils%.CountedDataInputStream#<init>(java.io%.InputStream)").
before_accesses("DNS.utils%.CountedDataInputStream#counter","DNS.utils%.CountedDataInputStream#getPos()").
before_accesses("DNS.utils%.CountedDataInputStream#counter","DNS.utils%.CountedDataInputStream#read(byte[])").
before_accesses("DNS.utils%.CountedDataInputStream#counter","DNS.utils%.CountedDataInputStream#readByte()").
before_accesses("DNS.utils%.CountedDataInputStream#counter","DNS.utils%.CountedDataInputStream#readInt()").
before_accesses("DNS.utils%.CountedDataInputStream#counter","DNS.utils%.CountedDataInputStream#readLong()").
before_accesses("DNS.utils%.CountedDataInputStream#counter","DNS.utils%.CountedDataInputStream#readShort()").
before_accesses("DNS.utils%.CountedDataInputStream#counter","DNS.utils%.CountedDataInputStream#readString()").
before_accesses("DNS.utils%.CountedDataInputStream#counter","DNS.utils%.CountedDataInputStream#readUnsignedByte()").
before_accesses("DNS.utils%.CountedDataInputStream#counter","DNS.utils%.CountedDataInputStream#readUnsignedShort()").
before_accesses("DNS.utils%.CountedDataInputStream#counter","DNS.utils%.CountedDataInputStream#skipBytes(int)").
before_accesses("DNS.utils%.CountedDataInputStream#in","DNS.utils%.CountedDataInputStream#<init>(java.io%.InputStream)").
before_accesses("DNS.utils%.CountedDataInputStream#in","DNS.utils%.CountedDataInputStream#read(byte[])").
before_accesses("DNS.utils%.CountedDataInputStream#in","DNS.utils%.CountedDataInputStream#readByte()").
before_accesses("DNS.utils%.CountedDataInputStream#in","DNS.utils%.CountedDataInputStream#readInt()").
before_accesses("DNS.utils%.CountedDataInputStream#in","DNS.utils%.CountedDataInputStream#readLong()").
before_accesses("DNS.utils%.CountedDataInputStream#in","DNS.utils%.CountedDataInputStream#readShort()").
before_accesses("DNS.utils%.CountedDataInputStream#in","DNS.utils%.CountedDataInputStream#readString()").
before_accesses("DNS.utils%.CountedDataInputStream#in","DNS.utils%.CountedDataInputStream#readUnsignedByte()").
before_accesses("DNS.utils%.CountedDataInputStream#in","DNS.utils%.CountedDataInputStream#readUnsignedShort()").
before_accesses("DNS.utils%.CountedDataInputStream#in","DNS.utils%.CountedDataInputStream#skipBytes(int)").
before_accesses("DNS.utils%.CountedDataOutputStream#counter","DNS.utils%.CountedDataOutputStream#<init>(java.io%.OutputStream)").
before_accesses("DNS.utils%.CountedDataOutputStream#counter","DNS.utils%.CountedDataOutputStream#getPos()").
before_accesses("DNS.utils%.CountedDataOutputStream#counter","DNS.utils%.CountedDataOutputStream#write(byte[])").
before_accesses("DNS.utils%.CountedDataOutputStream#counter","DNS.utils%.CountedDataOutputStream#writeByte(int)").
before_accesses("DNS.utils%.CountedDataOutputStream#counter","DNS.utils%.CountedDataOutputStream#writeInt(int)").
before_accesses("DNS.utils%.CountedDataOutputStream#counter","DNS.utils%.CountedDataOutputStream#writeLong(long)").
before_accesses("DNS.utils%.CountedDataOutputStream#counter","DNS.utils%.CountedDataOutputStream#writeShort(int)").
before_accesses("DNS.utils%.CountedDataOutputStream#counter","DNS.utils%.CountedDataOutputStream#writeString(java.lang%.String)").
before_accesses("DNS.utils%.CountedDataOutputStream#out","DNS.utils%.CountedDataOutputStream#<init>(java.io%.OutputStream)").
before_accesses("DNS.utils%.CountedDataOutputStream#out","DNS.utils%.CountedDataOutputStream#write(byte[])").
before_accesses("DNS.utils%.CountedDataOutputStream#out","DNS.utils%.CountedDataOutputStream#writeByte(int)").
before_accesses("DNS.utils%.CountedDataOutputStream#out","DNS.utils%.CountedDataOutputStream#writeInt(int)").
before_accesses("DNS.utils%.CountedDataOutputStream#out","DNS.utils%.CountedDataOutputStream#writeLong(long)").
before_accesses("DNS.utils%.CountedDataOutputStream#out","DNS.utils%.CountedDataOutputStream#writeShort(int)").
before_accesses("DNS.utils%.CountedDataOutputStream#out","DNS.utils%.CountedDataOutputStream#writeString(java.lang%.String)").
before_accesses("DNS.utils%.base16#Base16","DNS.utils%.base16#fromString(java.lang%.String)").
before_accesses("DNS.utils%.base16#Base16","DNS.utils%.base16#toString(byte[])").
before_accesses("DNS.utils%.base64#Base64","DNS.utils%.base64#fromString(java.lang%.String)").
before_accesses("DNS.utils%.base64#Base64","DNS.utils%.base64#toString(byte[])").
before_accesses("DNS.utils%.hmacSigner#IPAD","DNS.utils%.hmacSigner#<init>(byte[])").
before_accesses("DNS.utils%.hmacSigner#OPAD","DNS.utils%.hmacSigner#<init>(byte[])").
before_accesses("DNS.utils%.hmacSigner#PADLEN","DNS.utils%.hmacSigner#<init>(byte[])").
before_accesses("DNS.utils%.hmacSigner#bytes","DNS.utils%.hmacSigner#<init>(byte[])").
before_accesses("DNS.utils%.hmacSigner#bytes","DNS.utils%.hmacSigner#addData(byte[])").
before_accesses("DNS.utils%.hmacSigner#bytes","DNS.utils%.hmacSigner#addData(byte[],int,int)").
before_accesses("DNS.utils%.hmacSigner#bytes","DNS.utils%.hmacSigner#clear()").
before_accesses("DNS.utils%.hmacSigner#bytes","DNS.utils%.hmacSigner#sign()").
before_accesses("DNS.utils%.hmacSigner#ipad","DNS.utils%.hmacSigner#<init>(byte[])").
before_accesses("DNS.utils%.hmacSigner#ipad","DNS.utils%.hmacSigner#clear()").
before_accesses("DNS.utils%.hmacSigner#opad","DNS.utils%.hmacSigner#<init>(byte[])").
before_accesses("DNS.utils%.hmacSigner#opad","DNS.utils%.hmacSigner#sign()").
before_accesses("DNS.utils%.md5#S11","DNS.utils%.md5#digest(byte[],int,int,int[])").
before_accesses("DNS.utils%.md5#S12","DNS.utils%.md5#digest(byte[],int,int,int[])").
before_accesses("DNS.utils%.md5#S13","DNS.utils%.md5#digest(byte[],int,int,int[])").
before_accesses("DNS.utils%.md5#S14","DNS.utils%.md5#digest(byte[],int,int,int[])").
before_accesses("DNS.utils%.md5#S21","DNS.utils%.md5#digest(byte[],int,int,int[])").
before_accesses("DNS.utils%.md5#S22","DNS.utils%.md5#digest(byte[],int,int,int[])").
before_accesses("DNS.utils%.md5#S23","DNS.utils%.md5#digest(byte[],int,int,int[])").
before_accesses("DNS.utils%.md5#S24","DNS.utils%.md5#digest(byte[],int,int,int[])").
before_accesses("DNS.utils%.md5#S31","DNS.utils%.md5#digest(byte[],int,int,int[])").
before_accesses("DNS.utils%.md5#S32","DNS.utils%.md5#digest(byte[],int,int,int[])").
before_accesses("DNS.utils%.md5#S33","DNS.utils%.md5#digest(byte[],int,int,int[])").
before_accesses("DNS.utils%.md5#S34","DNS.utils%.md5#digest(byte[],int,int,int[])").
before_accesses("DNS.utils%.md5#S41","DNS.utils%.md5#digest(byte[],int,int,int[])").
before_accesses("DNS.utils%.md5#S42","DNS.utils%.md5#digest(byte[],int,int,int[])").
before_accesses("DNS.utils%.md5#S43","DNS.utils%.md5#digest(byte[],int,int,int[])").
before_accesses("DNS.utils%.md5#S44","DNS.utils%.md5#digest(byte[],int,int,int[])").
before_accesses("java.lang%.Integer#TYPE","DNS%.Record#fromString(DNS%.Name,short,short,int,DNS%.MyStringTokenizer,DNS%.Name)").
before_accesses("java.lang%.Integer#TYPE","DNS%.Record#newRecord(DNS%.Name,short,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)").
before_accesses("java.lang%.Short#TYPE","DNS%.Record#fromString(DNS%.Name,short,short,int,DNS%.MyStringTokenizer,DNS%.Name)").
before_accesses("java.lang%.Short#TYPE","DNS%.Record#newRecord(DNS%.Name,short,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)").
before_accesses("java.lang%.System#in","%.update#<init>(java.io%.InputStream)").
before_accesses("java.lang%.System#in","%.update#main(java.lang%.String[])").
before_accesses("java.lang%.System#in","DNS%.MyStringTokenizer#main(java.lang%.String[])").
before_accesses("java.lang%.System#out","%.dig#doAXFR(DNS%.Message,DNS%.Resolver)").
before_accesses("java.lang%.System#out","%.dig#doQuery(DNS%.Message,DNS%.Resolver)").
before_accesses("java.lang%.System#out","%.dig#main(java.lang%.String[])").
before_accesses("java.lang%.System#out","%.dig#usage()").
before_accesses("java.lang%.System#out","%.dnsServer#main(java.lang%.String[])").
before_accesses("java.lang%.System#out","%.dnsServer#serveTCP(short)").
before_accesses("java.lang%.System#out","%.dnsServer#serveUDP(short)").
before_accesses("java.lang%.System#out","%.update#<init>(java.io%.InputStream)").
before_accesses("java.lang%.System#out","%.update#doAdd(DNS%.MyStringTokenizer)").
before_accesses("java.lang%.System#out","%.update#doAssert(DNS%.MyStringTokenizer)").
before_accesses("java.lang%.System#out","%.update#doDelete(DNS%.MyStringTokenizer)").
before_accesses("java.lang%.System#out","%.update#doFile(DNS%.MyStringTokenizer,java.util%.Vector)").
before_accesses("java.lang%.System#out","%.update#doGlue(DNS%.MyStringTokenizer)").
before_accesses("java.lang%.System#out","%.update#doProhibit(DNS%.MyStringTokenizer)").
before_accesses("java.lang%.System#out","%.update#doQuery(DNS%.MyStringTokenizer)").
before_accesses("java.lang%.System#out","%.update#doRequire(DNS%.MyStringTokenizer)").
before_accesses("java.lang%.System#out","%.update#help(java.lang%.String)").
before_accesses("java.lang%.System#out","%.update#helpAttributes()").
before_accesses("java.lang%.System#out","%.update#helpData()").
before_accesses("java.lang%.System#out","%.update#helpOperations()").
before_accesses("java.lang%.System#out","%.update#helpResolver()").
before_accesses("java.lang%.System#out","%.update#main(java.lang%.String[])").
before_accesses("java.lang%.System#out","%.update#sendUpdate()").
before_accesses("java.lang%.System#out","DNS%.ARecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)").
before_accesses("java.lang%.System#out","DNS%.ARecord#<init>(DNS%.Name,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)").
before_accesses("java.lang%.System#out","DNS%.MyStringTokenizer#main(java.lang%.String[])").
before_accesses("java.lang%.System#out","DNS%.Name#<init>(java.lang%.String,DNS%.Name)").
before_accesses("java.lang%.System#out","DNS%.Record#fromString(DNS%.Name,short,short,int,DNS%.MyStringTokenizer,DNS%.Name)").
before_accesses("java.lang%.System#out","DNS%.Record#newRecord(DNS%.Name,short,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)").
before_accesses("java.lang%.System#out","DNS%.Resolver#send(DNS%.Message)").
before_accesses("java.lang%.System#out","DNS%.Resolver#sendAXFR(DNS%.Message)").
before_accesses("java.lang%.System#out","DNS%.Resolver#sendTCP(DNS%.Message,byte[])").
before_accesses("java.lang%.System#out","DNS%.Resolver#setTSIGKey(java.lang%.String)").
before_accesses("java.lang%.System#out","DNS%.Resolver#setTSIGKey(java.lang%.String,java.lang%.String)").
before_accesses("java.lang%.System#out","DNS%.UNKRecord#<init>(DNS%.Name,short,short,int,DNS%.MyStringTokenizer,DNS%.Name)").
before_accesses("java.lang%.System#out","DNS%.dns#getRecords(DNS%.Resolver,java.lang%.String,short,short)").
before_accesses("java.lang%.System#out","DNS.utils%.hmacSigner#printByteString(java.lang%.String,byte[],int,int)").
before_accesses("java.util%.Calendar#DAY_OF_MONTH","DNS%.SIGRecord#formatDate(java.util%.Date)").
before_accesses("java.util%.Calendar#HOUR_OF_DAY","DNS%.SIGRecord#formatDate(java.util%.Date)").
before_accesses("java.util%.Calendar#MINUTE","DNS%.SIGRecord#formatDate(java.util%.Date)").
before_accesses("java.util%.Calendar#MONTH","DNS%.SIGRecord#formatDate(java.util%.Date)").
before_accesses("java.util%.Calendar#SECOND","DNS%.SIGRecord#formatDate(java.util%.Date)").
before_accesses("java.util%.Calendar#YEAR","DNS%.SIGRecord#formatDate(java.util%.Date)").
before_calls("%.dig#doAXFR(DNS%.Message,DNS%.Resolver)","DNS%.Header#getCount(int)").
before_calls("%.dig#doAXFR(DNS%.Message,DNS%.Resolver)","DNS%.Message#getHeader()").
before_calls("%.dig#doAXFR(DNS%.Message,DNS%.Resolver)","DNS%.Message#getSection(int)").
before_calls("%.dig#doAXFR(DNS%.Message,DNS%.Resolver)","DNS%.Resolver#sendAXFR(DNS%.Message)").
before_calls("%.dig#doAXFR(DNS%.Message,DNS%.Resolver)","java.io%.PrintStream#print(int)").
before_calls("%.dig#doAXFR(DNS%.Message,DNS%.Resolver)","java.io%.PrintStream#print(java.lang%.String)").
before_calls("%.dig#doAXFR(DNS%.Message,DNS%.Resolver)","java.io%.PrintStream#println(java.lang%.Object)").
before_calls("%.dig#doAXFR(DNS%.Message,DNS%.Resolver)","java.io%.PrintStream#println(java.lang%.String)").
before_calls("%.dig#doAXFR(DNS%.Message,DNS%.Resolver)","java.util%.Enumeration#hasMoreElements()").
before_calls("%.dig#doAXFR(DNS%.Message,DNS%.Resolver)","java.util%.Enumeration#nextElement()").
before_calls("%.dig#doQuery(DNS%.Message,DNS%.Resolver)","DNS%.Resolver#send(DNS%.Message)").
before_calls("%.dig#doQuery(DNS%.Message,DNS%.Resolver)","java.io%.PrintStream#println(java.lang%.Object)").
before_calls("%.dig#doQuery(DNS%.Message,DNS%.Resolver)","java.io%.PrintStream#println(java.lang%.String)").
before_calls("%.dig#main(java.lang%.String[])","%.dig#doAXFR(DNS%.Message,DNS%.Resolver)").
before_calls("%.dig#main(java.lang%.String[])","%.dig#doQuery(DNS%.Message,DNS%.Resolver)").
before_calls("%.dig#main(java.lang%.String[])","%.dig#usage()").
before_calls("%.dig#main(java.lang%.String[])","DNS%.Header#setFlag(int)").
before_calls("%.dig#main(java.lang%.String[])","DNS%.Header#setOpcode(byte)").
before_calls("%.dig#main(java.lang%.String[])","DNS%.Message#<init>()").
before_calls("%.dig#main(java.lang%.String[])","DNS%.Message#addRecord(int,DNS%.Record)").
before_calls("%.dig#main(java.lang%.String[])","DNS%.Message#getHeader()").
before_calls("%.dig#main(java.lang%.String[])","DNS%.Name#<init>(java.lang%.String)").
before_calls("%.dig#main(java.lang%.String[])","DNS%.Record#newRecord(DNS%.Name,short,short)").
before_calls("%.dig#main(java.lang%.String[])","DNS%.Resolver#<init>()").
before_calls("%.dig#main(java.lang%.String[])","DNS%.Resolver#<init>(java.lang%.String)").
before_calls("%.dig#main(java.lang%.String[])","DNS%.Resolver#setEDNS(boolean)").
before_calls("%.dig#main(java.lang%.String[])","DNS%.Resolver#setPort(int)").
before_calls("%.dig#main(java.lang%.String[])","DNS%.Resolver#setTCP(boolean)").
before_calls("%.dig#main(java.lang%.String[])","DNS%.Resolver#setTSIGKey(java.lang%.String)").
before_calls("%.dig#main(java.lang%.String[])","DNS%.Resolver#setTSIGKey(java.lang%.String,java.lang%.String)").
before_calls("%.dig#main(java.lang%.String[])","DNS%.dns#classValue(java.lang%.String)").
before_calls("%.dig#main(java.lang%.String[])","DNS%.dns#typeValue(java.lang%.String)").
before_calls("%.dig#main(java.lang%.String[])","java.io%.PrintStream#print(java.lang%.String)").
before_calls("%.dig#main(java.lang%.String[])","java.io%.PrintStream#println(java.lang%.String)").
before_calls("%.dig#main(java.lang%.String[])","java.lang%.Integer#parseInt(java.lang%.String)").
before_calls("%.dig#main(java.lang%.String[])","java.lang%.String#charAt(int)").
before_calls("%.dig#main(java.lang%.String[])","java.lang%.String#indexOf(int)").
before_calls("%.dig#main(java.lang%.String[])","java.lang%.String#length()").
before_calls("%.dig#main(java.lang%.String[])","java.lang%.String#startsWith(java.lang%.String)").
before_calls("%.dig#main(java.lang%.String[])","java.lang%.String#substring(int)").
before_calls("%.dig#main(java.lang%.String[])","java.lang%.String#substring(int,int)").
before_calls("%.dig#usage()","java.io%.PrintStream#println(java.lang%.String)").
before_calls("%.dig#usage()","java.lang%.System#exit(int)").
before_calls("%.dnsServer#1#run()","%.dnsServer#serveUDP(short)").
before_calls("%.dnsServer#2#run()","%.dnsServer#serveTCP(short)").
before_calls("%.dnsServer#<init>()","java.util%.Hashtable#<init>()").
before_calls("%.dnsServer#addTCP(short)","%.dnsServer#1#<init>()").
before_calls("%.dnsServer#addTCP(short)","java.lang%.Thread#<init>(java.lang%.Runnable)").
before_calls("%.dnsServer#addTCP(short)","java.lang%.Thread#start()").
before_calls("%.dnsServer#addUDP(short)","%.dnsServer#2#<init>()").
before_calls("%.dnsServer#addUDP(short)","java.lang%.Thread#<init>(java.lang%.Runnable)").
before_calls("%.dnsServer#addUDP(short)","java.lang%.Thread#start()").
before_calls("%.dnsServer#addZone(java.lang%.String)","DNS%.Zone#<init>(java.lang%.String)").
before_calls("%.dnsServer#addZone(java.lang%.String)","DNS%.Zone#getOrigin()").
before_calls("%.dnsServer#addZone(java.lang%.String)","java.util%.Hashtable#put(java.lang%.Object,java.lang%.Object)").
before_calls("%.dnsServer#findBestZone(DNS%.Name)","DNS%.Name#<init>(DNS%.Name,int)").
before_calls("%.dnsServer#findBestZone(DNS%.Name)","DNS%.Name#equals(java.lang%.Object)").
before_calls("%.dnsServer#findBestZone(DNS%.Name)","java.util%.Hashtable#get(java.lang%.Object)").
before_calls("%.dnsServer#generateReply(DNS%.Message)","%.dnsServer#findBestZone(DNS%.Name)").
before_calls("%.dnsServer#generateReply(DNS%.Message)","DNS%.Header#getID()").
before_calls("%.dnsServer#generateReply(DNS%.Message)","DNS%.Header#setFlag(int)").
before_calls("%.dnsServer#generateReply(DNS%.Message)","DNS%.Header#setID(int)").
before_calls("%.dnsServer#generateReply(DNS%.Message)","DNS%.Header#setRcode(byte)").
before_calls("%.dnsServer#generateReply(DNS%.Message)","DNS%.Message#<init>()").
before_calls("%.dnsServer#generateReply(DNS%.Message)","DNS%.Message#addRecord(int,DNS%.Record)").
before_calls("%.dnsServer#generateReply(DNS%.Message)","DNS%.Message#getHeader()").
before_calls("%.dnsServer#generateReply(DNS%.Message)","DNS%.Message#getSection(int)").
before_calls("%.dnsServer#generateReply(DNS%.Message)","DNS%.Record#getDClass()").
before_calls("%.dnsServer#generateReply(DNS%.Message)","DNS%.Record#getName()").
before_calls("%.dnsServer#generateReply(DNS%.Message)","DNS%.Record#getType()").
before_calls("%.dnsServer#generateReply(DNS%.Message)","DNS%.Zone#findName(DNS%.Name)").
before_calls("%.dnsServer#generateReply(DNS%.Message)","java.util%.Enumeration#hasMoreElements()").
before_calls("%.dnsServer#generateReply(DNS%.Message)","java.util%.Enumeration#nextElement()").
before_calls("%.dnsServer#generateReply(DNS%.Message)","java.util%.Vector#elements()").
before_calls("%.dnsServer#main(java.lang%.String[])","%.dnsServer#<init>()").
before_calls("%.dnsServer#main(java.lang%.String[])","%.dnsServer#addTCP(short)").
before_calls("%.dnsServer#main(java.lang%.String[])","%.dnsServer#addUDP(short)").
before_calls("%.dnsServer#main(java.lang%.String[])","%.dnsServer#addZone(java.lang%.String)").
before_calls("%.dnsServer#main(java.lang%.String[])","java.io%.PrintStream#println(java.lang%.Object)").
before_calls("%.dnsServer#main(java.lang%.String[])","java.io%.PrintStream#println(java.lang%.String)").
before_calls("%.dnsServer#main(java.lang%.String[])","java.lang%.System#exit(int)").
before_calls("%.dnsServer#serveTCP(short)","%.dnsServer#generateReply(DNS%.Message)").
before_calls("%.dnsServer#serveTCP(short)","DNS%.Message#<init>(byte[])").
before_calls("%.dnsServer#serveTCP(short)","DNS%.Message#toWire()").
before_calls("%.dnsServer#serveTCP(short)","java.io%.DataInputStream#<init>(java.io%.InputStream)").
before_calls("%.dnsServer#serveTCP(short)","java.io%.DataInputStream#readFully(byte[])").
before_calls("%.dnsServer#serveTCP(short)","java.io%.DataInputStream#readUnsignedShort()").
before_calls("%.dnsServer#serveTCP(short)","java.io%.DataOutputStream#<init>(java.io%.OutputStream)").
before_calls("%.dnsServer#serveTCP(short)","java.io%.DataOutputStream#writeShort(int)").
before_calls("%.dnsServer#serveTCP(short)","java.io%.FilterOutputStream#write(byte[])").
before_calls("%.dnsServer#serveTCP(short)","java.io%.PrintStream#println(java.lang%.String)").
before_calls("%.dnsServer#serveTCP(short)","java.net%.ServerSocket#<init>(int)").
before_calls("%.dnsServer#serveTCP(short)","java.net%.ServerSocket#accept()").
before_calls("%.dnsServer#serveTCP(short)","java.net%.Socket#close()").
before_calls("%.dnsServer#serveTCP(short)","java.net%.Socket#getInputStream()").
before_calls("%.dnsServer#serveTCP(short)","java.net%.Socket#getOutputStream()").
before_calls("%.dnsServer#serveUDP(short)","%.dnsServer#generateReply(DNS%.Message)").
before_calls("%.dnsServer#serveUDP(short)","DNS%.Message#<init>(byte[])").
before_calls("%.dnsServer#serveUDP(short)","DNS%.Message#toWire()").
before_calls("%.dnsServer#serveUDP(short)","java.io%.PrintStream#println(java.lang%.String)").
before_calls("%.dnsServer#serveUDP(short)","java.lang%.System#arraycopy(java.lang%.Object,int,java.lang%.Object,int,int)").
before_calls("%.dnsServer#serveUDP(short)","java.net%.DatagramPacket#<init>(byte[],int)").
before_calls("%.dnsServer#serveUDP(short)","java.net%.DatagramPacket#<init>(byte[],int,java.net%.InetAddress,int)").
before_calls("%.dnsServer#serveUDP(short)","java.net%.DatagramPacket#getAddress()").
before_calls("%.dnsServer#serveUDP(short)","java.net%.DatagramPacket#getData()").
before_calls("%.dnsServer#serveUDP(short)","java.net%.DatagramPacket#getLength()").
before_calls("%.dnsServer#serveUDP(short)","java.net%.DatagramPacket#getPort()").
before_calls("%.dnsServer#serveUDP(short)","java.net%.DatagramSocket#<init>(int)").
before_calls("%.dnsServer#serveUDP(short)","java.net%.DatagramSocket#receive(java.net%.DatagramPacket)").
before_calls("%.dnsServer#serveUDP(short)","java.net%.DatagramSocket#send(java.net%.DatagramPacket)").
before_calls("%.update#<init>(java.io%.InputStream)","%.update#doAdd(DNS%.MyStringTokenizer)").
before_calls("%.update#<init>(java.io%.InputStream)","%.update#doAssert(DNS%.MyStringTokenizer)").
before_calls("%.update#<init>(java.io%.InputStream)","%.update#doDelete(DNS%.MyStringTokenizer)").
before_calls("%.update#<init>(java.io%.InputStream)","%.update#doFile(DNS%.MyStringTokenizer,java.util%.Vector)").
before_calls("%.update#<init>(java.io%.InputStream)","%.update#doGlue(DNS%.MyStringTokenizer)").
before_calls("%.update#<init>(java.io%.InputStream)","%.update#doProhibit(DNS%.MyStringTokenizer)").
before_calls("%.update#<init>(java.io%.InputStream)","%.update#doQuery(DNS%.MyStringTokenizer)").
before_calls("%.update#<init>(java.io%.InputStream)","%.update#doRequire(DNS%.MyStringTokenizer)").
before_calls("%.update#<init>(java.io%.InputStream)","%.update#help(java.lang%.String)").
before_calls("%.update#<init>(java.io%.InputStream)","%.update#sendUpdate()").
before_calls("%.update#<init>(java.io%.InputStream)","DNS%.Header#setOpcode(byte)").
before_calls("%.update#<init>(java.io%.InputStream)","DNS%.IO#readExtendedLine(java.io%.BufferedReader)").
before_calls("%.update#<init>(java.io%.InputStream)","DNS%.Message#<init>()").
before_calls("%.update#<init>(java.io%.InputStream)","DNS%.Message#getHeader()").
before_calls("%.update#<init>(java.io%.InputStream)","DNS%.MyStringTokenizer#<init>(java.lang%.String)").
before_calls("%.update#<init>(java.io%.InputStream)","DNS%.MyStringTokenizer#hasMoreTokens()").
before_calls("%.update#<init>(java.io%.InputStream)","DNS%.MyStringTokenizer#nextToken()").
before_calls("%.update#<init>(java.io%.InputStream)","DNS%.Name#<init>(java.lang%.String)").
before_calls("%.update#<init>(java.io%.InputStream)","DNS%.Resolver#<init>(java.lang%.String)").
before_calls("%.update#<init>(java.io%.InputStream)","DNS%.Resolver#setPort(int)").
before_calls("%.update#<init>(java.io%.InputStream)","DNS%.Resolver#setTCP(boolean)").
before_calls("%.update#<init>(java.io%.InputStream)","DNS%.Resolver#setTSIGKey(java.lang%.String,java.lang%.String)").
before_calls("%.update#<init>(java.io%.InputStream)","DNS%.dns#classValue(java.lang%.String)").
before_calls("%.update#<init>(java.io%.InputStream)","java.io%.BufferedReader#<init>(java.io%.Reader)").
before_calls("%.update#<init>(java.io%.InputStream)","java.io%.InputStreamReader#<init>(java.io%.InputStream)").
before_calls("%.update#<init>(java.io%.InputStream)","java.io%.PrintStream#print(java.lang%.String)").
before_calls("%.update#<init>(java.io%.InputStream)","java.io%.PrintStream#println(java.lang%.String)").
before_calls("%.update#<init>(java.io%.InputStream)","java.lang%.Integer#parseInt(java.lang%.String)").
before_calls("%.update#<init>(java.io%.InputStream)","java.lang%.Short#parseShort(java.lang%.String)").
before_calls("%.update#<init>(java.io%.InputStream)","java.lang%.String#equals(java.lang%.Object)").
before_calls("%.update#<init>(java.io%.InputStream)","java.lang%.System#exit(int)").
before_calls("%.update#<init>(java.io%.InputStream)","java.util%.Vector#<init>()").
before_calls("%.update#<init>(java.io%.InputStream)","java.util%.Vector#addElement(java.lang%.Object)").
before_calls("%.update#<init>(java.io%.InputStream)","java.util%.Vector#isEmpty()").
before_calls("%.update#<init>(java.io%.InputStream)","java.util%.Vector#lastElement()").
before_calls("%.update#<init>(java.io%.InputStream)","java.util%.Vector#removeElement(java.lang%.Object)").
before_calls("%.update#doAdd(DNS%.MyStringTokenizer)","%.update#parseRR(DNS%.MyStringTokenizer,short,int)").
before_calls("%.update#doAdd(DNS%.MyStringTokenizer)","DNS%.Message#addRecord(int,DNS%.Record)").
before_calls("%.update#doAdd(DNS%.MyStringTokenizer)","DNS%.MyStringTokenizer#nextToken()").
before_calls("%.update#doAdd(DNS%.MyStringTokenizer)","DNS%.MyStringTokenizer#putBackToken(java.lang%.String)").
before_calls("%.update#doAdd(DNS%.MyStringTokenizer)","java.io%.PrintStream#println(java.lang%.Object)").
before_calls("%.update#doAdd(DNS%.MyStringTokenizer)","java.io%.PrintStream#println(java.lang%.String)").
before_calls("%.update#doAdd(DNS%.MyStringTokenizer)","java.lang%.String#equals(java.lang%.Object)").
before_calls("%.update#doAdd(DNS%.MyStringTokenizer)","java.lang%.String#startsWith(java.lang%.String)").
before_calls("%.update#doAssert(DNS%.MyStringTokenizer)","DNS%.Header#getCount(int)").
before_calls("%.update#doAssert(DNS%.MyStringTokenizer)","DNS%.Header#getRcode()").
before_calls("%.update#doAssert(DNS%.MyStringTokenizer)","DNS%.Message#getHeader()").
before_calls("%.update#doAssert(DNS%.MyStringTokenizer)","DNS%.MyStringTokenizer#hasMoreTokens()").
before_calls("%.update#doAssert(DNS%.MyStringTokenizer)","DNS%.MyStringTokenizer#nextToken()").
before_calls("%.update#doAssert(DNS%.MyStringTokenizer)","DNS%.dns#rcodeString(int)").
before_calls("%.update#doAssert(DNS%.MyStringTokenizer)","DNS%.dns#rcodeValue(java.lang%.String)").
before_calls("%.update#doAssert(DNS%.MyStringTokenizer)","DNS%.dns#sectionValue(java.lang%.String)").
before_calls("%.update#doAssert(DNS%.MyStringTokenizer)","java.io%.PrintStream#println(java.lang%.String)").
before_calls("%.update#doAssert(DNS%.MyStringTokenizer)","java.lang%.Short#<init>(short)").
before_calls("%.update#doAssert(DNS%.MyStringTokenizer)","java.lang%.Short#parseShort(java.lang%.String)").
before_calls("%.update#doAssert(DNS%.MyStringTokenizer)","java.lang%.Short#toString()").
before_calls("%.update#doAssert(DNS%.MyStringTokenizer)","java.lang%.String#equalsIgnoreCase(java.lang%.String)").
before_calls("%.update#doDelete(DNS%.MyStringTokenizer)","%.update#parseName(DNS%.MyStringTokenizer,short)").
before_calls("%.update#doDelete(DNS%.MyStringTokenizer)","%.update#parseRR(DNS%.MyStringTokenizer,short,int)").
before_calls("%.update#doDelete(DNS%.MyStringTokenizer)","%.update#parseSet(DNS%.MyStringTokenizer,short)").
before_calls("%.update#doDelete(DNS%.MyStringTokenizer)","DNS%.Message#addRecord(int,DNS%.Record)").
before_calls("%.update#doDelete(DNS%.MyStringTokenizer)","DNS%.MyStringTokenizer#nextToken()").
before_calls("%.update#doDelete(DNS%.MyStringTokenizer)","java.io%.PrintStream#println(java.lang%.Object)").
before_calls("%.update#doDelete(DNS%.MyStringTokenizer)","java.io%.PrintStream#println(java.lang%.String)").
before_calls("%.update#doDelete(DNS%.MyStringTokenizer)","java.lang%.String#equals(java.lang%.Object)").
before_calls("%.update#doFile(DNS%.MyStringTokenizer,java.util%.Vector)","DNS%.MyStringTokenizer#nextToken()").
before_calls("%.update#doFile(DNS%.MyStringTokenizer,java.util%.Vector)","java.io%.BufferedReader#<init>(java.io%.Reader)").
before_calls("%.update#doFile(DNS%.MyStringTokenizer,java.util%.Vector)","java.io%.FileInputStream#<init>(java.lang%.String)").
before_calls("%.update#doFile(DNS%.MyStringTokenizer,java.util%.Vector)","java.io%.InputStreamReader#<init>(java.io%.InputStream)").
before_calls("%.update#doFile(DNS%.MyStringTokenizer,java.util%.Vector)","java.io%.PrintStream#println(java.lang%.String)").
before_calls("%.update#doFile(DNS%.MyStringTokenizer,java.util%.Vector)","java.util%.Vector#addElement(java.lang%.Object)").
before_calls("%.update#doGlue(DNS%.MyStringTokenizer)","%.update#parseRR(DNS%.MyStringTokenizer,short,int)").
before_calls("%.update#doGlue(DNS%.MyStringTokenizer)","DNS%.Message#addRecord(int,DNS%.Record)").
before_calls("%.update#doGlue(DNS%.MyStringTokenizer)","DNS%.MyStringTokenizer#nextToken()").
before_calls("%.update#doGlue(DNS%.MyStringTokenizer)","DNS%.MyStringTokenizer#putBackToken(java.lang%.String)").
before_calls("%.update#doGlue(DNS%.MyStringTokenizer)","java.io%.PrintStream#println(java.lang%.Object)").
before_calls("%.update#doGlue(DNS%.MyStringTokenizer)","java.io%.PrintStream#println(java.lang%.String)").
before_calls("%.update#doGlue(DNS%.MyStringTokenizer)","java.lang%.String#equals(java.lang%.Object)").
before_calls("%.update#doGlue(DNS%.MyStringTokenizer)","java.lang%.String#startsWith(java.lang%.String)").
before_calls("%.update#doProhibit(DNS%.MyStringTokenizer)","%.update#parseName(DNS%.MyStringTokenizer,short)").
before_calls("%.update#doProhibit(DNS%.MyStringTokenizer)","%.update#parseRR(DNS%.MyStringTokenizer,short,int)").
before_calls("%.update#doProhibit(DNS%.MyStringTokenizer)","%.update#parseSet(DNS%.MyStringTokenizer,short)").
before_calls("%.update#doProhibit(DNS%.MyStringTokenizer)","DNS%.Message#addRecord(int,DNS%.Record)").
before_calls("%.update#doProhibit(DNS%.MyStringTokenizer)","DNS%.MyStringTokenizer#nextToken()").
before_calls("%.update#doProhibit(DNS%.MyStringTokenizer)","java.io%.PrintStream#println(java.lang%.Object)").
before_calls("%.update#doProhibit(DNS%.MyStringTokenizer)","java.io%.PrintStream#println(java.lang%.String)").
before_calls("%.update#doProhibit(DNS%.MyStringTokenizer)","java.lang%.String#equals(java.lang%.Object)").
before_calls("%.update#doQuery(DNS%.MyStringTokenizer)","%.update#parseSet(DNS%.MyStringTokenizer,short)").
before_calls("%.update#doQuery(DNS%.MyStringTokenizer)","DNS%.Header#setFlag(int)").
before_calls("%.update#doQuery(DNS%.MyStringTokenizer)","DNS%.Header#setOpcode(byte)").
before_calls("%.update#doQuery(DNS%.MyStringTokenizer)","DNS%.Message#<init>()").
before_calls("%.update#doQuery(DNS%.MyStringTokenizer)","DNS%.Message#addRecord(int,DNS%.Record)").
before_calls("%.update#doQuery(DNS%.MyStringTokenizer)","DNS%.Message#getHeader()").
before_calls("%.update#doQuery(DNS%.MyStringTokenizer)","DNS%.Record#getType()").
before_calls("%.update#doQuery(DNS%.MyStringTokenizer)","DNS%.Resolver#<init>(java.lang%.String)").
before_calls("%.update#doQuery(DNS%.MyStringTokenizer)","DNS%.Resolver#send(DNS%.Message)").
before_calls("%.update#doQuery(DNS%.MyStringTokenizer)","DNS%.Resolver#sendAXFR(DNS%.Message)").
before_calls("%.update#doQuery(DNS%.MyStringTokenizer)","java.io%.PrintStream#println(java.lang%.Object)").
before_calls("%.update#doRequire(DNS%.MyStringTokenizer)","%.update#parseName(DNS%.MyStringTokenizer,short)").
before_calls("%.update#doRequire(DNS%.MyStringTokenizer)","%.update#parseRR(DNS%.MyStringTokenizer,short,int)").
before_calls("%.update#doRequire(DNS%.MyStringTokenizer)","%.update#parseSet(DNS%.MyStringTokenizer,short)").
before_calls("%.update#doRequire(DNS%.MyStringTokenizer)","DNS%.Message#addRecord(int,DNS%.Record)").
before_calls("%.update#doRequire(DNS%.MyStringTokenizer)","DNS%.MyStringTokenizer#nextToken()").
before_calls("%.update#doRequire(DNS%.MyStringTokenizer)","java.io%.PrintStream#println(java.lang%.Object)").
before_calls("%.update#doRequire(DNS%.MyStringTokenizer)","java.io%.PrintStream#println(java.lang%.String)").
before_calls("%.update#doRequire(DNS%.MyStringTokenizer)","java.lang%.String#equals(java.lang%.Object)").
before_calls("%.update#help(java.lang%.String)","%.update#helpAttributes()").
before_calls("%.update#help(java.lang%.String)","%.update#helpData()").
before_calls("%.update#help(java.lang%.String)","%.update#helpOperations()").
before_calls("%.update#help(java.lang%.String)","%.update#helpResolver()").
before_calls("%.update#help(java.lang%.String)","java.io%.PrintStream#println(java.lang%.String)").
before_calls("%.update#help(java.lang%.String)","java.lang%.String#equalsIgnoreCase(java.lang%.String)").
before_calls("%.update#helpAttributes()","java.io%.PrintStream#println(java.lang%.String)").
before_calls("%.update#helpData()","java.io%.PrintStream#println(java.lang%.String)").
before_calls("%.update#helpOperations()","java.io%.PrintStream#println(java.lang%.String)").
before_calls("%.update#helpResolver()","java.io%.PrintStream#println(java.lang%.String)").
before_calls("%.update#main(java.lang%.String[])","%.update#<init>(java.io%.InputStream)").
before_calls("%.update#main(java.lang%.String[])","java.io%.FileInputStream#<init>(java.lang%.String)").
before_calls("%.update#main(java.lang%.String[])","java.io%.PrintStream#println(java.lang%.String)").
before_calls("%.update#main(java.lang%.String[])","java.lang%.System#exit(int)").
before_calls("%.update#parseName(DNS%.MyStringTokenizer,short)","DNS%.MyStringTokenizer#nextToken()").
before_calls("%.update#parseName(DNS%.MyStringTokenizer,short)","DNS%.Name#<init>(java.lang%.String,DNS%.Name)").
before_calls("%.update#parseName(DNS%.MyStringTokenizer,short)","DNS%.Record#newRecord(DNS%.Name,short,short,int)").
before_calls("%.update#parseRR(DNS%.MyStringTokenizer,short,int)","DNS%.MyStringTokenizer#nextToken()").
before_calls("%.update#parseRR(DNS%.MyStringTokenizer,short,int)","DNS%.Name#<init>(java.lang%.String,DNS%.Name)").
before_calls("%.update#parseRR(DNS%.MyStringTokenizer,short,int)","DNS%.Record#fromString(DNS%.Name,short,short,int,DNS%.MyStringTokenizer,DNS%.Name)").
before_calls("%.update#parseRR(DNS%.MyStringTokenizer,short,int)","DNS%.dns#classValue(java.lang%.String)").
before_calls("%.update#parseRR(DNS%.MyStringTokenizer,short,int)","DNS%.dns#typeValue(java.lang%.String)").
before_calls("%.update#parseRR(DNS%.MyStringTokenizer,short,int)","java.io%.IOException#<init>(java.lang%.String)").
before_calls("%.update#parseRR(DNS%.MyStringTokenizer,short,int)","java.lang%.Integer#parseInt(java.lang%.String)").
before_calls("%.update#parseSet(DNS%.MyStringTokenizer,short)","DNS%.MyStringTokenizer#nextToken()").
before_calls("%.update#parseSet(DNS%.MyStringTokenizer,short)","DNS%.Name#<init>(java.lang%.String,DNS%.Name)").
before_calls("%.update#parseSet(DNS%.MyStringTokenizer,short)","DNS%.Record#newRecord(DNS%.Name,short,short,int)").
before_calls("%.update#parseSet(DNS%.MyStringTokenizer,short)","DNS%.dns#typeValue(java.lang%.String)").
before_calls("%.update#parseSet(DNS%.MyStringTokenizer,short)","java.io%.IOException#<init>(java.lang%.String)").
before_calls("%.update#sendUpdate()","DNS%.Header#getCount(int)").
before_calls("%.update#sendUpdate()","DNS%.Message#addRecord(int,DNS%.Record)").
before_calls("%.update#sendUpdate()","DNS%.Message#getHeader()").
before_calls("%.update#sendUpdate()","DNS%.Message#getSection(int)").
before_calls("%.update#sendUpdate()","DNS%.Name#<init>(DNS%.Name,int)").
before_calls("%.update#sendUpdate()","DNS%.Record#getDClass()").
before_calls("%.update#sendUpdate()","DNS%.Record#getName()").
before_calls("%.update#sendUpdate()","DNS%.Record#newRecord(DNS%.Name,short,short)").
before_calls("%.update#sendUpdate()","DNS%.Resolver#send(DNS%.Message)").
before_calls("%.update#sendUpdate()","java.io%.PrintStream#println(java.lang%.Object)").
before_calls("%.update#sendUpdate()","java.io%.PrintStream#println(java.lang%.String)").
before_calls("%.update#sendUpdate()","java.util%.Enumeration#nextElement()").
before_calls("DNS%.ARecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)","DNS%.MyStringTokenizer#nextToken()").
before_calls("DNS%.ARecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)","DNS%.Record#<init>(DNS%.Name,short,short,int)").
before_calls("DNS%.ARecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)","java.io%.PrintStream#println(java.lang%.String)").
before_calls("DNS%.ARecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)","java.lang%.String#equals(java.lang%.Object)").
before_calls("DNS%.ARecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)","java.lang%.System#exit(int)").
before_calls("DNS%.ARecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)","java.net%.InetAddress#equals(java.lang%.Object)").
before_calls("DNS%.ARecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)","java.net%.InetAddress#getByName(java.lang%.String)").
before_calls("DNS%.ARecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)","java.net%.InetAddress#getLocalHost()").
before_calls("DNS%.ARecord#<init>(DNS%.Name,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)","DNS%.Record#<init>(DNS%.Name,short,short,int)").
before_calls("DNS%.ARecord#<init>(DNS%.Name,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)","DNS.utils%.CountedDataInputStream#read(byte[])").
before_calls("DNS%.ARecord#<init>(DNS%.Name,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)","java.io%.PrintStream#println(java.lang%.String)").
before_calls("DNS%.ARecord#<init>(DNS%.Name,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)","java.lang%.String#<init>()").
before_calls("DNS%.ARecord#<init>(DNS%.Name,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)","java.net%.InetAddress#getByName(java.lang%.String)").
before_calls("DNS%.ARecord#<init>(DNS%.Name,short,int,java.net%.InetAddress)","DNS%.Record#<init>(DNS%.Name,short,short,int)").
before_calls("DNS%.ARecord#rrToWire(DNS%.Compression)","java.net%.InetAddress#getAddress()").
before_calls("DNS%.ARecord#toString()","DNS%.Record#toStringNoData()").
before_calls("DNS%.ARecord#toString()","java.lang%.StringBuffer#append(java.lang%.String)").
before_calls("DNS%.ARecord#toString()","java.lang%.StringBuffer#toString()").
before_calls("DNS%.ARecord#toString()","java.net%.InetAddress#getHostAddress()").
before_calls("DNS%.CERTRecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)","DNS%.MyStringTokenizer#nextToken()").
before_calls("DNS%.CERTRecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)","DNS%.Record#<init>(DNS%.Name,short,short,int)").
before_calls("DNS%.CERTRecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)","DNS.utils%.base64#fromString(java.lang%.String)").
before_calls("DNS%.CERTRecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)","java.lang%.Integer#parseInt(java.lang%.String)").
before_calls("DNS%.CERTRecord#<init>(DNS%.Name,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)","DNS%.Record#<init>(DNS%.Name,short,short,int)").
before_calls("DNS%.CERTRecord#<init>(DNS%.Name,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)","DNS.utils%.CountedDataInputStream#read(byte[])").
before_calls("DNS%.CERTRecord#<init>(DNS%.Name,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)","DNS.utils%.CountedDataInputStream#readByte()").
before_calls("DNS%.CERTRecord#<init>(DNS%.Name,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)","DNS.utils%.CountedDataInputStream#readShort()").
before_calls("DNS%.CERTRecord#<init>(DNS%.Name,short,int,int,int,int,byte[])","DNS%.Record#<init>(DNS%.Name,short,short,int)").
before_calls("DNS%.CERTRecord#rrToWire(DNS%.Compression)","DNS.utils%.CountedDataOutputStream#<init>(java.io%.OutputStream)").
before_calls("DNS%.CERTRecord#rrToWire(DNS%.Compression)","DNS.utils%.CountedDataOutputStream#write(byte[])").
before_calls("DNS%.CERTRecord#rrToWire(DNS%.Compression)","DNS.utils%.CountedDataOutputStream#writeByte(int)").
before_calls("DNS%.CERTRecord#rrToWire(DNS%.Compression)","DNS.utils%.CountedDataOutputStream#writeShort(int)").
before_calls("DNS%.CERTRecord#rrToWire(DNS%.Compression)","java.io%.ByteArrayOutputStream#<init>()").
before_calls("DNS%.CERTRecord#rrToWire(DNS%.Compression)","java.io%.ByteArrayOutputStream#toByteArray()").
before_calls("DNS%.CERTRecord#toString()","DNS%.IO#formatBase64String(java.lang%.String,int,java.lang%.String,boolean)").
before_calls("DNS%.CERTRecord#toString()","DNS%.Record#toStringNoData()").
before_calls("DNS%.CERTRecord#toString()","DNS.utils%.base64#toString(byte[])").
before_calls("DNS%.CERTRecord#toString()","java.lang%.StringBuffer#append(int)").
before_calls("DNS%.CERTRecord#toString()","java.lang%.StringBuffer#append(java.lang%.String)").
before_calls("DNS%.CERTRecord#toString()","java.lang%.StringBuffer#toString()").
before_calls("DNS%.CNAMERecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)","DNS%.NS_CNAME_PTRRecord#<init>(DNS%.Name,short,short,int,DNS%.MyStringTokenizer,DNS%.Name)").
before_calls("DNS%.CNAMERecord#<init>(DNS%.Name,short,int,DNS%.Name)","DNS%.NS_CNAME_PTRRecord#<init>(DNS%.Name,short,short,int,DNS%.Name)").
before_calls("DNS%.CNAMERecord#<init>(DNS%.Name,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)","DNS%.NS_CNAME_PTRRecord#<init>(DNS%.Name,short,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)").
before_calls("DNS%.Compression#<init>()","java.util%.Hashtable#<init>()").
before_calls("DNS%.Compression#add(int,DNS%.Name)","java.lang%.Integer#<init>(int)").
before_calls("DNS%.Compression#add(int,DNS%.Name)","java.util%.Hashtable#put(java.lang%.Object,java.lang%.Object)").
before_calls("DNS%.Compression#get(DNS%.Name)","java.lang%.Integer#intValue()").
before_calls("DNS%.Compression#get(DNS%.Name)","java.util%.Hashtable#get(java.lang%.Object)").
before_calls("DNS%.Compression#get(int)","java.lang%.Integer#<init>(int)").
before_calls("DNS%.Compression#get(int)","java.util%.Hashtable#get(java.lang%.Object)").
before_calls("DNS%.EDNS#newOPT(int)","DNS%.OPTRecord#<init>(DNS%.Name,short,int)").
before_calls("DNS%.FindResolver#find()","DNS%.FindResolver#findProperty()").
before_calls("DNS%.FindResolver#find()","DNS%.FindResolver#findUnix()").
before_calls("DNS%.FindResolver#findProperty()","java.lang%.System#getProperty(java.lang%.String)").
before_calls("DNS%.FindResolver#findUnix()","java.io%.BufferedReader#<init>(java.io%.Reader)").
before_calls("DNS%.FindResolver#findUnix()","java.io%.BufferedReader#readLine()").
before_calls("DNS%.FindResolver#findUnix()","java.io%.FileInputStream#<init>(java.lang%.String)").
before_calls("DNS%.FindResolver#findUnix()","java.io%.InputStreamReader#<init>(java.io%.InputStream)").
before_calls("DNS%.FindResolver#findUnix()","java.lang%.String#startsWith(java.lang%.String)").
before_calls("DNS%.FindResolver#findUnix()","java.util%.StringTokenizer#<init>(java.lang%.String)").
before_calls("DNS%.FindResolver#findUnix()","java.util%.StringTokenizer#nextToken()").
before_calls("DNS%.HINFORecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)","DNS%.MyStringTokenizer#nextToken()").
before_calls("DNS%.HINFORecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)","DNS%.Record#<init>(DNS%.Name,short,short,int)").
before_calls("DNS%.HINFORecord#<init>(DNS%.Name,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)","DNS%.Record#<init>(DNS%.Name,short,short,int)").
before_calls("DNS%.HINFORecord#<init>(DNS%.Name,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)","DNS.utils%.CountedDataInputStream#readString()").
before_calls("DNS%.HINFORecord#<init>(DNS%.Name,short,int,java.lang%.String,java.lang%.String)","DNS%.Record#<init>(DNS%.Name,short,short,int)").
before_calls("DNS%.HINFORecord#rrToWire(DNS%.Compression)","DNS.utils%.CountedDataOutputStream#<init>(java.io%.OutputStream)").
before_calls("DNS%.HINFORecord#rrToWire(DNS%.Compression)","DNS.utils%.CountedDataOutputStream#writeString(java.lang%.String)").
before_calls("DNS%.HINFORecord#rrToWire(DNS%.Compression)","java.io%.ByteArrayOutputStream#<init>()").
before_calls("DNS%.HINFORecord#rrToWire(DNS%.Compression)","java.io%.ByteArrayOutputStream#toByteArray()").
before_calls("DNS%.HINFORecord#toString()","DNS%.Record#toStringNoData()").
before_calls("DNS%.HINFORecord#toString()","java.lang%.StringBuffer#append(java.lang%.String)").
before_calls("DNS%.HINFORecord#toString()","java.lang%.StringBuffer#toString()").
before_calls("DNS%.Header#<init>(DNS.utils%.CountedDataInputStream)","DNS%.Header#<init>(int)").
before_calls("DNS%.Header#<init>(DNS.utils%.CountedDataInputStream)","DNS%.Header#readFlags(DNS.utils%.CountedDataInputStream)").
before_calls("DNS%.Header#<init>(DNS.utils%.CountedDataInputStream)","DNS.utils%.CountedDataInputStream#readShort()").
before_calls("DNS%.Header#<init>(DNS.utils%.CountedDataInputStream)","DNS.utils%.CountedDataInputStream#readUnsignedShort()").
before_calls("DNS%.Header#printFlags()","DNS%.Header#getFlag(int)").
before_calls("DNS%.Header#printFlags()","DNS%.dns#flagString(int)").
before_calls("DNS%.Header#printFlags()","java.lang%.StringBuffer#<init>()").
before_calls("DNS%.Header#printFlags()","java.lang%.StringBuffer#append(java.lang%.String)").
before_calls("DNS%.Header#printFlags()","java.lang%.StringBuffer#toString()").
before_calls("DNS%.Header#randomID()","java.util%.Random#<init>()").
before_calls("DNS%.Header#randomID()","java.util%.Random#nextInt()").
before_calls("DNS%.Header#readFlags(DNS.utils%.CountedDataInputStream)","DNS.utils%.CountedDataInputStream#readUnsignedByte()").
before_calls("DNS%.Header#toString()","DNS%.Header#getCount(int)").
before_calls("DNS%.Header#toString()","DNS%.Header#getID()").
before_calls("DNS%.Header#toString()","DNS%.Header#getOpcode()").
before_calls("DNS%.Header#toString()","DNS%.Header#getRcode()").
before_calls("DNS%.Header#toString()","DNS%.Header#printFlags()").
before_calls("DNS%.Header#toString()","DNS%.dns#opcodeString(int)").
before_calls("DNS%.Header#toString()","DNS%.dns#rcodeString(int)").
before_calls("DNS%.Header#toString()","DNS%.dns#sectionString(int)").
before_calls("DNS%.Header#toString()","java.lang%.StringBuffer#<init>()").
before_calls("DNS%.Header#toString()","java.lang%.StringBuffer#append(java.lang%.String)").
before_calls("DNS%.Header#toString()","java.lang%.StringBuffer#toString()").
before_calls("DNS%.Header#toWire()","DNS%.Header#toWire(DNS.utils%.CountedDataOutputStream)").
before_calls("DNS%.Header#toWire()","DNS.utils%.CountedDataOutputStream#<init>(java.io%.OutputStream)").
before_calls("DNS%.Header#toWire()","java.io%.ByteArrayOutputStream#<init>()").
before_calls("DNS%.Header#toWire()","java.io%.ByteArrayOutputStream#toByteArray()").
before_calls("DNS%.Header#toWire(DNS.utils%.CountedDataOutputStream)","DNS%.Header#writeFlags(DNS.utils%.CountedDataOutputStream)").
before_calls("DNS%.Header#toWire(DNS.utils%.CountedDataOutputStream)","DNS.utils%.CountedDataOutputStream#writeShort(int)").
before_calls("DNS%.Header#writeFlags(DNS.utils%.CountedDataOutputStream)","DNS.utils%.CountedDataOutputStream#writeByte(int)").
before_calls("DNS%.IO#formatBase64String(java.lang%.String,int,java.lang%.String,boolean)","java.lang%.String#length()").
before_calls("DNS%.IO#formatBase64String(java.lang%.String,int,java.lang%.String,boolean)","java.lang%.String#substring(int)").
before_calls("DNS%.IO#formatBase64String(java.lang%.String,int,java.lang%.String,boolean)","java.lang%.String#substring(int,int)").
before_calls("DNS%.IO#formatBase64String(java.lang%.String,int,java.lang%.String,boolean)","java.lang%.StringBuffer#<init>()").
before_calls("DNS%.IO#formatBase64String(java.lang%.String,int,java.lang%.String,boolean)","java.lang%.StringBuffer#append(java.lang%.String)").
before_calls("DNS%.IO#formatBase64String(java.lang%.String,int,java.lang%.String,boolean)","java.lang%.StringBuffer#toString()").
before_calls("DNS%.IO#readExtendedLine(java.io%.BufferedReader)","java.io%.BufferedReader#readLine()").
before_calls("DNS%.IO#readExtendedLine(java.io%.BufferedReader)","java.lang%.String#endsWith(java.lang%.String)").
before_calls("DNS%.IO#readExtendedLine(java.io%.BufferedReader)","java.lang%.String#length()").
before_calls("DNS%.IO#readExtendedLine(java.io%.BufferedReader)","java.lang%.String#substring(int,int)").
before_calls("DNS%.IO#readExtendedLine(java.io%.BufferedReader)","java.lang%.StringBuffer#<init>(java.lang%.String)").
before_calls("DNS%.IO#readExtendedLine(java.io%.BufferedReader)","java.lang%.StringBuffer#append(java.lang%.String)").
before_calls("DNS%.IO#readExtendedLine(java.io%.BufferedReader)","java.lang%.StringBuffer#toString()").
before_calls("DNS%.KEYRecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)","DNS%.MyStringTokenizer#nextToken()").
before_calls("DNS%.KEYRecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)","DNS%.Record#<init>(DNS%.Name,short,short,int)").
before_calls("DNS%.KEYRecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)","DNS.utils%.base64#fromString(java.lang%.String)").
before_calls("DNS%.KEYRecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)","java.lang%.Integer#decode(java.lang%.String)").
before_calls("DNS%.KEYRecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)","java.lang%.Integer#intValue()").
before_calls("DNS%.KEYRecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)","java.lang%.Integer#parseInt(java.lang%.String)").
before_calls("DNS%.KEYRecord#<init>(DNS%.Name,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)","DNS%.Record#<init>(DNS%.Name,short,short,int)").
before_calls("DNS%.KEYRecord#<init>(DNS%.Name,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)","DNS.utils%.CountedDataInputStream#read(byte[])").
before_calls("DNS%.KEYRecord#<init>(DNS%.Name,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)","DNS.utils%.CountedDataInputStream#readByte()").
before_calls("DNS%.KEYRecord#<init>(DNS%.Name,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)","DNS.utils%.CountedDataInputStream#readShort()").
before_calls("DNS%.KEYRecord#<init>(DNS%.Name,short,int,int,int,int,byte[])","DNS%.Record#<init>(DNS%.Name,short,short,int)").
before_calls("DNS%.KEYRecord#rrToWire(DNS%.Compression)","DNS.utils%.CountedDataOutputStream#<init>(java.io%.OutputStream)").
before_calls("DNS%.KEYRecord#rrToWire(DNS%.Compression)","DNS.utils%.CountedDataOutputStream#write(byte[])").
before_calls("DNS%.KEYRecord#rrToWire(DNS%.Compression)","DNS.utils%.CountedDataOutputStream#writeByte(int)").
before_calls("DNS%.KEYRecord#rrToWire(DNS%.Compression)","DNS.utils%.CountedDataOutputStream#writeShort(int)").
before_calls("DNS%.KEYRecord#rrToWire(DNS%.Compression)","java.io%.ByteArrayOutputStream#<init>()").
before_calls("DNS%.KEYRecord#rrToWire(DNS%.Compression)","java.io%.ByteArrayOutputStream#toByteArray()").
before_calls("DNS%.KEYRecord#toString()","DNS%.IO#formatBase64String(java.lang%.String,int,java.lang%.String,boolean)").
before_calls("DNS%.KEYRecord#toString()","DNS%.Record#toStringNoData()").
before_calls("DNS%.KEYRecord#toString()","DNS.utils%.base64#toString(byte[])").
before_calls("DNS%.KEYRecord#toString()","java.lang%.Integer#toHexString(int)").
before_calls("DNS%.KEYRecord#toString()","java.lang%.StringBuffer#append(int)").
before_calls("DNS%.KEYRecord#toString()","java.lang%.StringBuffer#append(java.lang%.String)").
before_calls("DNS%.KEYRecord#toString()","java.lang%.StringBuffer#toString()").
before_calls("DNS%.MXRecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)","DNS%.MyStringTokenizer#nextToken()").
before_calls("DNS%.MXRecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)","DNS%.Name#<init>(java.lang%.String,DNS%.Name)").
before_calls("DNS%.MXRecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)","DNS%.Record#<init>(DNS%.Name,short,short,int)").
before_calls("DNS%.MXRecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)","java.lang%.Short#parseShort(java.lang%.String)").
before_calls("DNS%.MXRecord#<init>(DNS%.Name,short,int,int,DNS%.Name)","DNS%.Record#<init>(DNS%.Name,short,short,int)").
before_calls("DNS%.MXRecord#<init>(DNS%.Name,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)","DNS%.Name#<init>(DNS.utils%.CountedDataInputStream,DNS%.Compression)").
before_calls("DNS%.MXRecord#<init>(DNS%.Name,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)","DNS%.Record#<init>(DNS%.Name,short,short,int)").
before_calls("DNS%.MXRecord#<init>(DNS%.Name,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)","DNS.utils%.CountedDataInputStream#readUnsignedShort()").
before_calls("DNS%.MXRecord#rrToWire(DNS%.Compression)","DNS%.Name#toWire(DNS.utils%.CountedDataOutputStream,DNS%.Compression)").
before_calls("DNS%.MXRecord#rrToWire(DNS%.Compression)","DNS.utils%.CountedDataOutputStream#<init>(java.io%.OutputStream)").
before_calls("DNS%.MXRecord#rrToWire(DNS%.Compression)","DNS.utils%.CountedDataOutputStream#writeShort(int)").
before_calls("DNS%.MXRecord#rrToWire(DNS%.Compression)","java.io%.ByteArrayOutputStream#<init>()").
before_calls("DNS%.MXRecord#rrToWire(DNS%.Compression)","java.io%.ByteArrayOutputStream#toByteArray()").
before_calls("DNS%.MXRecord#toString()","DNS%.Record#toStringNoData()").
before_calls("DNS%.MXRecord#toString()","java.lang%.StringBuffer#append(int)").
before_calls("DNS%.MXRecord#toString()","java.lang%.StringBuffer#append(java.lang%.Object)").
before_calls("DNS%.MXRecord#toString()","java.lang%.StringBuffer#append(java.lang%.String)").
before_calls("DNS%.MXRecord#toString()","java.lang%.StringBuffer#toString()").
before_calls("DNS%.Message#<init>()","DNS%.Header#randomID()").
before_calls("DNS%.Message#<init>()","DNS%.Message#<init>(int)").
before_calls("DNS%.Message#<init>(DNS.utils%.CountedDataInputStream)","DNS%.Compression#<init>()").
before_calls("DNS%.Message#<init>(DNS.utils%.CountedDataInputStream)","DNS%.Header#<init>(DNS.utils%.CountedDataInputStream)").
before_calls("DNS%.Message#<init>(DNS.utils%.CountedDataInputStream)","DNS%.Header#getCount(int)").
before_calls("DNS%.Message#<init>(DNS.utils%.CountedDataInputStream)","DNS%.Message#<init>()").
before_calls("DNS%.Message#<init>(DNS.utils%.CountedDataInputStream)","DNS%.Record#fromWire(DNS.utils%.CountedDataInputStream,int,DNS%.Compression)").
before_calls("DNS%.Message#<init>(DNS.utils%.CountedDataInputStream)","DNS.utils%.CountedDataInputStream#getPos()").
before_calls("DNS%.Message#<init>(DNS.utils%.CountedDataInputStream)","java.util%.Vector#addElement(java.lang%.Object)").
before_calls("DNS%.Message#<init>(byte[])","DNS%.Message#<init>(DNS.utils%.CountedDataInputStream)").
before_calls("DNS%.Message#<init>(byte[])","DNS.utils%.CountedDataInputStream#<init>(java.io%.InputStream)").
before_calls("DNS%.Message#<init>(byte[])","java.io%.ByteArrayInputStream#<init>(byte[])").
before_calls("DNS%.Message#<init>(int)","DNS%.Header#<init>(int)").
before_calls("DNS%.Message#<init>(int)","java.util%.Vector#<init>()").
before_calls("DNS%.Message#addRecord(int,DNS%.Record)","DNS%.Header#incCount(int)").
before_calls("DNS%.Message#addRecord(int,DNS%.Record)","java.util%.Vector#addElement(java.lang%.Object)").
before_calls("DNS%.Message#getSection(int)","java.util%.Vector#elements()").
before_calls("DNS%.Message#getTSIG()","DNS%.Header#getCount(int)").
before_calls("DNS%.Message#getTSIG()","java.util%.Vector#elementAt(int)").
before_calls("DNS%.Message#removeRecord(int,DNS%.Record)","DNS%.Header#decCount(int)").
before_calls("DNS%.Message#removeRecord(int,DNS%.Record)","java.util%.Vector#removeElement(java.lang%.Object)").
before_calls("DNS%.Message#sectionToString(int)","DNS%.Message#getSection(int)").
before_calls("DNS%.Message#sectionToString(int)","DNS%.dns#classString(int)").
before_calls("DNS%.Message#sectionToString(int)","DNS%.dns#longSectionString(int)").
before_calls("DNS%.Message#sectionToString(int)","DNS%.dns#typeString(int)").
before_calls("DNS%.Message#sectionToString(int)","java.lang%.StringBuffer#<init>()").
before_calls("DNS%.Message#sectionToString(int)","java.lang%.StringBuffer#append(java.lang%.Object)").
before_calls("DNS%.Message#sectionToString(int)","java.lang%.StringBuffer#append(java.lang%.String)").
before_calls("DNS%.Message#sectionToString(int)","java.lang%.StringBuffer#toString()").
before_calls("DNS%.Message#sectionToString(int)","java.util%.Enumeration#hasMoreElements()").
before_calls("DNS%.Message#sectionToString(int)","java.util%.Enumeration#nextElement()").
before_calls("DNS%.Message#toString()","DNS%.Message#getHeader()").
before_calls("DNS%.Message#toString()","DNS%.Message#numBytes()").
before_calls("DNS%.Message#toString()","DNS%.Message#sectionToString(int)").
before_calls("DNS%.Message#toString()","java.lang%.StringBuffer#<init>()").
before_calls("DNS%.Message#toString()","java.lang%.StringBuffer#append(java.lang%.String)").
before_calls("DNS%.Message#toString()","java.lang%.StringBuffer#toString()").
before_calls("DNS%.Message#toWire()","DNS%.Message#toWire(DNS.utils%.CountedDataOutputStream)").
before_calls("DNS%.Message#toWire()","DNS.utils%.CountedDataOutputStream#<init>(java.io%.OutputStream)").
before_calls("DNS%.Message#toWire()","java.io%.ByteArrayOutputStream#<init>()").
before_calls("DNS%.Message#toWire()","java.io%.ByteArrayOutputStream#toByteArray()").
before_calls("DNS%.Message#toWire(DNS.utils%.CountedDataOutputStream)","DNS%.Compression#<init>()").
before_calls("DNS%.Message#toWire(DNS.utils%.CountedDataOutputStream)","DNS%.Header#toWire(DNS.utils%.CountedDataOutputStream)").
before_calls("DNS%.Message#toWire(DNS.utils%.CountedDataOutputStream)","DNS%.Record#toWire(DNS.utils%.CountedDataOutputStream,int,DNS%.Compression)").
before_calls("DNS%.Message#toWire(DNS.utils%.CountedDataOutputStream)","java.util%.Vector#elementAt(int)").
before_calls("DNS%.Message#toWire(DNS.utils%.CountedDataOutputStream)","java.util%.Vector#size()").
before_calls("DNS%.Message#toWireCanonical(DNS.utils%.CountedDataOutputStream)","DNS%.Header#toWire(DNS.utils%.CountedDataOutputStream)").
before_calls("DNS%.Message#toWireCanonical(DNS.utils%.CountedDataOutputStream)","DNS%.Record#toWireCanonical(DNS.utils%.CountedDataOutputStream,int)").
before_calls("DNS%.Message#toWireCanonical(DNS.utils%.CountedDataOutputStream)","java.util%.Vector#elementAt(int)").
before_calls("DNS%.Message#toWireCanonical(DNS.utils%.CountedDataOutputStream)","java.util%.Vector#size()").
before_calls("DNS%.MyStringTokenizer#<init>(java.lang%.String)","DNS%.MyStringTokenizer#<init>(java.lang%.String,java.lang%.String,boolean)").
before_calls("DNS%.MyStringTokenizer#<init>(java.lang%.String,java.lang%.String)","DNS%.MyStringTokenizer#<init>(java.lang%.String,java.lang%.String,boolean)").
before_calls("DNS%.MyStringTokenizer#<init>(java.lang%.String,java.lang%.String,boolean)","java.lang%.String#getChars(int,int,char[],int)").
before_calls("DNS%.MyStringTokenizer#<init>(java.lang%.String,java.lang%.String,boolean)","java.lang%.String#length()").
before_calls("DNS%.MyStringTokenizer#hasMoreElements()","DNS%.MyStringTokenizer#hasMoreTokens()").
before_calls("DNS%.MyStringTokenizer#hasMoreTokens()","DNS%.MyStringTokenizer#isDelim(int)").
before_calls("DNS%.MyStringTokenizer#isDelim(int)","java.lang%.String#indexOf(int)").
before_calls("DNS%.MyStringTokenizer#main(java.lang%.String[])","DNS%.MyStringTokenizer#<init>(java.lang%.String)").
before_calls("DNS%.MyStringTokenizer#main(java.lang%.String[])","DNS%.MyStringTokenizer#hasMoreTokens()").
before_calls("DNS%.MyStringTokenizer#main(java.lang%.String[])","DNS%.MyStringTokenizer#nextToken()").
before_calls("DNS%.MyStringTokenizer#main(java.lang%.String[])","java.io%.BufferedReader#<init>(java.io%.Reader)").
before_calls("DNS%.MyStringTokenizer#main(java.lang%.String[])","java.io%.BufferedReader#readLine()").
before_calls("DNS%.MyStringTokenizer#main(java.lang%.String[])","java.io%.InputStreamReader#<init>(java.io%.InputStream)").
before_calls("DNS%.MyStringTokenizer#main(java.lang%.String[])","java.io%.PrintStream#println(java.lang%.String)").
before_calls("DNS%.MyStringTokenizer#nextElement()","DNS%.MyStringTokenizer#nextToken()").
before_calls("DNS%.MyStringTokenizer#nextToken()","DNS%.MyStringTokenizer#isDelim(int)").
before_calls("DNS%.MyStringTokenizer#nextToken()","java.lang%.Character#digit(char,int)").
before_calls("DNS%.MyStringTokenizer#nextToken()","java.lang%.Integer#parseInt(java.lang%.String)").
before_calls("DNS%.MyStringTokenizer#nextToken()","java.lang%.String#<init>(char[],int,int)").
before_calls("DNS%.MyStringTokenizer#nextToken()","java.lang%.StringBuffer#<init>()").
before_calls("DNS%.MyStringTokenizer#nextToken()","java.lang%.StringBuffer#append(char)").
before_calls("DNS%.MyStringTokenizer#nextToken()","java.lang%.StringBuffer#toString()").
before_calls("DNS%.NSRecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)","DNS%.NS_CNAME_PTRRecord#<init>(DNS%.Name,short,short,int,DNS%.MyStringTokenizer,DNS%.Name)").
before_calls("DNS%.NSRecord#<init>(DNS%.Name,short,int,DNS%.Name)","DNS%.NS_CNAME_PTRRecord#<init>(DNS%.Name,short,short,int,DNS%.Name)").
before_calls("DNS%.NSRecord#<init>(DNS%.Name,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)","DNS%.NS_CNAME_PTRRecord#<init>(DNS%.Name,short,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)").
before_calls("DNS%.NS_CNAME_PTRRecord#<init>(DNS%.Name,short,short,int,DNS%.MyStringTokenizer,DNS%.Name)","DNS%.MyStringTokenizer#nextToken()").
before_calls("DNS%.NS_CNAME_PTRRecord#<init>(DNS%.Name,short,short,int,DNS%.MyStringTokenizer,DNS%.Name)","DNS%.Name#<init>(java.lang%.String,DNS%.Name)").
before_calls("DNS%.NS_CNAME_PTRRecord#<init>(DNS%.Name,short,short,int,DNS%.MyStringTokenizer,DNS%.Name)","DNS%.Record#<init>(DNS%.Name,short,short,int)").
before_calls("DNS%.NS_CNAME_PTRRecord#<init>(DNS%.Name,short,short,int,DNS%.Name)","DNS%.Record#<init>(DNS%.Name,short,short,int)").
before_calls("DNS%.NS_CNAME_PTRRecord#<init>(DNS%.Name,short,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)","DNS%.Name#<init>(DNS.utils%.CountedDataInputStream,DNS%.Compression)").
before_calls("DNS%.NS_CNAME_PTRRecord#<init>(DNS%.Name,short,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)","DNS%.Record#<init>(DNS%.Name,short,short,int)").
before_calls("DNS%.NS_CNAME_PTRRecord#rrToWire(DNS%.Compression)","DNS%.Name#toWire(DNS.utils%.CountedDataOutputStream,DNS%.Compression)").
before_calls("DNS%.NS_CNAME_PTRRecord#rrToWire(DNS%.Compression)","DNS.utils%.CountedDataOutputStream#<init>(java.io%.OutputStream)").
before_calls("DNS%.NS_CNAME_PTRRecord#rrToWire(DNS%.Compression)","java.io%.ByteArrayOutputStream#<init>()").
before_calls("DNS%.NS_CNAME_PTRRecord#rrToWire(DNS%.Compression)","java.io%.ByteArrayOutputStream#toByteArray()").
before_calls("DNS%.NS_CNAME_PTRRecord#toString()","DNS%.Record#toStringNoData()").
before_calls("DNS%.NS_CNAME_PTRRecord#toString()","java.lang%.StringBuffer#append(java.lang%.Object)").
before_calls("DNS%.NS_CNAME_PTRRecord#toString()","java.lang%.StringBuffer#toString()").
before_calls("DNS%.NXTRecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)","DNS%.MyStringTokenizer#hasMoreTokens()").
before_calls("DNS%.NXTRecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)","DNS%.MyStringTokenizer#nextToken()").
before_calls("DNS%.NXTRecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)","DNS%.Name#<init>(java.lang%.String,DNS%.Name)").
before_calls("DNS%.NXTRecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)","DNS%.Record#<init>(DNS%.Name,short,short,int)").
before_calls("DNS%.NXTRecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)","DNS%.dns#typeValue(java.lang%.String)").
before_calls("DNS%.NXTRecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)","java.util%.BitSet#<init>()").
before_calls("DNS%.NXTRecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)","java.util%.BitSet#set(int)").
before_calls("DNS%.NXTRecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)","java.util%.Vector#<init>()").
before_calls("DNS%.NXTRecord#<init>(DNS%.Name,short,int,DNS%.Name,java.util%.BitSet)","DNS%.Record#<init>(DNS%.Name,short,short,int)").
before_calls("DNS%.NXTRecord#<init>(DNS%.Name,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)","DNS%.Name#<init>(DNS.utils%.CountedDataInputStream,DNS%.Compression)").
before_calls("DNS%.NXTRecord#<init>(DNS%.Name,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)","DNS%.Record#<init>(DNS%.Name,short,short,int)").
before_calls("DNS%.NXTRecord#<init>(DNS%.Name,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)","DNS.utils%.CountedDataInputStream#getPos()").
before_calls("DNS%.NXTRecord#<init>(DNS%.Name,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)","DNS.utils%.CountedDataInputStream#readUnsignedByte()").
before_calls("DNS%.NXTRecord#<init>(DNS%.Name,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)","java.util%.BitSet#<init>()").
before_calls("DNS%.NXTRecord#<init>(DNS%.Name,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)","java.util%.BitSet#set(int)").
before_calls("DNS%.NXTRecord#rrToWire(DNS%.Compression)","DNS%.Name#toWire(DNS.utils%.CountedDataOutputStream,DNS%.Compression)").
before_calls("DNS%.NXTRecord#rrToWire(DNS%.Compression)","DNS.utils%.CountedDataOutputStream#<init>(java.io%.OutputStream)").
before_calls("DNS%.NXTRecord#rrToWire(DNS%.Compression)","DNS.utils%.CountedDataOutputStream#writeByte(int)").
before_calls("DNS%.NXTRecord#rrToWire(DNS%.Compression)","java.io%.ByteArrayOutputStream#<init>()").
before_calls("DNS%.NXTRecord#rrToWire(DNS%.Compression)","java.io%.ByteArrayOutputStream#toByteArray()").
before_calls("DNS%.NXTRecord#rrToWire(DNS%.Compression)","java.util%.BitSet#get(int)").
before_calls("DNS%.NXTRecord#rrToWire(DNS%.Compression)","java.util%.BitSet#size()").
before_calls("DNS%.NXTRecord#toString()","DNS%.Record#toStringNoData()").
before_calls("DNS%.NXTRecord#toString()","DNS%.dns#typeString(int)").
before_calls("DNS%.NXTRecord#toString()","java.lang%.StringBuffer#append(java.lang%.Object)").
before_calls("DNS%.NXTRecord#toString()","java.lang%.StringBuffer#append(java.lang%.String)").
before_calls("DNS%.NXTRecord#toString()","java.lang%.StringBuffer#toString()").
before_calls("DNS%.NXTRecord#toString()","java.util%.BitSet#get(int)").
before_calls("DNS%.NXTRecord#toString()","java.util%.BitSet#size()").
before_calls("DNS%.Name#<init>(DNS%.Name,int)","java.lang%.System#arraycopy(java.lang%.Object,int,java.lang%.Object,int,int)").
before_calls("DNS%.Name#<init>(DNS.utils%.CountedDataInputStream,DNS%.Compression)","DNS%.Compression#add(int,DNS%.Name)").
before_calls("DNS%.Name#<init>(DNS.utils%.CountedDataInputStream,DNS%.Compression)","DNS%.Compression#get(int)").
before_calls("DNS%.Name#<init>(DNS.utils%.CountedDataInputStream,DNS%.Compression)","DNS%.Name#<init>(DNS%.Name,int)").
before_calls("DNS%.Name#<init>(DNS.utils%.CountedDataInputStream,DNS%.Compression)","DNS.utils%.CountedDataInputStream#getPos()").
before_calls("DNS%.Name#<init>(DNS.utils%.CountedDataInputStream,DNS%.Compression)","DNS.utils%.CountedDataInputStream#read(byte[])").
before_calls("DNS%.Name#<init>(DNS.utils%.CountedDataInputStream,DNS%.Compression)","DNS.utils%.CountedDataInputStream#readUnsignedByte()").
before_calls("DNS%.Name#<init>(DNS.utils%.CountedDataInputStream,DNS%.Compression)","java.lang%.String#<init>(byte[])").
before_calls("DNS%.Name#<init>(DNS.utils%.CountedDataInputStream,DNS%.Compression)","java.lang%.String#<init>(java.lang%.String)").
before_calls("DNS%.Name#<init>(DNS.utils%.CountedDataInputStream,DNS%.Compression)","java.lang%.String#length()").
before_calls("DNS%.Name#<init>(DNS.utils%.CountedDataInputStream,DNS%.Compression)","java.lang%.System#arraycopy(java.lang%.Object,int,java.lang%.Object,int,int)").
before_calls("DNS%.Name#<init>(java.lang%.String)","DNS%.Name#<init>(java.lang%.String,DNS%.Name)").
before_calls("DNS%.Name#<init>(java.lang%.String,DNS%.Name)","DNS%.MyStringTokenizer#<init>(java.lang%.String,java.lang%.String)").
before_calls("DNS%.Name#<init>(java.lang%.String,DNS%.Name)","DNS%.MyStringTokenizer#hasMoreDelimiters()").
before_calls("DNS%.Name#<init>(java.lang%.String,DNS%.Name)","DNS%.MyStringTokenizer#hasMoreTokens()").
before_calls("DNS%.Name#<init>(java.lang%.String,DNS%.Name)","DNS%.MyStringTokenizer#nextToken()").
before_calls("DNS%.Name#<init>(java.lang%.String,DNS%.Name)","DNS%.Name#append(DNS%.Name)").
before_calls("DNS%.Name#<init>(java.lang%.String,DNS%.Name)","java.io%.PrintStream#println(java.lang%.String)").
before_calls("DNS%.Name#<init>(java.lang%.String,DNS%.Name)","java.lang%.String#equals(java.lang%.Object)").
before_calls("DNS%.Name#<init>(java.lang%.String,DNS%.Name)","java.lang%.StringBuffer#<init>()").
before_calls("DNS%.Name#<init>(java.lang%.String,DNS%.Name)","java.lang%.StringBuffer#append(java.lang%.Object)").
before_calls("DNS%.Name#<init>(java.lang%.String,DNS%.Name)","java.lang%.StringBuffer#append(java.lang%.String)").
before_calls("DNS%.Name#<init>(java.lang%.String,DNS%.Name)","java.lang%.StringBuffer#toString()").
before_calls("DNS%.Name#append(DNS%.Name)","java.lang%.System#arraycopy(java.lang%.Object,int,java.lang%.Object,int,int)").
before_calls("DNS%.Name#equals(java.lang%.Object)","java.lang%.String#equalsIgnoreCase(java.lang%.String)").
before_calls("DNS%.Name#hashCode()","java.lang%.String#charAt(int)").
before_calls("DNS%.Name#hashCode()","java.lang%.String#length()").
before_calls("DNS%.Name#length()","java.lang%.String#length()").
before_calls("DNS%.Name#toString()","java.lang%.StringBuffer#<init>()").
before_calls("DNS%.Name#toString()","java.lang%.StringBuffer#append(java.lang%.String)").
before_calls("DNS%.Name#toString()","java.lang%.StringBuffer#toString()").
before_calls("DNS%.Name#toWire(DNS.utils%.CountedDataOutputStream,DNS%.Compression)","DNS%.Compression#add(int,DNS%.Name)").
before_calls("DNS%.Name#toWire(DNS.utils%.CountedDataOutputStream,DNS%.Compression)","DNS%.Compression#get(DNS%.Name)").
before_calls("DNS%.Name#toWire(DNS.utils%.CountedDataOutputStream,DNS%.Compression)","DNS%.Name#<init>(DNS%.Name,int)").
before_calls("DNS%.Name#toWire(DNS.utils%.CountedDataOutputStream,DNS%.Compression)","DNS.utils%.CountedDataOutputStream#getPos()").
before_calls("DNS%.Name#toWire(DNS.utils%.CountedDataOutputStream,DNS%.Compression)","DNS.utils%.CountedDataOutputStream#writeByte(int)").
before_calls("DNS%.Name#toWire(DNS.utils%.CountedDataOutputStream,DNS%.Compression)","DNS.utils%.CountedDataOutputStream#writeShort(int)").
before_calls("DNS%.Name#toWire(DNS.utils%.CountedDataOutputStream,DNS%.Compression)","DNS.utils%.CountedDataOutputStream#writeString(java.lang%.String)").
before_calls("DNS%.Name#toWireCanonical(DNS.utils%.CountedDataOutputStream)","DNS.utils%.CountedDataOutputStream#writeByte(int)").
before_calls("DNS%.Name#toWireCanonical(DNS.utils%.CountedDataOutputStream)","java.lang%.Character#toLowerCase(char)").
before_calls("DNS%.Name#toWireCanonical(DNS.utils%.CountedDataOutputStream)","java.lang%.String#charAt(int)").
before_calls("DNS%.Name#toWireCanonical(DNS.utils%.CountedDataOutputStream)","java.lang%.String#length()").
before_calls("DNS%.OPTRecord#<init>(DNS%.Name,short,int)","DNS%.Record#<init>(DNS%.Name,short,short,int)").
before_calls("DNS%.OPTRecord#<init>(DNS%.Name,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)","DNS%.Record#<init>(DNS%.Name,short,short,int)").
before_calls("DNS%.OPTRecord#rrToWire(DNS%.Compression)","DNS.utils%.CountedDataOutputStream#<init>(java.io%.OutputStream)").
before_calls("DNS%.OPTRecord#rrToWire(DNS%.Compression)","java.io%.ByteArrayOutputStream#<init>()").
before_calls("DNS%.OPTRecord#rrToWire(DNS%.Compression)","java.io%.ByteArrayOutputStream#toByteArray()").
before_calls("DNS%.OPTRecord#toString()","DNS%.Record#toStringNoData()").
before_calls("DNS%.OPTRecord#toString()","java.lang%.StringBuffer#toString()").
before_calls("DNS%.PTRRecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)","DNS%.NS_CNAME_PTRRecord#<init>(DNS%.Name,short,short,int,DNS%.MyStringTokenizer,DNS%.Name)").
before_calls("DNS%.PTRRecord#<init>(DNS%.Name,short,int,DNS%.Name)","DNS%.NS_CNAME_PTRRecord#<init>(DNS%.Name,short,short,int,DNS%.Name)").
before_calls("DNS%.PTRRecord#<init>(DNS%.Name,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)","DNS%.NS_CNAME_PTRRecord#<init>(DNS%.Name,short,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)").
before_calls("DNS%.Record#fromString(DNS%.Name,short,short,int,DNS%.MyStringTokenizer,DNS%.Name)","DNS%.UNKRecord#<init>(DNS%.Name,short,short,int,DNS%.MyStringTokenizer,DNS%.Name)").
before_calls("DNS%.Record#fromString(DNS%.Name,short,short,int,DNS%.MyStringTokenizer,DNS%.Name)","DNS%.dns#typeString(int)").
before_calls("DNS%.Record#fromString(DNS%.Name,short,short,int,DNS%.MyStringTokenizer,DNS%.Name)","java.io%.PrintStream#println(java.lang%.Object)").
before_calls("DNS%.Record#fromString(DNS%.Name,short,short,int,DNS%.MyStringTokenizer,DNS%.Name)","java.io%.PrintStream#println(java.lang%.String)").
before_calls("DNS%.Record#fromString(DNS%.Name,short,short,int,DNS%.MyStringTokenizer,DNS%.Name)","java.lang%.Class#forName(java.lang%.String)").
before_calls("DNS%.Record#fromString(DNS%.Name,short,short,int,DNS%.MyStringTokenizer,DNS%.Name)","java.lang%.Class#getConstructor(java.lang%.Class[])").
before_calls("DNS%.Record#fromString(DNS%.Name,short,short,int,DNS%.MyStringTokenizer,DNS%.Name)","java.lang%.Integer#<init>(int)").
before_calls("DNS%.Record#fromString(DNS%.Name,short,short,int,DNS%.MyStringTokenizer,DNS%.Name)","java.lang%.Short#<init>(short)").
before_calls("DNS%.Record#fromString(DNS%.Name,short,short,int,DNS%.MyStringTokenizer,DNS%.Name)","java.lang.reflect%.Constructor#newInstance(java.lang%.Object[])").
before_calls("DNS%.Record#fromString(DNS%.Name,short,short,int,DNS%.MyStringTokenizer,DNS%.Name)","java.lang.reflect%.InvocationTargetException#getTargetException()").
before_calls("DNS%.Record#fromWire(DNS.utils%.CountedDataInputStream,int,DNS%.Compression)","DNS%.Name#<init>(DNS.utils%.CountedDataInputStream,DNS%.Compression)").
before_calls("DNS%.Record#fromWire(DNS.utils%.CountedDataInputStream,int,DNS%.Compression)","DNS%.Record#newRecord(DNS%.Name,short,short)").
before_calls("DNS%.Record#fromWire(DNS.utils%.CountedDataInputStream,int,DNS%.Compression)","DNS%.Record#newRecord(DNS%.Name,short,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)").
before_calls("DNS%.Record#fromWire(DNS.utils%.CountedDataInputStream,int,DNS%.Compression)","DNS.utils%.CountedDataInputStream#readInt()").
before_calls("DNS%.Record#fromWire(DNS.utils%.CountedDataInputStream,int,DNS%.Compression)","DNS.utils%.CountedDataInputStream#readShort()").
before_calls("DNS%.Record#newRecord(DNS%.Name,short,short)","DNS%.Record#newRecord(DNS%.Name,short,short,int,int,byte[])").
before_calls("DNS%.Record#newRecord(DNS%.Name,short,short,int)","DNS%.Record#newRecord(DNS%.Name,short,short,int,int,byte[])").
before_calls("DNS%.Record#newRecord(DNS%.Name,short,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)","DNS%.UNKRecord#<init>(DNS%.Name,short,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)").
before_calls("DNS%.Record#newRecord(DNS%.Name,short,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)","DNS%.dns#typeString(int)").
before_calls("DNS%.Record#newRecord(DNS%.Name,short,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)","java.io%.PrintStream#println(java.lang%.Object)").
before_calls("DNS%.Record#newRecord(DNS%.Name,short,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)","java.io%.PrintStream#println(java.lang%.String)").
before_calls("DNS%.Record#newRecord(DNS%.Name,short,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)","java.lang%.Class#forName(java.lang%.String)").
before_calls("DNS%.Record#newRecord(DNS%.Name,short,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)","java.lang%.Class#getConstructor(java.lang%.Class[])").
before_calls("DNS%.Record#newRecord(DNS%.Name,short,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)","java.lang%.Integer#<init>(int)").
before_calls("DNS%.Record#newRecord(DNS%.Name,short,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)","java.lang%.Short#<init>(short)").
before_calls("DNS%.Record#newRecord(DNS%.Name,short,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)","java.lang.reflect%.Constructor#newInstance(java.lang%.Object[])").
before_calls("DNS%.Record#newRecord(DNS%.Name,short,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)","java.lang.reflect%.InvocationTargetException#getTargetException()").
before_calls("DNS%.Record#newRecord(DNS%.Name,short,short,int,int,byte[])","DNS%.Record#newRecord(DNS%.Name,short,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)").
before_calls("DNS%.Record#newRecord(DNS%.Name,short,short,int,int,byte[])","DNS.utils%.CountedDataInputStream#<init>(java.io%.InputStream)").
before_calls("DNS%.Record#newRecord(DNS%.Name,short,short,int,int,byte[])","java.io%.ByteArrayInputStream#<init>(byte[])").
before_calls("DNS%.Record#rrToWireCanonical()","DNS%.Record#rrToWire(DNS%.Compression)").
before_calls("DNS%.Record#toString()","DNS%.Record#toStringNoData()").
before_calls("DNS%.Record#toString()","java.lang%.StringBuffer#append(java.lang%.String)").
before_calls("DNS%.Record#toString()","java.lang%.StringBuffer#toString()").
before_calls("DNS%.Record#toStringNoData()","DNS%.dns#classString(int)").
before_calls("DNS%.Record#toStringNoData()","DNS%.dns#typeString(int)").
before_calls("DNS%.Record#toStringNoData()","java.lang%.StringBuffer#<init>()").
before_calls("DNS%.Record#toStringNoData()","java.lang%.StringBuffer#append(int)").
before_calls("DNS%.Record#toStringNoData()","java.lang%.StringBuffer#append(java.lang%.Object)").
before_calls("DNS%.Record#toStringNoData()","java.lang%.StringBuffer#append(java.lang%.String)").
before_calls("DNS%.Record#toWire(DNS.utils%.CountedDataOutputStream,int,DNS%.Compression)","DNS%.Name#toWire(DNS.utils%.CountedDataOutputStream,DNS%.Compression)").
before_calls("DNS%.Record#toWire(DNS.utils%.CountedDataOutputStream,int,DNS%.Compression)","DNS%.Record#rrToWire(DNS%.Compression)").
before_calls("DNS%.Record#toWire(DNS.utils%.CountedDataOutputStream,int,DNS%.Compression)","DNS.utils%.CountedDataOutputStream#write(byte[])").
before_calls("DNS%.Record#toWire(DNS.utils%.CountedDataOutputStream,int,DNS%.Compression)","DNS.utils%.CountedDataOutputStream#writeInt(int)").
before_calls("DNS%.Record#toWire(DNS.utils%.CountedDataOutputStream,int,DNS%.Compression)","DNS.utils%.CountedDataOutputStream#writeShort(int)").
before_calls("DNS%.Record#toWire(int)","DNS%.Record#toWire(DNS.utils%.CountedDataOutputStream,int,DNS%.Compression)").
before_calls("DNS%.Record#toWire(int)","DNS.utils%.CountedDataOutputStream#<init>(java.io%.OutputStream)").
before_calls("DNS%.Record#toWire(int)","java.io%.ByteArrayOutputStream#<init>()").
before_calls("DNS%.Record#toWire(int)","java.io%.ByteArrayOutputStream#toByteArray()").
before_calls("DNS%.Record#toWireCanonical(DNS.utils%.CountedDataOutputStream,int)","DNS%.Name#toWireCanonical(DNS.utils%.CountedDataOutputStream)").
before_calls("DNS%.Record#toWireCanonical(DNS.utils%.CountedDataOutputStream,int)","DNS%.Record#rrToWireCanonical()").
before_calls("DNS%.Record#toWireCanonical(DNS.utils%.CountedDataOutputStream,int)","DNS.utils%.CountedDataOutputStream#write(byte[])").
before_calls("DNS%.Record#toWireCanonical(DNS.utils%.CountedDataOutputStream,int)","DNS.utils%.CountedDataOutputStream#writeInt(int)").
before_calls("DNS%.Record#toWireCanonical(DNS.utils%.CountedDataOutputStream,int)","DNS.utils%.CountedDataOutputStream#writeShort(int)").
before_calls("DNS%.Resolver#<init>()","DNS%.FindResolver#find()").
before_calls("DNS%.Resolver#<init>()","DNS%.Resolver#<init>(java.lang%.String)").
before_calls("DNS%.Resolver#<init>(java.lang%.String)","java.net%.InetAddress#getByName(java.lang%.String)").
before_calls("DNS%.Resolver#send(DNS%.Message)","DNS%.EDNS#newOPT(int)").
before_calls("DNS%.Resolver#send(DNS%.Message)","DNS%.Header#getFlag(int)").
before_calls("DNS%.Resolver#send(DNS%.Message)","DNS%.Message#<init>(byte[])").
before_calls("DNS%.Resolver#send(DNS%.Message)","DNS%.Message#addRecord(int,DNS%.Record)").
before_calls("DNS%.Resolver#send(DNS%.Message)","DNS%.Message#getHeader()").
before_calls("DNS%.Resolver#send(DNS%.Message)","DNS%.Message#getTSIG()").
before_calls("DNS%.Resolver#send(DNS%.Message)","DNS%.Message#toWire()").
before_calls("DNS%.Resolver#send(DNS%.Message)","DNS%.Resolver#sendTCP(DNS%.Message,byte[])").
before_calls("DNS%.Resolver#send(DNS%.Message)","DNS%.TSIG#apply(DNS%.Message)").
before_calls("DNS%.Resolver#send(DNS%.Message)","DNS%.TSIG#verify(DNS%.Message,byte[],DNS%.TSIGRecord)").
before_calls("DNS%.Resolver#send(DNS%.Message)","java.io%.PrintStream#println(java.lang%.Object)").
before_calls("DNS%.Resolver#send(DNS%.Message)","java.io%.PrintStream#println(java.lang%.String)").
before_calls("DNS%.Resolver#send(DNS%.Message)","java.lang%.System#arraycopy(java.lang%.Object,int,java.lang%.Object,int,int)").
before_calls("DNS%.Resolver#send(DNS%.Message)","java.net%.DatagramPacket#<init>(byte[],int)").
before_calls("DNS%.Resolver#send(DNS%.Message)","java.net%.DatagramPacket#<init>(byte[],int,java.net%.InetAddress,int)").
before_calls("DNS%.Resolver#send(DNS%.Message)","java.net%.DatagramPacket#getData()").
before_calls("DNS%.Resolver#send(DNS%.Message)","java.net%.DatagramPacket#getLength()").
before_calls("DNS%.Resolver#send(DNS%.Message)","java.net%.DatagramSocket#<init>()").
before_calls("DNS%.Resolver#send(DNS%.Message)","java.net%.DatagramSocket#close()").
before_calls("DNS%.Resolver#send(DNS%.Message)","java.net%.DatagramSocket#receive(java.net%.DatagramPacket)").
before_calls("DNS%.Resolver#send(DNS%.Message)","java.net%.DatagramSocket#send(java.net%.DatagramPacket)").
before_calls("DNS%.Resolver#send(DNS%.Message)","java.net%.DatagramSocket#setSoTimeout(int)").
before_calls("DNS%.Resolver#sendAXFR(DNS%.Message)","DNS%.Header#getCount(int)").
before_calls("DNS%.Resolver#sendAXFR(DNS%.Message)","DNS%.Header#getID()").
before_calls("DNS%.Resolver#sendAXFR(DNS%.Message)","DNS%.Header#setID(int)").
before_calls("DNS%.Resolver#sendAXFR(DNS%.Message)","DNS%.Message#<init>()").
before_calls("DNS%.Resolver#sendAXFR(DNS%.Message)","DNS%.Message#<init>(byte[])").
before_calls("DNS%.Resolver#sendAXFR(DNS%.Message)","DNS%.Message#addRecord(int,DNS%.Record)").
before_calls("DNS%.Resolver#sendAXFR(DNS%.Message)","DNS%.Message#getHeader()").
before_calls("DNS%.Resolver#sendAXFR(DNS%.Message)","DNS%.Message#getSection(int)").
before_calls("DNS%.Resolver#sendAXFR(DNS%.Message)","DNS%.Message#getTSIG()").
before_calls("DNS%.Resolver#sendAXFR(DNS%.Message)","DNS%.Message#toWire()").
before_calls("DNS%.Resolver#sendAXFR(DNS%.Message)","DNS%.TSIG#apply(DNS%.Message)").
before_calls("DNS%.Resolver#sendAXFR(DNS%.Message)","DNS%.TSIG#verifyAXFR(DNS%.Message,byte[],DNS%.TSIGRecord,boolean,boolean)").
before_calls("DNS%.Resolver#sendAXFR(DNS%.Message)","DNS%.TSIG#verifyAXFRStart()").
before_calls("DNS%.Resolver#sendAXFR(DNS%.Message)","java.io%.DataInputStream#<init>(java.io%.InputStream)").
before_calls("DNS%.Resolver#sendAXFR(DNS%.Message)","java.io%.DataInputStream#readFully(byte[])").
before_calls("DNS%.Resolver#sendAXFR(DNS%.Message)","java.io%.DataInputStream#readUnsignedShort()").
before_calls("DNS%.Resolver#sendAXFR(DNS%.Message)","java.io%.DataOutputStream#<init>(java.io%.OutputStream)").
before_calls("DNS%.Resolver#sendAXFR(DNS%.Message)","java.io%.DataOutputStream#writeShort(int)").
before_calls("DNS%.Resolver#sendAXFR(DNS%.Message)","java.io%.OutputStream#write(byte[])").
before_calls("DNS%.Resolver#sendAXFR(DNS%.Message)","java.io%.PrintStream#println()").
before_calls("DNS%.Resolver#sendAXFR(DNS%.Message)","java.io%.PrintStream#println(java.lang%.Object)").
before_calls("DNS%.Resolver#sendAXFR(DNS%.Message)","java.io%.PrintStream#println(java.lang%.String)").
before_calls("DNS%.Resolver#sendAXFR(DNS%.Message)","java.lang%.StringBuffer#<init>()").
before_calls("DNS%.Resolver#sendAXFR(DNS%.Message)","java.lang%.StringBuffer#append(java.lang%.String)").
before_calls("DNS%.Resolver#sendAXFR(DNS%.Message)","java.lang%.StringBuffer#toString()").
before_calls("DNS%.Resolver#sendAXFR(DNS%.Message)","java.net%.Socket#<init>(java.net%.InetAddress,int)").
before_calls("DNS%.Resolver#sendAXFR(DNS%.Message)","java.net%.Socket#close()").
before_calls("DNS%.Resolver#sendAXFR(DNS%.Message)","java.net%.Socket#getInputStream()").
before_calls("DNS%.Resolver#sendAXFR(DNS%.Message)","java.net%.Socket#getOutputStream()").
before_calls("DNS%.Resolver#sendAXFR(DNS%.Message)","java.net%.Socket#setSoTimeout(int)").
before_calls("DNS%.Resolver#sendAXFR(DNS%.Message)","java.util%.Enumeration#hasMoreElements()").
before_calls("DNS%.Resolver#sendAXFR(DNS%.Message)","java.util%.Enumeration#nextElement()").
before_calls("DNS%.Resolver#sendTCP(DNS%.Message,byte[])","DNS%.Message#<init>(byte[])").
before_calls("DNS%.Resolver#sendTCP(DNS%.Message,byte[])","DNS%.Message#getTSIG()").
before_calls("DNS%.Resolver#sendTCP(DNS%.Message,byte[])","DNS%.TSIG#verify(DNS%.Message,byte[],DNS%.TSIGRecord)").
before_calls("DNS%.Resolver#sendTCP(DNS%.Message,byte[])","java.io%.DataInputStream#<init>(java.io%.InputStream)").
before_calls("DNS%.Resolver#sendTCP(DNS%.Message,byte[])","java.io%.DataInputStream#readFully(byte[])").
before_calls("DNS%.Resolver#sendTCP(DNS%.Message,byte[])","java.io%.DataInputStream#readUnsignedShort()").
before_calls("DNS%.Resolver#sendTCP(DNS%.Message,byte[])","java.io%.DataOutputStream#<init>(java.io%.OutputStream)").
before_calls("DNS%.Resolver#sendTCP(DNS%.Message,byte[])","java.io%.DataOutputStream#writeShort(int)").
before_calls("DNS%.Resolver#sendTCP(DNS%.Message,byte[])","java.io%.OutputStream#write(byte[])").
before_calls("DNS%.Resolver#sendTCP(DNS%.Message,byte[])","java.io%.PrintStream#println(java.lang%.Object)").
before_calls("DNS%.Resolver#sendTCP(DNS%.Message,byte[])","java.io%.PrintStream#println(java.lang%.String)").
before_calls("DNS%.Resolver#sendTCP(DNS%.Message,byte[])","java.net%.Socket#<init>(java.net%.InetAddress,int)").
before_calls("DNS%.Resolver#sendTCP(DNS%.Message,byte[])","java.net%.Socket#close()").
before_calls("DNS%.Resolver#sendTCP(DNS%.Message,byte[])","java.net%.Socket#getInputStream()").
before_calls("DNS%.Resolver#sendTCP(DNS%.Message,byte[])","java.net%.Socket#getOutputStream()").
before_calls("DNS%.Resolver#sendTCP(DNS%.Message,byte[])","java.net%.Socket#setSoTimeout(int)").
before_calls("DNS%.Resolver#setTSIGKey(java.lang%.String)","DNS%.Resolver#setTSIGKey(java.lang%.String,java.lang%.String)").
before_calls("DNS%.Resolver#setTSIGKey(java.lang%.String)","java.io%.PrintStream#println(java.lang%.String)").
before_calls("DNS%.Resolver#setTSIGKey(java.lang%.String)","java.net%.InetAddress#getHostName()").
before_calls("DNS%.Resolver#setTSIGKey(java.lang%.String)","java.net%.InetAddress#getLocalHost()").
before_calls("DNS%.Resolver#setTSIGKey(java.lang%.String,java.lang%.String)","DNS%.TSIG#<init>(java.lang%.String,byte[])").
before_calls("DNS%.Resolver#setTSIGKey(java.lang%.String,java.lang%.String)","DNS.utils%.base64#fromString(java.lang%.String)").
before_calls("DNS%.Resolver#setTSIGKey(java.lang%.String,java.lang%.String)","java.io%.PrintStream#println(java.lang%.String)").
before_calls("DNS%.SIGRecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)","DNS%.MyStringTokenizer#hasMoreTokens()").
before_calls("DNS%.SIGRecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)","DNS%.MyStringTokenizer#nextToken()").
before_calls("DNS%.SIGRecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)","DNS%.Name#<init>(java.lang%.String,DNS%.Name)").
before_calls("DNS%.SIGRecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)","DNS%.Name#labels()").
before_calls("DNS%.SIGRecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)","DNS%.Record#<init>(DNS%.Name,short,short,int)").
before_calls("DNS%.SIGRecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)","DNS%.SIGRecord#parseDate(java.lang%.String)").
before_calls("DNS%.SIGRecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)","DNS%.dns#typeValue(java.lang%.String)").
before_calls("DNS%.SIGRecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)","DNS.utils%.base64#fromString(java.lang%.String)").
before_calls("DNS%.SIGRecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)","java.lang%.Byte#parseByte(java.lang%.String)").
before_calls("DNS%.SIGRecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)","java.lang%.Integer#parseInt(java.lang%.String)").
before_calls("DNS%.SIGRecord#<init>(DNS%.Name,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)","DNS%.Name#<init>(DNS.utils%.CountedDataInputStream,DNS%.Compression)").
before_calls("DNS%.SIGRecord#<init>(DNS%.Name,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)","DNS%.Record#<init>(DNS%.Name,short,short,int)").
before_calls("DNS%.SIGRecord#<init>(DNS%.Name,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)","DNS.utils%.CountedDataInputStream#getPos()").
before_calls("DNS%.SIGRecord#<init>(DNS%.Name,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)","DNS.utils%.CountedDataInputStream#read(byte[])").
before_calls("DNS%.SIGRecord#<init>(DNS%.Name,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)","DNS.utils%.CountedDataInputStream#readByte()").
before_calls("DNS%.SIGRecord#<init>(DNS%.Name,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)","DNS.utils%.CountedDataInputStream#readInt()").
before_calls("DNS%.SIGRecord#<init>(DNS%.Name,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)","DNS.utils%.CountedDataInputStream#readShort()").
before_calls("DNS%.SIGRecord#<init>(DNS%.Name,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)","java.util%.Date#<init>(long)").
before_calls("DNS%.SIGRecord#<init>(DNS%.Name,short,int,int,int,int,java.util%.Date,java.util%.Date,int,DNS%.Name,byte[])","DNS%.Name#labels()").
before_calls("DNS%.SIGRecord#<init>(DNS%.Name,short,int,int,int,int,java.util%.Date,java.util%.Date,int,DNS%.Name,byte[])","DNS%.Record#<init>(DNS%.Name,short,short,int)").
before_calls("DNS%.SIGRecord#formatDate(java.util%.Date)","java.lang%.StringBuffer#<init>()").
before_calls("DNS%.SIGRecord#formatDate(java.util%.Date)","java.lang%.StringBuffer#append(java.lang%.String)").
before_calls("DNS%.SIGRecord#formatDate(java.util%.Date)","java.lang%.StringBuffer#toString()").
before_calls("DNS%.SIGRecord#formatDate(java.util%.Date)","java.text%.DecimalFormat#<init>()").
before_calls("DNS%.SIGRecord#formatDate(java.util%.Date)","java.text%.NumberFormat#format(long)").
before_calls("DNS%.SIGRecord#formatDate(java.util%.Date)","java.text%.NumberFormat#setGroupingUsed(boolean)").
before_calls("DNS%.SIGRecord#formatDate(java.util%.Date)","java.text%.NumberFormat#setMinimumIntegerDigits(int)").
before_calls("DNS%.SIGRecord#formatDate(java.util%.Date)","java.util%.Calendar#get(int)").
before_calls("DNS%.SIGRecord#formatDate(java.util%.Date)","java.util%.Calendar#setTime(java.util%.Date)").
before_calls("DNS%.SIGRecord#formatDate(java.util%.Date)","java.util%.GregorianCalendar#<init>(java.util%.TimeZone)").
before_calls("DNS%.SIGRecord#formatDate(java.util%.Date)","java.util%.TimeZone#getTimeZone(java.lang%.String)").
before_calls("DNS%.SIGRecord#parseDate(java.lang%.String)","java.lang%.Integer#parseInt(java.lang%.String)").
before_calls("DNS%.SIGRecord#parseDate(java.lang%.String)","java.lang%.String#substring(int,int)").
before_calls("DNS%.SIGRecord#parseDate(java.lang%.String)","java.util%.Calendar#getTime()").
before_calls("DNS%.SIGRecord#parseDate(java.lang%.String)","java.util%.Calendar#set(int,int,int,int,int,int)").
before_calls("DNS%.SIGRecord#parseDate(java.lang%.String)","java.util%.GregorianCalendar#<init>(java.util%.TimeZone)").
before_calls("DNS%.SIGRecord#parseDate(java.lang%.String)","java.util%.TimeZone#getTimeZone(java.lang%.String)").
before_calls("DNS%.SIGRecord#rrToWire(DNS%.Compression)","DNS%.Name#toWire(DNS.utils%.CountedDataOutputStream,DNS%.Compression)").
before_calls("DNS%.SIGRecord#rrToWire(DNS%.Compression)","DNS.utils%.CountedDataOutputStream#<init>(java.io%.OutputStream)").
before_calls("DNS%.SIGRecord#rrToWire(DNS%.Compression)","DNS.utils%.CountedDataOutputStream#write(byte[])").
before_calls("DNS%.SIGRecord#rrToWire(DNS%.Compression)","DNS.utils%.CountedDataOutputStream#writeByte(int)").
before_calls("DNS%.SIGRecord#rrToWire(DNS%.Compression)","DNS.utils%.CountedDataOutputStream#writeInt(int)").
before_calls("DNS%.SIGRecord#rrToWire(DNS%.Compression)","DNS.utils%.CountedDataOutputStream#writeShort(int)").
before_calls("DNS%.SIGRecord#rrToWire(DNS%.Compression)","java.io%.ByteArrayOutputStream#<init>()").
before_calls("DNS%.SIGRecord#rrToWire(DNS%.Compression)","java.io%.ByteArrayOutputStream#toByteArray()").
before_calls("DNS%.SIGRecord#rrToWire(DNS%.Compression)","java.util%.Date#getTime()").
before_calls("DNS%.SIGRecord#toString()","DNS%.IO#formatBase64String(java.lang%.String,int,java.lang%.String,boolean)").
before_calls("DNS%.SIGRecord#toString()","DNS%.Record#toStringNoData()").
before_calls("DNS%.SIGRecord#toString()","DNS%.SIGRecord#formatDate(java.util%.Date)").
before_calls("DNS%.SIGRecord#toString()","DNS%.dns#typeString(int)").
before_calls("DNS%.SIGRecord#toString()","DNS.utils%.base64#toString(byte[])").
before_calls("DNS%.SIGRecord#toString()","java.lang%.StringBuffer#append(int)").
before_calls("DNS%.SIGRecord#toString()","java.lang%.StringBuffer#append(java.lang%.Object)").
before_calls("DNS%.SIGRecord#toString()","java.lang%.StringBuffer#append(java.lang%.String)").
before_calls("DNS%.SIGRecord#toString()","java.lang%.StringBuffer#toString()").
before_calls("DNS%.SOARecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)","DNS%.MyStringTokenizer#nextToken()").
before_calls("DNS%.SOARecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)","DNS%.Name#<init>(java.lang%.String,DNS%.Name)").
before_calls("DNS%.SOARecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)","DNS%.Record#<init>(DNS%.Name,short,short,int)").
before_calls("DNS%.SOARecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)","java.lang%.Integer#parseInt(java.lang%.String)").
before_calls("DNS%.SOARecord#<init>(DNS%.Name,short,int,DNS%.Name,DNS%.Name,int,int,int,int,int)","DNS%.Record#<init>(DNS%.Name,short,short,int)").
before_calls("DNS%.SOARecord#<init>(DNS%.Name,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)","DNS%.Name#<init>(DNS.utils%.CountedDataInputStream,DNS%.Compression)").
before_calls("DNS%.SOARecord#<init>(DNS%.Name,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)","DNS%.Record#<init>(DNS%.Name,short,short,int)").
before_calls("DNS%.SOARecord#<init>(DNS%.Name,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)","DNS.utils%.CountedDataInputStream#readInt()").
before_calls("DNS%.SOARecord#rrToWire(DNS%.Compression)","DNS%.Name#toWire(DNS.utils%.CountedDataOutputStream,DNS%.Compression)").
before_calls("DNS%.SOARecord#rrToWire(DNS%.Compression)","DNS.utils%.CountedDataOutputStream#<init>(java.io%.OutputStream)").
before_calls("DNS%.SOARecord#rrToWire(DNS%.Compression)","DNS.utils%.CountedDataOutputStream#writeInt(int)").
before_calls("DNS%.SOARecord#rrToWire(DNS%.Compression)","java.io%.ByteArrayOutputStream#<init>()").
before_calls("DNS%.SOARecord#rrToWire(DNS%.Compression)","java.io%.ByteArrayOutputStream#toByteArray()").
before_calls("DNS%.SOARecord#toString()","DNS%.Record#toStringNoData()").
before_calls("DNS%.SOARecord#toString()","java.lang%.StringBuffer#append(int)").
before_calls("DNS%.SOARecord#toString()","java.lang%.StringBuffer#append(java.lang%.Object)").
before_calls("DNS%.SOARecord#toString()","java.lang%.StringBuffer#append(java.lang%.String)").
before_calls("DNS%.SOARecord#toString()","java.lang%.StringBuffer#toString()").
before_calls("DNS%.SRVRecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)","DNS%.MyStringTokenizer#nextToken()").
before_calls("DNS%.SRVRecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)","DNS%.Name#<init>(java.lang%.String,DNS%.Name)").
before_calls("DNS%.SRVRecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)","DNS%.Record#<init>(DNS%.Name,short,short,int)").
before_calls("DNS%.SRVRecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)","java.lang%.Short#parseShort(java.lang%.String)").
before_calls("DNS%.SRVRecord#<init>(DNS%.Name,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)","DNS%.Name#<init>(DNS.utils%.CountedDataInputStream,DNS%.Compression)").
before_calls("DNS%.SRVRecord#<init>(DNS%.Name,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)","DNS%.Record#<init>(DNS%.Name,short,short,int)").
before_calls("DNS%.SRVRecord#<init>(DNS%.Name,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)","DNS.utils%.CountedDataInputStream#readUnsignedShort()").
before_calls("DNS%.SRVRecord#<init>(DNS%.Name,short,int,int,int,int,DNS%.Name)","DNS%.Record#<init>(DNS%.Name,short,short,int)").
before_calls("DNS%.SRVRecord#rrToWire(DNS%.Compression)","DNS%.Name#toWire(DNS.utils%.CountedDataOutputStream,DNS%.Compression)").
before_calls("DNS%.SRVRecord#rrToWire(DNS%.Compression)","DNS.utils%.CountedDataOutputStream#<init>(java.io%.OutputStream)").
before_calls("DNS%.SRVRecord#rrToWire(DNS%.Compression)","DNS.utils%.CountedDataOutputStream#writeShort(int)").
before_calls("DNS%.SRVRecord#rrToWire(DNS%.Compression)","java.io%.ByteArrayOutputStream#<init>()").
before_calls("DNS%.SRVRecord#rrToWire(DNS%.Compression)","java.io%.ByteArrayOutputStream#toByteArray()").
before_calls("DNS%.SRVRecord#toString()","DNS%.Record#toStringNoData()").
before_calls("DNS%.SRVRecord#toString()","java.lang%.StringBuffer#append(int)").
before_calls("DNS%.SRVRecord#toString()","java.lang%.StringBuffer#append(java.lang%.Object)").
before_calls("DNS%.SRVRecord#toString()","java.lang%.StringBuffer#append(java.lang%.String)").
before_calls("DNS%.SRVRecord#toString()","java.lang%.StringBuffer#toString()").
before_calls("DNS%.TSIG#<init>(java.lang%.String,byte[])","DNS%.Name#<init>(java.lang%.String)").
before_calls("DNS%.TSIG#apply(DNS%.Message)","DNS%.Header#getID()").
before_calls("DNS%.TSIG#apply(DNS%.Message)","DNS%.Message#addRecord(int,DNS%.Record)").
before_calls("DNS%.TSIG#apply(DNS%.Message)","DNS%.Message#getHeader()").
before_calls("DNS%.TSIG#apply(DNS%.Message)","DNS%.Message#toWire()").
before_calls("DNS%.TSIG#apply(DNS%.Message)","DNS%.Name#<init>(java.lang%.String)").
before_calls("DNS%.TSIG#apply(DNS%.Message)","DNS%.Name#toWireCanonical(DNS.utils%.CountedDataOutputStream)").
before_calls("DNS%.TSIG#apply(DNS%.Message)","DNS%.TSIGRecord#<init>(DNS%.Name,short,int,DNS%.Name,java.util%.Date,short,byte[],int,short,byte[])").
before_calls("DNS%.TSIG#apply(DNS%.Message)","DNS.utils%.CountedDataOutputStream#<init>(java.io%.OutputStream)").
before_calls("DNS%.TSIG#apply(DNS%.Message)","DNS.utils%.CountedDataOutputStream#writeInt(int)").
before_calls("DNS%.TSIG#apply(DNS%.Message)","DNS.utils%.CountedDataOutputStream#writeShort(int)").
before_calls("DNS%.TSIG#apply(DNS%.Message)","DNS.utils%.hmacSigner#<init>(byte[])").
before_calls("DNS%.TSIG#apply(DNS%.Message)","DNS.utils%.hmacSigner#addData(byte[])").
before_calls("DNS%.TSIG#apply(DNS%.Message)","DNS.utils%.hmacSigner#sign()").
before_calls("DNS%.TSIG#apply(DNS%.Message)","java.io%.ByteArrayOutputStream#<init>()").
before_calls("DNS%.TSIG#apply(DNS%.Message)","java.io%.ByteArrayOutputStream#toByteArray()").
before_calls("DNS%.TSIG#apply(DNS%.Message)","java.util%.Date#<init>()").
before_calls("DNS%.TSIG#apply(DNS%.Message)","java.util%.Date#getTime()").
before_calls("DNS%.TSIG#verify(DNS%.Message,byte[],DNS%.TSIGRecord)","DNS%.Header#decCount(int)").
before_calls("DNS%.TSIG#verify(DNS%.Message,byte[],DNS%.TSIGRecord)","DNS%.Header#incCount(int)").
before_calls("DNS%.TSIG#verify(DNS%.Message,byte[],DNS%.TSIGRecord)","DNS%.Header#toWire()").
before_calls("DNS%.TSIG#verify(DNS%.Message,byte[],DNS%.TSIGRecord)","DNS%.Message#getHeader()").
before_calls("DNS%.TSIG#verify(DNS%.Message,byte[],DNS%.TSIGRecord)","DNS%.Message#getTSIG()").
before_calls("DNS%.TSIG#verify(DNS%.Message,byte[],DNS%.TSIGRecord)","DNS%.Name#toWireCanonical(DNS.utils%.CountedDataOutputStream)").
before_calls("DNS%.TSIG#verify(DNS%.Message,byte[],DNS%.TSIGRecord)","DNS%.Record#getName()").
before_calls("DNS%.TSIG#verify(DNS%.Message,byte[],DNS%.TSIGRecord)","DNS%.TSIGRecord#getAlg()").
before_calls("DNS%.TSIG#verify(DNS%.Message,byte[],DNS%.TSIGRecord)","DNS%.TSIGRecord#getError()").
before_calls("DNS%.TSIG#verify(DNS%.Message,byte[],DNS%.TSIGRecord)","DNS%.TSIGRecord#getFudge()").
before_calls("DNS%.TSIG#verify(DNS%.Message,byte[],DNS%.TSIGRecord)","DNS%.TSIGRecord#getOther()").
before_calls("DNS%.TSIG#verify(DNS%.Message,byte[],DNS%.TSIGRecord)","DNS%.TSIGRecord#getSignature()").
before_calls("DNS%.TSIG#verify(DNS%.Message,byte[],DNS%.TSIGRecord)","DNS%.TSIGRecord#getTimeSigned()").
before_calls("DNS%.TSIG#verify(DNS%.Message,byte[],DNS%.TSIGRecord)","DNS.utils%.CountedDataOutputStream#<init>(java.io%.OutputStream)").
before_calls("DNS%.TSIG#verify(DNS%.Message,byte[],DNS%.TSIGRecord)","DNS.utils%.CountedDataOutputStream#write(byte[])").
before_calls("DNS%.TSIG#verify(DNS%.Message,byte[],DNS%.TSIGRecord)","DNS.utils%.CountedDataOutputStream#writeInt(int)").
before_calls("DNS%.TSIG#verify(DNS%.Message,byte[],DNS%.TSIGRecord)","DNS.utils%.CountedDataOutputStream#writeShort(int)").
before_calls("DNS%.TSIG#verify(DNS%.Message,byte[],DNS%.TSIGRecord)","DNS.utils%.hmacSigner#<init>(byte[])").
before_calls("DNS%.TSIG#verify(DNS%.Message,byte[],DNS%.TSIGRecord)","DNS.utils%.hmacSigner#addData(byte[])").
before_calls("DNS%.TSIG#verify(DNS%.Message,byte[],DNS%.TSIGRecord)","DNS.utils%.hmacSigner#addData(byte[],int,int)").
before_calls("DNS%.TSIG#verify(DNS%.Message,byte[],DNS%.TSIGRecord)","DNS.utils%.hmacSigner#verify(byte[])").
before_calls("DNS%.TSIG#verify(DNS%.Message,byte[],DNS%.TSIGRecord)","java.io%.ByteArrayOutputStream#<init>()").
before_calls("DNS%.TSIG#verify(DNS%.Message,byte[],DNS%.TSIGRecord)","java.io%.ByteArrayOutputStream#toByteArray()").
before_calls("DNS%.TSIG#verify(DNS%.Message,byte[],DNS%.TSIGRecord)","java.util%.Date#getTime()").
before_calls("DNS%.TSIG#verifyAXFR(DNS%.Message,byte[],DNS%.TSIGRecord,boolean,boolean)","DNS%.Header#decCount(int)").
before_calls("DNS%.TSIG#verifyAXFR(DNS%.Message,byte[],DNS%.TSIGRecord,boolean,boolean)","DNS%.Header#incCount(int)").
before_calls("DNS%.TSIG#verifyAXFR(DNS%.Message,byte[],DNS%.TSIGRecord,boolean,boolean)","DNS%.Header#toWire()").
before_calls("DNS%.TSIG#verifyAXFR(DNS%.Message,byte[],DNS%.TSIGRecord,boolean,boolean)","DNS%.Message#getHeader()").
before_calls("DNS%.TSIG#verifyAXFR(DNS%.Message,byte[],DNS%.TSIGRecord,boolean,boolean)","DNS%.Message#getTSIG()").
before_calls("DNS%.TSIG#verifyAXFR(DNS%.Message,byte[],DNS%.TSIGRecord,boolean,boolean)","DNS%.TSIG#verify(DNS%.Message,byte[],DNS%.TSIGRecord)").
before_calls("DNS%.TSIG#verifyAXFR(DNS%.Message,byte[],DNS%.TSIGRecord,boolean,boolean)","DNS%.TSIGRecord#getFudge()").
before_calls("DNS%.TSIG#verifyAXFR(DNS%.Message,byte[],DNS%.TSIGRecord,boolean,boolean)","DNS%.TSIGRecord#getSignature()").
before_calls("DNS%.TSIG#verifyAXFR(DNS%.Message,byte[],DNS%.TSIGRecord,boolean,boolean)","DNS%.TSIGRecord#getTimeSigned()").
before_calls("DNS%.TSIG#verifyAXFR(DNS%.Message,byte[],DNS%.TSIGRecord,boolean,boolean)","DNS.utils%.CountedDataOutputStream#<init>(java.io%.OutputStream)").
before_calls("DNS%.TSIG#verifyAXFR(DNS%.Message,byte[],DNS%.TSIGRecord,boolean,boolean)","DNS.utils%.CountedDataOutputStream#writeInt(int)").
before_calls("DNS%.TSIG#verifyAXFR(DNS%.Message,byte[],DNS%.TSIGRecord,boolean,boolean)","DNS.utils%.CountedDataOutputStream#writeShort(int)").
before_calls("DNS%.TSIG#verifyAXFR(DNS%.Message,byte[],DNS%.TSIGRecord,boolean,boolean)","DNS.utils%.hmacSigner#addData(byte[])").
before_calls("DNS%.TSIG#verifyAXFR(DNS%.Message,byte[],DNS%.TSIGRecord,boolean,boolean)","DNS.utils%.hmacSigner#addData(byte[],int,int)").
before_calls("DNS%.TSIG#verifyAXFR(DNS%.Message,byte[],DNS%.TSIGRecord,boolean,boolean)","DNS.utils%.hmacSigner#clear()").
before_calls("DNS%.TSIG#verifyAXFR(DNS%.Message,byte[],DNS%.TSIGRecord,boolean,boolean)","DNS.utils%.hmacSigner#verify(byte[])").
before_calls("DNS%.TSIG#verifyAXFR(DNS%.Message,byte[],DNS%.TSIGRecord,boolean,boolean)","java.io%.ByteArrayOutputStream#<init>()").
before_calls("DNS%.TSIG#verifyAXFR(DNS%.Message,byte[],DNS%.TSIGRecord,boolean,boolean)","java.io%.ByteArrayOutputStream#toByteArray()").
before_calls("DNS%.TSIG#verifyAXFR(DNS%.Message,byte[],DNS%.TSIGRecord,boolean,boolean)","java.util%.Date#getTime()").
before_calls("DNS%.TSIG#verifyAXFRStart()","DNS.utils%.hmacSigner#<init>(byte[])").
before_calls("DNS%.TSIGRecord#<init>(DNS%.Name,short,int,DNS%.Name,java.util%.Date,short,byte[],int,short,byte[])","DNS%.Record#<init>(DNS%.Name,short,short,int)").
before_calls("DNS%.TSIGRecord#<init>(DNS%.Name,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)","DNS%.Name#<init>(DNS.utils%.CountedDataInputStream,DNS%.Compression)").
before_calls("DNS%.TSIGRecord#<init>(DNS%.Name,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)","DNS%.Record#<init>(DNS%.Name,short,short,int)").
before_calls("DNS%.TSIGRecord#<init>(DNS%.Name,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)","DNS.utils%.CountedDataInputStream#read(byte[])").
before_calls("DNS%.TSIGRecord#<init>(DNS%.Name,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)","DNS.utils%.CountedDataInputStream#readInt()").
before_calls("DNS%.TSIGRecord#<init>(DNS%.Name,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)","DNS.utils%.CountedDataInputStream#readShort()").
before_calls("DNS%.TSIGRecord#<init>(DNS%.Name,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)","DNS.utils%.CountedDataInputStream#readUnsignedShort()").
before_calls("DNS%.TSIGRecord#<init>(DNS%.Name,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)","java.util%.Date#<init>(long)").
before_calls("DNS%.TSIGRecord#rrToWire(DNS%.Compression)","DNS%.Name#toWire(DNS.utils%.CountedDataOutputStream,DNS%.Compression)").
before_calls("DNS%.TSIGRecord#rrToWire(DNS%.Compression)","DNS.utils%.CountedDataOutputStream#<init>(java.io%.OutputStream)").
before_calls("DNS%.TSIGRecord#rrToWire(DNS%.Compression)","DNS.utils%.CountedDataOutputStream#write(byte[])").
before_calls("DNS%.TSIGRecord#rrToWire(DNS%.Compression)","DNS.utils%.CountedDataOutputStream#writeInt(int)").
before_calls("DNS%.TSIGRecord#rrToWire(DNS%.Compression)","DNS.utils%.CountedDataOutputStream#writeShort(int)").
before_calls("DNS%.TSIGRecord#rrToWire(DNS%.Compression)","java.io%.ByteArrayOutputStream#<init>()").
before_calls("DNS%.TSIGRecord#rrToWire(DNS%.Compression)","java.io%.ByteArrayOutputStream#toByteArray()").
before_calls("DNS%.TSIGRecord#rrToWire(DNS%.Compression)","java.util%.Date#getTime()").
before_calls("DNS%.TSIGRecord#toString()","DNS%.IO#formatBase64String(java.lang%.String,int,java.lang%.String,boolean)").
before_calls("DNS%.TSIGRecord#toString()","DNS%.Record#toStringNoData()").
before_calls("DNS%.TSIGRecord#toString()","DNS%.dns#rcodeString(int)").
before_calls("DNS%.TSIGRecord#toString()","DNS.utils%.base64#toString(byte[])").
before_calls("DNS%.TSIGRecord#toString()","java.io%.ByteArrayInputStream#<init>(byte[])").
before_calls("DNS%.TSIGRecord#toString()","java.io%.DataInputStream#<init>(java.io%.InputStream)").
before_calls("DNS%.TSIGRecord#toString()","java.io%.DataInputStream#readInt()").
before_calls("DNS%.TSIGRecord#toString()","java.io%.DataInputStream#readUnsignedShort()").
before_calls("DNS%.TSIGRecord#toString()","java.lang%.StringBuffer#append(java.lang%.Object)").
before_calls("DNS%.TSIGRecord#toString()","java.lang%.StringBuffer#append(java.lang%.String)").
before_calls("DNS%.TSIGRecord#toString()","java.lang%.StringBuffer#append(long)").
before_calls("DNS%.TSIGRecord#toString()","java.lang%.StringBuffer#toString()").
before_calls("DNS%.TSIGRecord#toString()","java.util%.Date#<init>(long)").
before_calls("DNS%.TSIGRecord#toString()","java.util%.Date#getTime()").
before_calls("DNS%.TXTRecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)","DNS%.MyStringTokenizer#hasMoreTokens()").
before_calls("DNS%.TXTRecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)","DNS%.MyStringTokenizer#nextToken()").
before_calls("DNS%.TXTRecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)","DNS%.Record#<init>(DNS%.Name,short,short,int)").
before_calls("DNS%.TXTRecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)","java.util%.Vector#<init>()").
before_calls("DNS%.TXTRecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)","java.util%.Vector#addElement(java.lang%.Object)").
before_calls("DNS%.TXTRecord#<init>(DNS%.Name,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)","DNS%.Record#<init>(DNS%.Name,short,short,int)").
before_calls("DNS%.TXTRecord#<init>(DNS%.Name,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)","DNS.utils%.CountedDataInputStream#read(byte[])").
before_calls("DNS%.TXTRecord#<init>(DNS%.Name,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)","DNS.utils%.CountedDataInputStream#readByte()").
before_calls("DNS%.TXTRecord#<init>(DNS%.Name,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)","java.lang%.String#<init>(byte[])").
before_calls("DNS%.TXTRecord#<init>(DNS%.Name,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)","java.util%.Vector#<init>()").
before_calls("DNS%.TXTRecord#<init>(DNS%.Name,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)","java.util%.Vector#addElement(java.lang%.Object)").
before_calls("DNS%.TXTRecord#<init>(DNS%.Name,short,int,java.lang%.String)","DNS%.Record#<init>(DNS%.Name,short,short,int)").
before_calls("DNS%.TXTRecord#<init>(DNS%.Name,short,int,java.lang%.String)","java.util%.Vector#<init>()").
before_calls("DNS%.TXTRecord#<init>(DNS%.Name,short,int,java.lang%.String)","java.util%.Vector#addElement(java.lang%.Object)").
before_calls("DNS%.TXTRecord#<init>(DNS%.Name,short,int,java.util%.Vector)","DNS%.Record#<init>(DNS%.Name,short,short,int)").
before_calls("DNS%.TXTRecord#rrToWire(DNS%.Compression)","DNS.utils%.CountedDataOutputStream#<init>(java.io%.OutputStream)").
before_calls("DNS%.TXTRecord#rrToWire(DNS%.Compression)","DNS.utils%.CountedDataOutputStream#writeString(java.lang%.String)").
before_calls("DNS%.TXTRecord#rrToWire(DNS%.Compression)","java.io%.ByteArrayOutputStream#<init>()").
before_calls("DNS%.TXTRecord#rrToWire(DNS%.Compression)","java.io%.ByteArrayOutputStream#toByteArray()").
before_calls("DNS%.TXTRecord#rrToWire(DNS%.Compression)","java.util%.Enumeration#hasMoreElements()").
before_calls("DNS%.TXTRecord#rrToWire(DNS%.Compression)","java.util%.Enumeration#nextElement()").
before_calls("DNS%.TXTRecord#rrToWire(DNS%.Compression)","java.util%.Vector#elements()").
before_calls("DNS%.TXTRecord#toString()","DNS%.Record#toStringNoData()").
before_calls("DNS%.TXTRecord#toString()","java.lang%.StringBuffer#append(java.lang%.String)").
before_calls("DNS%.TXTRecord#toString()","java.lang%.StringBuffer#toString()").
before_calls("DNS%.TXTRecord#toString()","java.util%.Enumeration#hasMoreElements()").
before_calls("DNS%.TXTRecord#toString()","java.util%.Enumeration#nextElement()").
before_calls("DNS%.TXTRecord#toString()","java.util%.Vector#elements()").
before_calls("DNS%.UNKRecord#<init>(DNS%.Name,short,short,int,DNS%.MyStringTokenizer,DNS%.Name)","DNS%.Record#<init>(DNS%.Name,short,short,int)").
before_calls("DNS%.UNKRecord#<init>(DNS%.Name,short,short,int,DNS%.MyStringTokenizer,DNS%.Name)","java.io%.PrintStream#println(java.lang%.String)").
before_calls("DNS%.UNKRecord#<init>(DNS%.Name,short,short,int,DNS%.MyStringTokenizer,DNS%.Name)","java.lang%.System#exit(int)").
before_calls("DNS%.UNKRecord#<init>(DNS%.Name,short,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)","DNS%.Record#<init>(DNS%.Name,short,short,int)").
before_calls("DNS%.UNKRecord#<init>(DNS%.Name,short,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)","DNS.utils%.CountedDataInputStream#read(byte[])").
before_calls("DNS%.UNKRecord#toString()","DNS%.Record#toStringNoData()").
before_calls("DNS%.UNKRecord#toString()","java.lang%.StringBuffer#append(java.lang%.String)").
before_calls("DNS%.UNKRecord#toString()","java.lang%.StringBuffer#toString()").
before_calls("DNS%.Zone#<init>(java.lang%.String)","DNS%.IO#readExtendedLine(java.io%.BufferedReader)").
before_calls("DNS%.Zone#<init>(java.lang%.String)","DNS%.MyStringTokenizer#<init>(java.lang%.String)").
before_calls("DNS%.Zone#<init>(java.lang%.String)","DNS%.MyStringTokenizer#nextToken()").
before_calls("DNS%.Zone#<init>(java.lang%.String)","DNS%.MyStringTokenizer#putBackToken(java.lang%.String)").
before_calls("DNS%.Zone#<init>(java.lang%.String)","DNS%.Zone#parseOrigin(DNS%.MyStringTokenizer)").
before_calls("DNS%.Zone#<init>(java.lang%.String)","DNS%.Zone#parseRR(DNS%.MyStringTokenizer,boolean,DNS%.Record,DNS%.Name)").
before_calls("DNS%.Zone#<init>(java.lang%.String)","java.io%.BufferedReader#<init>(java.io%.Reader)").
before_calls("DNS%.Zone#<init>(java.lang%.String)","java.io%.FileInputStream#<init>(java.lang%.String)").
before_calls("DNS%.Zone#<init>(java.lang%.String)","java.io%.IOException#<init>(java.lang%.String)").
before_calls("DNS%.Zone#<init>(java.lang%.String)","java.io%.InputStreamReader#<init>(java.io%.InputStream)").
before_calls("DNS%.Zone#<init>(java.lang%.String)","java.lang%.String#equals(java.lang%.Object)").
before_calls("DNS%.Zone#<init>(java.lang%.String)","java.lang%.String#startsWith(java.lang%.String)").
before_calls("DNS%.Zone#<init>(java.lang%.String)","java.lang%.Throwable#toString()").
before_calls("DNS%.Zone#<init>(java.lang%.String)","java.util%.Hashtable#<init>()").
before_calls("DNS%.Zone#<init>(java.lang%.String)","java.util%.Hashtable#get(java.lang%.Object)").
before_calls("DNS%.Zone#<init>(java.lang%.String)","java.util%.Hashtable#put(java.lang%.Object,java.lang%.Object)").
before_calls("DNS%.Zone#<init>(java.lang%.String)","java.util%.Vector#<init>()").
before_calls("DNS%.Zone#<init>(java.lang%.String)","java.util%.Vector#addElement(java.lang%.Object)").
before_calls("DNS%.Zone#findName(DNS%.Name)","java.util%.Hashtable#get(java.lang%.Object)").
before_calls("DNS%.Zone#parseOrigin(DNS%.MyStringTokenizer)","DNS%.MyStringTokenizer#nextToken()").
before_calls("DNS%.Zone#parseOrigin(DNS%.MyStringTokenizer)","DNS%.Name#<init>(java.lang%.String)").
before_calls("DNS%.Zone#parseRR(DNS%.MyStringTokenizer,boolean,DNS%.Record,DNS%.Name)","DNS%.MyStringTokenizer#nextToken()").
before_calls("DNS%.Zone#parseRR(DNS%.MyStringTokenizer,boolean,DNS%.Record,DNS%.Name)","DNS%.Name#<init>(java.lang%.String,DNS%.Name)").
before_calls("DNS%.Zone#parseRR(DNS%.MyStringTokenizer,boolean,DNS%.Record,DNS%.Name)","DNS%.Record#fromString(DNS%.Name,short,short,int,DNS%.MyStringTokenizer,DNS%.Name)").
before_calls("DNS%.Zone#parseRR(DNS%.MyStringTokenizer,boolean,DNS%.Record,DNS%.Name)","DNS%.dns#classValue(java.lang%.String)").
before_calls("DNS%.Zone#parseRR(DNS%.MyStringTokenizer,boolean,DNS%.Record,DNS%.Name)","DNS%.dns#typeValue(java.lang%.String)").
before_calls("DNS%.Zone#parseRR(DNS%.MyStringTokenizer,boolean,DNS%.Record,DNS%.Name)","java.io%.IOException#<init>(java.lang%.String)").
before_calls("DNS%.Zone#parseRR(DNS%.MyStringTokenizer,boolean,DNS%.Record,DNS%.Name)","java.lang%.Integer#parseInt(java.lang%.String)").
before_calls("DNS%.dns#classString(int)","java.lang%.Integer#<init>(int)").
before_calls("DNS%.dns#classString(int)","java.lang%.Integer#toString()").
before_calls("DNS%.dns#classString(int)","java.lang%.Short#<init>(short)").
before_calls("DNS%.dns#classString(int)","java.util%.Hashtable#get(java.lang%.Object)").
before_calls("DNS%.dns#classValue(java.lang%.String)","java.lang%.Short#parseShort(java.lang%.String)").
before_calls("DNS%.dns#classValue(java.lang%.String)","java.lang%.Short#shortValue()").
before_calls("DNS%.dns#classValue(java.lang%.String)","java.lang%.String#toUpperCase()").
before_calls("DNS%.dns#classValue(java.lang%.String)","java.util%.Hashtable#get(java.lang%.Object)").
before_calls("DNS%.dns#flagString(int)","java.lang%.Byte#<init>(byte)").
before_calls("DNS%.dns#flagString(int)","java.lang%.Integer#<init>(int)").
before_calls("DNS%.dns#flagString(int)","java.lang%.Integer#toString()").
before_calls("DNS%.dns#flagString(int)","java.util%.Hashtable#get(java.lang%.Object)").
before_calls("DNS%.dns#getRecords(DNS%.Resolver,java.lang%.String,short)","DNS%.dns#getRecords(DNS%.Resolver,java.lang%.String,short,short)").
before_calls("DNS%.dns#getRecords(DNS%.Resolver,java.lang%.String,short,short)","DNS%.Header#getRcode()").
before_calls("DNS%.dns#getRecords(DNS%.Resolver,java.lang%.String,short,short)","DNS%.Header#setFlag(int)").
before_calls("DNS%.dns#getRecords(DNS%.Resolver,java.lang%.String,short,short)","DNS%.Header#setOpcode(byte)").
before_calls("DNS%.dns#getRecords(DNS%.Resolver,java.lang%.String,short,short)","DNS%.Message#<init>()").
before_calls("DNS%.dns#getRecords(DNS%.Resolver,java.lang%.String,short,short)","DNS%.Message#addRecord(int,DNS%.Record)").
before_calls("DNS%.dns#getRecords(DNS%.Resolver,java.lang%.String,short,short)","DNS%.Message#getHeader()").
before_calls("DNS%.dns#getRecords(DNS%.Resolver,java.lang%.String,short,short)","DNS%.Message#getSection(int)").
before_calls("DNS%.dns#getRecords(DNS%.Resolver,java.lang%.String,short,short)","DNS%.Name#<init>(java.lang%.String)").
before_calls("DNS%.dns#getRecords(DNS%.Resolver,java.lang%.String,short,short)","DNS%.Record#getType()").
before_calls("DNS%.dns#getRecords(DNS%.Resolver,java.lang%.String,short,short)","DNS%.Record#newRecord(DNS%.Name,short,short)").
before_calls("DNS%.dns#getRecords(DNS%.Resolver,java.lang%.String,short,short)","DNS%.Resolver#<init>()").
before_calls("DNS%.dns#getRecords(DNS%.Resolver,java.lang%.String,short,short)","DNS%.Resolver#send(DNS%.Message)").
before_calls("DNS%.dns#getRecords(DNS%.Resolver,java.lang%.String,short,short)","DNS%.dns#matchType(short,short)").
before_calls("DNS%.dns#getRecords(DNS%.Resolver,java.lang%.String,short,short)","java.io%.PrintStream#println(java.lang%.String)").
before_calls("DNS%.dns#getRecords(DNS%.Resolver,java.lang%.String,short,short)","java.lang%.System#exit(int)").
before_calls("DNS%.dns#getRecords(DNS%.Resolver,java.lang%.String,short,short)","java.util%.Enumeration#hasMoreElements()").
before_calls("DNS%.dns#getRecords(DNS%.Resolver,java.lang%.String,short,short)","java.util%.Enumeration#nextElement()").
before_calls("DNS%.dns#getRecords(java.lang%.String,short)","DNS%.dns#getRecords(DNS%.Resolver,java.lang%.String,short,short)").
before_calls("DNS%.dns#getRecords(java.lang%.String,short,short)","DNS%.dns#getRecords(DNS%.Resolver,java.lang%.String,short,short)").
before_calls("DNS%.dns#getRecordsByAddress(DNS%.Resolver,java.lang%.String,short)","DNS%.dns#getRecords(DNS%.Resolver,java.lang%.String,short,short)").
before_calls("DNS%.dns#getRecordsByAddress(DNS%.Resolver,java.lang%.String,short)","java.lang%.StringBuffer#<init>()").
before_calls("DNS%.dns#getRecordsByAddress(DNS%.Resolver,java.lang%.String,short)","java.lang%.StringBuffer#append(int)").
before_calls("DNS%.dns#getRecordsByAddress(DNS%.Resolver,java.lang%.String,short)","java.lang%.StringBuffer#append(java.lang%.String)").
before_calls("DNS%.dns#getRecordsByAddress(DNS%.Resolver,java.lang%.String,short)","java.lang%.StringBuffer#toString()").
before_calls("DNS%.dns#getRecordsByAddress(DNS%.Resolver,java.lang%.String,short)","java.net%.InetAddress#getAddress()").
before_calls("DNS%.dns#getRecordsByAddress(DNS%.Resolver,java.lang%.String,short)","java.net%.InetAddress#getByName(java.lang%.String)").
before_calls("DNS%.dns#getRecordsByAddress(java.lang%.String,short)","DNS%.dns#getRecordsByAddress(DNS%.Resolver,java.lang%.String,short)").
before_calls("DNS%.dns#init(java.lang%.String)","DNS%.Resolver#setDefaultResolver(java.lang%.String)").
before_calls("DNS%.dns#longSectionString(int)","java.lang%.Byte#<init>(byte)").
before_calls("DNS%.dns#longSectionString(int)","java.lang%.Integer#<init>(int)").
before_calls("DNS%.dns#longSectionString(int)","java.lang%.Integer#toString()").
before_calls("DNS%.dns#longSectionString(int)","java.util%.Hashtable#get(java.lang%.Object)").
before_calls("DNS%.dns#opcodeString(int)","java.lang%.Byte#<init>(byte)").
before_calls("DNS%.dns#opcodeString(int)","java.lang%.Integer#<init>(int)").
before_calls("DNS%.dns#opcodeString(int)","java.lang%.Integer#toString()").
before_calls("DNS%.dns#opcodeString(int)","java.util%.Hashtable#get(java.lang%.Object)").
before_calls("DNS%.dns#put2(java.util%.Hashtable,java.lang%.Object,java.lang%.Object)","java.util%.Hashtable#put(java.lang%.Object,java.lang%.Object)").
before_calls("DNS%.dns#rcodeString(int)","java.lang%.Byte#<init>(byte)").
before_calls("DNS%.dns#rcodeString(int)","java.lang%.Integer#<init>(int)").
before_calls("DNS%.dns#rcodeString(int)","java.lang%.Integer#toString()").
before_calls("DNS%.dns#rcodeString(int)","java.util%.Hashtable#get(java.lang%.Object)").
before_calls("DNS%.dns#rcodeValue(java.lang%.String)","java.lang%.Byte#byteValue()").
before_calls("DNS%.dns#rcodeValue(java.lang%.String)","java.lang%.Byte#parseByte(java.lang%.String)").
before_calls("DNS%.dns#rcodeValue(java.lang%.String)","java.lang%.String#toUpperCase()").
before_calls("DNS%.dns#rcodeValue(java.lang%.String)","java.util%.Hashtable#get(java.lang%.Object)").
before_calls("DNS%.dns#sectionString(int)","java.lang%.Byte#<init>(byte)").
before_calls("DNS%.dns#sectionString(int)","java.lang%.Integer#<init>(int)").
before_calls("DNS%.dns#sectionString(int)","java.lang%.Integer#toString()").
before_calls("DNS%.dns#sectionString(int)","java.util%.Hashtable#get(java.lang%.Object)").
before_calls("DNS%.dns#sectionValue(java.lang%.String)","java.lang%.Byte#byteValue()").
before_calls("DNS%.dns#sectionValue(java.lang%.String)","java.lang%.Byte#parseByte(java.lang%.String)").
before_calls("DNS%.dns#sectionValue(java.lang%.String)","java.lang%.String#toLowerCase()").
before_calls("DNS%.dns#sectionValue(java.lang%.String)","java.util%.Hashtable#get(java.lang%.Object)").
before_calls("DNS%.dns#typeString(int)","java.lang%.Integer#<init>(int)").
before_calls("DNS%.dns#typeString(int)","java.lang%.Integer#toString()").
before_calls("DNS%.dns#typeString(int)","java.lang%.Short#<init>(short)").
before_calls("DNS%.dns#typeString(int)","java.util%.Hashtable#get(java.lang%.Object)").
before_calls("DNS%.dns#typeValue(java.lang%.String)","java.lang%.Short#parseShort(java.lang%.String)").
before_calls("DNS%.dns#typeValue(java.lang%.String)","java.lang%.Short#shortValue()").
before_calls("DNS%.dns#typeValue(java.lang%.String)","java.lang%.String#toUpperCase()").
before_calls("DNS%.dns#typeValue(java.lang%.String)","java.util%.Hashtable#get(java.lang%.Object)").
before_calls("DNS.utils%.CountedDataInputStream#<init>(java.io%.InputStream)","java.io%.DataInputStream#<init>(java.io%.InputStream)").
before_calls("DNS.utils%.CountedDataInputStream#read(byte[])","java.io%.DataInputStream#readFully(byte[])").
before_calls("DNS.utils%.CountedDataInputStream#readByte()","java.io%.DataInputStream#readByte()").
before_calls("DNS.utils%.CountedDataInputStream#readInt()","java.io%.DataInputStream#readInt()").
before_calls("DNS.utils%.CountedDataInputStream#readLong()","java.io%.DataInputStream#readLong()").
before_calls("DNS.utils%.CountedDataInputStream#readShort()","java.io%.DataInputStream#readShort()").
before_calls("DNS.utils%.CountedDataInputStream#readString()","java.io%.DataInputStream#readByte()").
before_calls("DNS.utils%.CountedDataInputStream#readString()","java.io%.DataInputStream#readFully(byte[])").
before_calls("DNS.utils%.CountedDataInputStream#readString()","java.lang%.String#<init>(byte[])").
before_calls("DNS.utils%.CountedDataInputStream#readUnsignedByte()","java.io%.DataInputStream#readUnsignedByte()").
before_calls("DNS.utils%.CountedDataInputStream#readUnsignedShort()","java.io%.DataInputStream#readUnsignedShort()").
before_calls("DNS.utils%.CountedDataInputStream#skipBytes(int)","java.io%.DataInputStream#skipBytes(int)").
before_calls("DNS.utils%.CountedDataOutputStream#<init>(java.io%.OutputStream)","java.io%.DataOutputStream#<init>(java.io%.OutputStream)").
before_calls("DNS.utils%.CountedDataOutputStream#write(byte[])","java.io%.FilterOutputStream#write(byte[])").
before_calls("DNS.utils%.CountedDataOutputStream#writeByte(int)","java.io%.DataOutputStream#writeByte(int)").
before_calls("DNS.utils%.CountedDataOutputStream#writeInt(int)","java.io%.DataOutputStream#writeInt(int)").
before_calls("DNS.utils%.CountedDataOutputStream#writeLong(long)","java.io%.DataOutputStream#writeLong(long)").
before_calls("DNS.utils%.CountedDataOutputStream#writeShort(int)","java.io%.DataOutputStream#writeShort(int)").
before_calls("DNS.utils%.CountedDataOutputStream#writeString(java.lang%.String)","java.io%.DataOutputStream#writeByte(int)").
before_calls("DNS.utils%.CountedDataOutputStream#writeString(java.lang%.String)","java.io%.FilterOutputStream#write(byte[])").
before_calls("DNS.utils%.CountedDataOutputStream#writeString(java.lang%.String)","java.lang%.String#getBytes()").
before_calls("DNS.utils%.base16#fromString(java.lang%.String)","java.io%.ByteArrayOutputStream#<init>()").
before_calls("DNS.utils%.base16#fromString(java.lang%.String)","java.io%.ByteArrayOutputStream#toByteArray()").
before_calls("DNS.utils%.base16#fromString(java.lang%.String)","java.io%.DataOutputStream#<init>(java.io%.OutputStream)").
before_calls("DNS.utils%.base16#fromString(java.lang%.String)","java.io%.DataOutputStream#writeByte(int)").
before_calls("DNS.utils%.base16#fromString(java.lang%.String)","java.lang%.Character#toUpperCase(char)").
before_calls("DNS.utils%.base16#fromString(java.lang%.String)","java.lang%.String#charAt(int)").
before_calls("DNS.utils%.base16#fromString(java.lang%.String)","java.lang%.String#indexOf(int)").
before_calls("DNS.utils%.base16#fromString(java.lang%.String)","java.lang%.String#length()").
before_calls("DNS.utils%.base16#toString(byte[])","java.io%.ByteArrayOutputStream#<init>()").
before_calls("DNS.utils%.base16#toString(byte[])","java.io%.ByteArrayOutputStream#toByteArray()").
before_calls("DNS.utils%.base16#toString(byte[])","java.io%.ByteArrayOutputStream#write(int)").
before_calls("DNS.utils%.base16#toString(byte[])","java.lang%.String#<init>(byte[])").
before_calls("DNS.utils%.base16#toString(byte[])","java.lang%.String#charAt(int)").
before_calls("DNS.utils%.base64#fromString(java.lang%.String)","java.io%.ByteArrayOutputStream#<init>()").
before_calls("DNS.utils%.base64#fromString(java.lang%.String)","java.io%.ByteArrayOutputStream#toByteArray()").
before_calls("DNS.utils%.base64#fromString(java.lang%.String)","java.io%.DataOutputStream#<init>(java.io%.OutputStream)").
before_calls("DNS.utils%.base64#fromString(java.lang%.String)","java.io%.DataOutputStream#writeByte(int)").
before_calls("DNS.utils%.base64#fromString(java.lang%.String)","java.lang%.String#charAt(int)").
before_calls("DNS.utils%.base64#fromString(java.lang%.String)","java.lang%.String#indexOf(int)").
before_calls("DNS.utils%.base64#fromString(java.lang%.String)","java.lang%.String#length()").
before_calls("DNS.utils%.base64#toString(byte[])","java.io%.ByteArrayOutputStream#<init>()").
before_calls("DNS.utils%.base64#toString(byte[])","java.io%.ByteArrayOutputStream#toByteArray()").
before_calls("DNS.utils%.base64#toString(byte[])","java.io%.ByteArrayOutputStream#write(int)").
before_calls("DNS.utils%.base64#toString(byte[])","java.lang%.String#<init>(byte[])").
before_calls("DNS.utils%.base64#toString(byte[])","java.lang%.String#charAt(int)").
before_calls("DNS.utils%.hmacSigner#<init>(byte[])","DNS.utils%.md5#compute(byte[])").
before_calls("DNS.utils%.hmacSigner#<init>(byte[])","java.io%.ByteArrayOutputStream#<init>()").
before_calls("DNS.utils%.hmacSigner#<init>(byte[])","java.io%.OutputStream#write(byte[])").
before_calls("DNS.utils%.hmacSigner#addData(byte[])","java.io%.OutputStream#write(byte[])").
before_calls("DNS.utils%.hmacSigner#addData(byte[],int,int)","java.io%.ByteArrayOutputStream#write(byte[],int,int)").
before_calls("DNS.utils%.hmacSigner#clear()","java.io%.ByteArrayOutputStream#<init>()").
before_calls("DNS.utils%.hmacSigner#clear()","java.io%.OutputStream#write(byte[])").
before_calls("DNS.utils%.hmacSigner#printByteString(java.lang%.String,byte[],int,int)","java.io%.PrintStream#print(java.lang%.String)").
before_calls("DNS.utils%.hmacSigner#printByteString(java.lang%.String,byte[],int,int)","java.io%.PrintStream#println()").
before_calls("DNS.utils%.hmacSigner#printByteString(java.lang%.String,byte[],int,int)","java.lang%.Integer#toHexString(int)").
before_calls("DNS.utils%.hmacSigner#sign()","DNS.utils%.md5#compute(byte[])").
before_calls("DNS.utils%.hmacSigner#sign()","java.io%.ByteArrayOutputStream#<init>()").
before_calls("DNS.utils%.hmacSigner#sign()","java.io%.ByteArrayOutputStream#toByteArray()").
before_calls("DNS.utils%.hmacSigner#sign()","java.io%.OutputStream#write(byte[])").
before_calls("DNS.utils%.hmacSigner#verify(byte[])","DNS.utils%.hmacSigner#byteArrayCompare(byte[],byte[])").
before_calls("DNS.utils%.hmacSigner#verify(byte[])","DNS.utils%.hmacSigner#sign()").
before_calls("DNS.utils%.md5#FF(int,int,int,int,int,int,int)","DNS.utils%.md5#F(int,int,int)").
before_calls("DNS.utils%.md5#FF(int,int,int,int,int,int,int)","DNS.utils%.md5#ROTATE_LEFT(int,int)").
before_calls("DNS.utils%.md5#GG(int,int,int,int,int,int,int)","DNS.utils%.md5#G(int,int,int)").
before_calls("DNS.utils%.md5#GG(int,int,int,int,int,int,int)","DNS.utils%.md5#ROTATE_LEFT(int,int)").
before_calls("DNS.utils%.md5#HH(int,int,int,int,int,int,int)","DNS.utils%.md5#H(int,int,int)").
before_calls("DNS.utils%.md5#HH(int,int,int,int,int,int,int)","DNS.utils%.md5#ROTATE_LEFT(int,int)").
before_calls("DNS.utils%.md5#II(int,int,int,int,int,int,int)","DNS.utils%.md5#I(int,int,int)").
before_calls("DNS.utils%.md5#II(int,int,int,int,int,int,int)","DNS.utils%.md5#ROTATE_LEFT(int,int)").
before_calls("DNS.utils%.md5#compute(byte[])","DNS.utils%.md5#compute(byte[],int,int)").
before_calls("DNS.utils%.md5#compute(byte[],int,int)","DNS.utils%.md5#digest(byte[],int,int,int[])").
before_calls("DNS.utils%.md5#compute(byte[],int,int)","DNS.utils%.md5#encode(int[])").
before_calls("DNS.utils%.md5#compute(byte[],int,int)","DNS.utils%.md5#pad(byte[],int,int)").
before_calls("DNS.utils%.md5#digest(byte[],int,int,int[])","DNS.utils%.md5#FF(int,int,int,int,int,int,int)").
before_calls("DNS.utils%.md5#digest(byte[],int,int,int[])","DNS.utils%.md5#GG(int,int,int,int,int,int,int)").
before_calls("DNS.utils%.md5#digest(byte[],int,int,int[])","DNS.utils%.md5#HH(int,int,int,int,int,int,int)").
before_calls("DNS.utils%.md5#digest(byte[],int,int,int[])","DNS.utils%.md5#II(int,int,int,int,int,int,int)").
before_calls("DNS.utils%.md5#digest(byte[],int,int,int[])","DNS.utils%.md5#decode(byte[],int,int)").
before_calls("DNS.utils%.md5#pad(byte[],int,int)","java.lang%.System#arraycopy(java.lang%.Object,int,java.lang%.Object,int,int)").
before_field("%.dig#_class","_class","%.dig").
before_field("%.dig#name","name","%.dig").
before_field("%.dig#type","type","%.dig").
before_field("%.dnsServer#zcount","zcount","%.dnsServer").
before_field("%.dnsServer#znames","znames","%.dnsServer").
before_field("%.dnsServer#zones","zones","%.dnsServer").
before_field("%.update#ADDITIONAL","ADDITIONAL","%.update").
before_field("%.update#PREREQ","PREREQ","%.update").
before_field("%.update#UPDATE","UPDATE","%.update").
before_field("%.update#ZONE","ZONE","%.update").
before_field("%.update#defaultClass","defaultClass","%.update").
before_field("%.update#defaultTTL","defaultTTL","%.update").
before_field("%.update#origin","origin","%.update").
before_field("%.update#query","query","%.update").
before_field("%.update#res","res","%.update").
before_field("%.update#response","response","%.update").
before_field("%.update#server","server","%.update").
before_field("DNS%.ARecord#address","address","DNS%.ARecord").
before_field("DNS%.CERTRecord#NOAUTH","NOAUTH","DNS%.CERTRecord").
before_field("DNS%.CERTRecord#NOCONF","NOCONF","DNS%.CERTRecord").
before_field("DNS%.CERTRecord#alg","alg","DNS%.CERTRecord").
before_field("DNS%.CERTRecord#cert","cert","DNS%.CERTRecord").
before_field("DNS%.CERTRecord#certType","certType","DNS%.CERTRecord").
before_field("DNS%.CERTRecord#keyTag","keyTag","DNS%.CERTRecord").
before_field("DNS%.Compression#h","h","DNS%.Compression").
before_field("DNS%.FindResolver#server","server","DNS%.FindResolver").
before_field("DNS%.HINFORecord#cpu","cpu","DNS%.HINFORecord").
before_field("DNS%.HINFORecord#os","os","DNS%.HINFORecord").
before_field("DNS%.Header#counts","counts","DNS%.Header").
before_field("DNS%.Header#flags","flags","DNS%.Header").
before_field("DNS%.Header#id","id","DNS%.Header").
before_field("DNS%.Header#opcode","opcode","DNS%.Header").
before_field("DNS%.Header#rcode","rcode","DNS%.Header").
before_field("DNS%.KEYRecord#NOAUTH","NOAUTH","DNS%.KEYRecord").
before_field("DNS%.KEYRecord#NOCONF","NOCONF","DNS%.KEYRecord").
before_field("DNS%.KEYRecord#alg","alg","DNS%.KEYRecord").
before_field("DNS%.KEYRecord#flags","flags","DNS%.KEYRecord").
before_field("DNS%.KEYRecord#key","key","DNS%.KEYRecord").
before_field("DNS%.KEYRecord#proto","proto","DNS%.KEYRecord").
before_field("DNS%.MXRecord#priority","priority","DNS%.MXRecord").
before_field("DNS%.MXRecord#target","target","DNS%.MXRecord").
before_field("DNS%.Message#header","header","DNS%.Message").
before_field("DNS%.Message#sections","sections","DNS%.Message").
before_field("DNS%.Message#size","size","DNS%.Message").
before_field("DNS%.MyStringTokenizer#current","current","DNS%.MyStringTokenizer").
before_field("DNS%.MyStringTokenizer#delim","delim","DNS%.MyStringTokenizer").
before_field("DNS%.MyStringTokenizer#putBack","putBack","DNS%.MyStringTokenizer").
before_field("DNS%.MyStringTokenizer#returnTokens","returnTokens","DNS%.MyStringTokenizer").
before_field("DNS%.MyStringTokenizer#string","string","DNS%.MyStringTokenizer").
before_field("DNS%.NS_CNAME_PTRRecord#target","target","DNS%.NS_CNAME_PTRRecord").
before_field("DNS%.NXTRecord#bitmap","bitmap","DNS%.NXTRecord").
before_field("DNS%.NXTRecord#next","next","DNS%.NXTRecord").
before_field("DNS%.Name#MAXLABELS","MAXLABELS","DNS%.Name").
before_field("DNS%.Name#labels","labels","DNS%.Name").
before_field("DNS%.Name#name","name","DNS%.Name").
before_field("DNS%.Name#root","root","DNS%.Name").
before_field("DNS%.Record#dclass","dclass","DNS%.Record").
before_field("DNS%.Record#name","name","DNS%.Record").
before_field("DNS%.Record#oLength","oLength","DNS%.Record").
before_field("DNS%.Record#ttl","ttl","DNS%.Record").
before_field("DNS%.Record#type","type","DNS%.Record").
before_field("DNS%.Resolver#addr","addr","DNS%.Resolver").
before_field("DNS%.Resolver#defaultResolver","defaultResolver","DNS%.Resolver").
before_field("DNS%.Resolver#port","port","DNS%.Resolver").
before_field("DNS%.Resolver#timeoutValue","timeoutValue","DNS%.Resolver").
before_field("DNS%.Resolver#tsig","tsig","DNS%.Resolver").
before_field("DNS%.Resolver#useEDNS","useEDNS","DNS%.Resolver").
before_field("DNS%.Resolver#useTCP","useTCP","DNS%.Resolver").
before_field("DNS%.SIGRecord#alg","alg","DNS%.SIGRecord").
before_field("DNS%.SIGRecord#covered","covered","DNS%.SIGRecord").
before_field("DNS%.SIGRecord#expire","expire","DNS%.SIGRecord").
before_field("DNS%.SIGRecord#footprint","footprint","DNS%.SIGRecord").
before_field("DNS%.SIGRecord#labels","labels","DNS%.SIGRecord").
before_field("DNS%.SIGRecord#origttl","origttl","DNS%.SIGRecord").
before_field("DNS%.SIGRecord#signature","signature","DNS%.SIGRecord").
before_field("DNS%.SIGRecord#signer","signer","DNS%.SIGRecord").
before_field("DNS%.SIGRecord#timeSigned","timeSigned","DNS%.SIGRecord").
before_field("DNS%.SOARecord#admin","admin","DNS%.SOARecord").
before_field("DNS%.SOARecord#expire","expire","DNS%.SOARecord").
before_field("DNS%.SOARecord#host","host","DNS%.SOARecord").
before_field("DNS%.SOARecord#minimum","minimum","DNS%.SOARecord").
before_field("DNS%.SOARecord#refresh","refresh","DNS%.SOARecord").
before_field("DNS%.SOARecord#retry","retry","DNS%.SOARecord").
before_field("DNS%.SOARecord#serial","serial","DNS%.SOARecord").
before_field("DNS%.SRVRecord#port","port","DNS%.SRVRecord").
before_field("DNS%.SRVRecord#priority","priority","DNS%.SRVRecord").
before_field("DNS%.SRVRecord#target","target","DNS%.SRVRecord").
before_field("DNS%.SRVRecord#weight","weight","DNS%.SRVRecord").
before_field("DNS%.TSIG#axfrSigner","axfrSigner","DNS%.TSIG").
before_field("DNS%.TSIG#key","key","DNS%.TSIG").
before_field("DNS%.TSIG#name","name","DNS%.TSIG").
before_field("DNS%.TSIGRecord#alg","alg","DNS%.TSIGRecord").
before_field("DNS%.TSIGRecord#error","error","DNS%.TSIGRecord").
before_field("DNS%.TSIGRecord#fudge","fudge","DNS%.TSIGRecord").
before_field("DNS%.TSIGRecord#originalID","originalID","DNS%.TSIGRecord").
before_field("DNS%.TSIGRecord#other","other","DNS%.TSIGRecord").
before_field("DNS%.TSIGRecord#signature","signature","DNS%.TSIGRecord").
before_field("DNS%.TSIGRecord#timeSigned","timeSigned","DNS%.TSIGRecord").
before_field("DNS%.TXTRecord#strings","strings","DNS%.TXTRecord").
before_field("DNS%.UNKRecord#data","data","DNS%.UNKRecord").
before_field("DNS%.Zone#data","data","DNS%.Zone").
before_field("DNS%.Zone#origin","origin","DNS%.Zone").
before_field("DNS%.dns#A","A","DNS%.dns").
before_field("DNS%.dns#AA","AA","DNS%.dns").
before_field("DNS%.dns#AAAA","AAAA","DNS%.dns").
before_field("DNS%.dns#AD","AD","DNS%.dns").
before_field("DNS%.dns#ADDITIONAL","ADDITIONAL","DNS%.dns").
before_field("DNS%.dns#AFSDB","AFSDB","DNS%.dns").
before_field("DNS%.dns#ANSWER","ANSWER","DNS%.dns").
before_field("DNS%.dns#ANY","ANY","DNS%.dns").
before_field("DNS%.dns#ATMA","ATMA","DNS%.dns").
before_field("DNS%.dns#AUTHORITY","AUTHORITY","DNS%.dns").
before_field("DNS%.dns#AXFR","AXFR","DNS%.dns").
before_field("DNS%.dns#BADID","BADID","DNS%.dns").
before_field("DNS%.dns#BADKEY","BADKEY","DNS%.dns").
before_field("DNS%.dns#BADSIG","BADSIG","DNS%.dns").
before_field("DNS%.dns#BADTIME","BADTIME","DNS%.dns").
before_field("DNS%.dns#CD","CD","DNS%.dns").
before_field("DNS%.dns#CERT","CERT","DNS%.dns").
before_field("DNS%.dns#CHAOS","CHAOS","DNS%.dns").
before_field("DNS%.dns#CNAME","CNAME","DNS%.dns").
before_field("DNS%.dns#EID","EID","DNS%.dns").
before_field("DNS%.dns#FORMERR","FORMERR","DNS%.dns").
before_field("DNS%.dns#GPOS","GPOS","DNS%.dns").
before_field("DNS%.dns#HESIOD","HESIOD","DNS%.dns").
before_field("DNS%.dns#HINFO","HINFO","DNS%.dns").
before_field("DNS%.dns#HMAC","HMAC","DNS%.dns").
before_field("DNS%.dns#IN","IN","DNS%.dns").
before_field("DNS%.dns#ISDN","ISDN","DNS%.dns").
before_field("DNS%.dns#IXFR","IXFR","DNS%.dns").
before_field("DNS%.dns#KEY","KEY","DNS%.dns").
before_field("DNS%.dns#LOC","LOC","DNS%.dns").
before_field("DNS%.dns#MAILA","MAILA","DNS%.dns").
before_field("DNS%.dns#MAILB","MAILB","DNS%.dns").
before_field("DNS%.dns#MB","MB","DNS%.dns").
before_field("DNS%.dns#MD","MD","DNS%.dns").
before_field("DNS%.dns#MF","MF","DNS%.dns").
before_field("DNS%.dns#MG","MG","DNS%.dns").
before_field("DNS%.dns#MINFO","MINFO","DNS%.dns").
before_field("DNS%.dns#MR","MR","DNS%.dns").
before_field("DNS%.dns#MX","MX","DNS%.dns").
before_field("DNS%.dns#NAPTR","NAPTR","DNS%.dns").
before_field("DNS%.dns#NIMLOC","NIMLOC","DNS%.dns").
before_field("DNS%.dns#NOERROR","NOERROR","DNS%.dns").
before_field("DNS%.dns#NONE","NONE","DNS%.dns").
before_field("DNS%.dns#NOTAUTH","NOTAUTH","DNS%.dns").
before_field("DNS%.dns#NOTIFY","NOTIFY","DNS%.dns").
before_field("DNS%.dns#NOTIMPL","NOTIMPL","DNS%.dns").
before_field("DNS%.dns#NOTZONE","NOTZONE","DNS%.dns").
before_field("DNS%.dns#NS","NS","DNS%.dns").
before_field("DNS%.dns#NSAP","NSAP","DNS%.dns").
before_field("DNS%.dns#NSAP_PTR","NSAP_PTR","DNS%.dns").
before_field("DNS%.dns#NULL","NULL","DNS%.dns").
before_field("DNS%.dns#NXDOMAIN","NXDOMAIN","DNS%.dns").
before_field("DNS%.dns#NXRRSET","NXRRSET","DNS%.dns").
before_field("DNS%.dns#NXT","NXT","DNS%.dns").
before_field("DNS%.dns#OPT","OPT","DNS%.dns").
before_field("DNS%.dns#PORT","PORT","DNS%.dns").
before_field("DNS%.dns#PTR","PTR","DNS%.dns").
before_field("DNS%.dns#PX","PX","DNS%.dns").
before_field("DNS%.dns#QR","QR","DNS%.dns").
before_field("DNS%.dns#QUERY","QUERY","DNS%.dns").
before_field("DNS%.dns#QUESTION","QUESTION","DNS%.dns").
before_field("DNS%.dns#RA","RA","DNS%.dns").
before_field("DNS%.dns#RD","RD","DNS%.dns").
before_field("DNS%.dns#REFUSED","REFUSED","DNS%.dns").
before_field("DNS%.dns#RP","RP","DNS%.dns").
before_field("DNS%.dns#RT","RT","DNS%.dns").
before_field("DNS%.dns#SERVFAIL","SERVFAIL","DNS%.dns").
before_field("DNS%.dns#SIG","SIG","DNS%.dns").
before_field("DNS%.dns#SOA","SOA","DNS%.dns").
before_field("DNS%.dns#SRV","SRV","DNS%.dns").
before_field("DNS%.dns#TC","TC","DNS%.dns").
before_field("DNS%.dns#TSIG","TSIG","DNS%.dns").
before_field("DNS%.dns#TXT","TXT","DNS%.dns").
before_field("DNS%.dns#UPDATE","UPDATE","DNS%.dns").
before_field("DNS%.dns#WKS","WKS","DNS%.dns").
before_field("DNS%.dns#X25","X25","DNS%.dns").
before_field("DNS%.dns#YXDOMAIN","YXDOMAIN","DNS%.dns").
before_field("DNS%.dns#YXRRSET","YXRRSET","DNS%.dns").
before_field("DNS%.dns#_res","_res","DNS%.dns").
before_field("DNS%.dns#classes","classes","DNS%.dns").
before_field("DNS%.dns#flags","flags","DNS%.dns").
before_field("DNS%.dns#longSections","longSections","DNS%.dns").
before_field("DNS%.dns#opcodes","opcodes","DNS%.dns").
before_field("DNS%.dns#rcodes","rcodes","DNS%.dns").
before_field("DNS%.dns#sections","sections","DNS%.dns").
before_field("DNS%.dns#types","types","DNS%.dns").
before_field("DNS.utils%.CountedDataInputStream#counter","counter","DNS.utils%.CountedDataInputStream").
before_field("DNS.utils%.CountedDataInputStream#in","in","DNS.utils%.CountedDataInputStream").
before_field("DNS.utils%.CountedDataOutputStream#counter","counter","DNS.utils%.CountedDataOutputStream").
before_field("DNS.utils%.CountedDataOutputStream#out","out","DNS.utils%.CountedDataOutputStream").
before_field("DNS.utils%.base16#Base16","Base16","DNS.utils%.base16").
before_field("DNS.utils%.base64#Base64","Base64","DNS.utils%.base64").
before_field("DNS.utils%.hmacSigner#IPAD","IPAD","DNS.utils%.hmacSigner").
before_field("DNS.utils%.hmacSigner#OPAD","OPAD","DNS.utils%.hmacSigner").
before_field("DNS.utils%.hmacSigner#PADLEN","PADLEN","DNS.utils%.hmacSigner").
before_field("DNS.utils%.hmacSigner#bytes","bytes","DNS.utils%.hmacSigner").
before_field("DNS.utils%.hmacSigner#ipad","ipad","DNS.utils%.hmacSigner").
before_field("DNS.utils%.hmacSigner#opad","opad","DNS.utils%.hmacSigner").
before_field("DNS.utils%.md5#S11","S11","DNS.utils%.md5").
before_field("DNS.utils%.md5#S12","S12","DNS.utils%.md5").
before_field("DNS.utils%.md5#S13","S13","DNS.utils%.md5").
before_field("DNS.utils%.md5#S14","S14","DNS.utils%.md5").
before_field("DNS.utils%.md5#S21","S21","DNS.utils%.md5").
before_field("DNS.utils%.md5#S22","S22","DNS.utils%.md5").
before_field("DNS.utils%.md5#S23","S23","DNS.utils%.md5").
before_field("DNS.utils%.md5#S24","S24","DNS.utils%.md5").
before_field("DNS.utils%.md5#S31","S31","DNS.utils%.md5").
before_field("DNS.utils%.md5#S32","S32","DNS.utils%.md5").
before_field("DNS.utils%.md5#S33","S33","DNS.utils%.md5").
before_field("DNS.utils%.md5#S34","S34","DNS.utils%.md5").
before_field("DNS.utils%.md5#S41","S41","DNS.utils%.md5").
before_field("DNS.utils%.md5#S42","S42","DNS.utils%.md5").
before_field("DNS.utils%.md5#S43","S43","DNS.utils%.md5").
before_field("DNS.utils%.md5#S44","S44","DNS.utils%.md5").
before_fieldoftype("%.dig#_class","short").
before_fieldoftype("%.dig#name","DNS%.Name").
before_fieldoftype("%.dig#type","short").
before_fieldoftype("%.dnsServer#zcount","int").
before_fieldoftype("%.dnsServer#znames","java.util%.Hashtable").
before_fieldoftype("%.dnsServer#zones","DNS%.Zone[]").
before_fieldoftype("%.update#ADDITIONAL","int").
before_fieldoftype("%.update#PREREQ","int").
before_fieldoftype("%.update#UPDATE","int").
before_fieldoftype("%.update#ZONE","int").
before_fieldoftype("%.update#defaultClass","short").
before_fieldoftype("%.update#defaultTTL","int").
before_fieldoftype("%.update#origin","DNS%.Name").
before_fieldoftype("%.update#query","DNS%.Message").
before_fieldoftype("%.update#res","DNS%.Resolver").
before_fieldoftype("%.update#response","DNS%.Message").
before_fieldoftype("%.update#server","java.lang%.String").
before_fieldoftype("DNS%.ARecord#address","java.net%.InetAddress").
before_fieldoftype("DNS%.CERTRecord#NOAUTH","int").
before_fieldoftype("DNS%.CERTRecord#NOCONF","int").
before_fieldoftype("DNS%.CERTRecord#alg","byte").
before_fieldoftype("DNS%.CERTRecord#cert","byte[]").
before_fieldoftype("DNS%.CERTRecord#certType","short").
before_fieldoftype("DNS%.CERTRecord#keyTag","short").
before_fieldoftype("DNS%.Compression#h","java.util%.Hashtable").
before_fieldoftype("DNS%.FindResolver#server","java.lang%.String").
before_fieldoftype("DNS%.HINFORecord#cpu","java.lang%.String").
before_fieldoftype("DNS%.HINFORecord#os","java.lang%.String").
before_fieldoftype("DNS%.Header#counts","short[]").
before_fieldoftype("DNS%.Header#flags","boolean[]").
before_fieldoftype("DNS%.Header#id","int").
before_fieldoftype("DNS%.Header#opcode","byte").
before_fieldoftype("DNS%.Header#rcode","byte").
before_fieldoftype("DNS%.KEYRecord#NOAUTH","int").
before_fieldoftype("DNS%.KEYRecord#NOCONF","int").
before_fieldoftype("DNS%.KEYRecord#alg","byte").
before_fieldoftype("DNS%.KEYRecord#flags","short").
before_fieldoftype("DNS%.KEYRecord#key","byte[]").
before_fieldoftype("DNS%.KEYRecord#proto","byte").
before_fieldoftype("DNS%.MXRecord#priority","short").
before_fieldoftype("DNS%.MXRecord#target","DNS%.Name").
before_fieldoftype("DNS%.Message#header","DNS%.Header").
before_fieldoftype("DNS%.Message#sections","java.util%.Vector[]").
before_fieldoftype("DNS%.Message#size","int").
before_fieldoftype("DNS%.MyStringTokenizer#current","int").
before_fieldoftype("DNS%.MyStringTokenizer#delim","java.lang%.String").
before_fieldoftype("DNS%.MyStringTokenizer#putBack","java.lang%.String").
before_fieldoftype("DNS%.MyStringTokenizer#returnTokens","boolean").
before_fieldoftype("DNS%.MyStringTokenizer#string","char[]").
before_fieldoftype("DNS%.NS_CNAME_PTRRecord#target","DNS%.Name").
before_fieldoftype("DNS%.NXTRecord#bitmap","java.util%.BitSet").
before_fieldoftype("DNS%.NXTRecord#next","DNS%.Name").
before_fieldoftype("DNS%.Name#MAXLABELS","int").
before_fieldoftype("DNS%.Name#labels","byte").
before_fieldoftype("DNS%.Name#name","java.lang%.String[]").
before_fieldoftype("DNS%.Name#root","DNS%.Name").
before_fieldoftype("DNS%.Record#dclass","short").
before_fieldoftype("DNS%.Record#name","DNS%.Name").
before_fieldoftype("DNS%.Record#oLength","int").
before_fieldoftype("DNS%.Record#ttl","int").
before_fieldoftype("DNS%.Record#type","short").
before_fieldoftype("DNS%.Resolver#addr","java.net%.InetAddress").
before_fieldoftype("DNS%.Resolver#defaultResolver","java.lang%.String").
before_fieldoftype("DNS%.Resolver#port","int").
before_fieldoftype("DNS%.Resolver#timeoutValue","int").
before_fieldoftype("DNS%.Resolver#tsig","DNS%.TSIG").
before_fieldoftype("DNS%.Resolver#useEDNS","boolean").
before_fieldoftype("DNS%.Resolver#useTCP","boolean").
before_fieldoftype("DNS%.SIGRecord#alg","byte").
before_fieldoftype("DNS%.SIGRecord#covered","short").
before_fieldoftype("DNS%.SIGRecord#expire","java.util%.Date").
before_fieldoftype("DNS%.SIGRecord#footprint","short").
before_fieldoftype("DNS%.SIGRecord#labels","byte").
before_fieldoftype("DNS%.SIGRecord#origttl","int").
before_fieldoftype("DNS%.SIGRecord#signature","byte[]").
before_fieldoftype("DNS%.SIGRecord#signer","DNS%.Name").
before_fieldoftype("DNS%.SIGRecord#timeSigned","java.util%.Date").
before_fieldoftype("DNS%.SOARecord#admin","DNS%.Name").
before_fieldoftype("DNS%.SOARecord#expire","int").
before_fieldoftype("DNS%.SOARecord#host","DNS%.Name").
before_fieldoftype("DNS%.SOARecord#minimum","int").
before_fieldoftype("DNS%.SOARecord#refresh","int").
before_fieldoftype("DNS%.SOARecord#retry","int").
before_fieldoftype("DNS%.SOARecord#serial","int").
before_fieldoftype("DNS%.SRVRecord#port","short").
before_fieldoftype("DNS%.SRVRecord#priority","short").
before_fieldoftype("DNS%.SRVRecord#target","DNS%.Name").
before_fieldoftype("DNS%.SRVRecord#weight","short").
before_fieldoftype("DNS%.TSIG#axfrSigner","DNS.utils%.hmacSigner").
before_fieldoftype("DNS%.TSIG#key","byte[]").
before_fieldoftype("DNS%.TSIG#name","DNS%.Name").
before_fieldoftype("DNS%.TSIGRecord#alg","DNS%.Name").
before_fieldoftype("DNS%.TSIGRecord#error","short").
before_fieldoftype("DNS%.TSIGRecord#fudge","short").
before_fieldoftype("DNS%.TSIGRecord#originalID","int").
before_fieldoftype("DNS%.TSIGRecord#other","byte[]").
before_fieldoftype("DNS%.TSIGRecord#signature","byte[]").
before_fieldoftype("DNS%.TSIGRecord#timeSigned","java.util%.Date").
before_fieldoftype("DNS%.TXTRecord#strings","java.util%.Vector").
before_fieldoftype("DNS%.UNKRecord#data","byte[]").
before_fieldoftype("DNS%.Zone#data","java.util%.Hashtable").
before_fieldoftype("DNS%.Zone#origin","DNS%.Name").
before_fieldoftype("DNS%.dns#A","short").
before_fieldoftype("DNS%.dns#AA","byte").
before_fieldoftype("DNS%.dns#AAAA","short").
before_fieldoftype("DNS%.dns#AD","byte").
before_fieldoftype("DNS%.dns#ADDITIONAL","byte").
before_fieldoftype("DNS%.dns#AFSDB","short").
before_fieldoftype("DNS%.dns#ANSWER","byte").
before_fieldoftype("DNS%.dns#ANY","short").
before_fieldoftype("DNS%.dns#ATMA","short").
before_fieldoftype("DNS%.dns#AUTHORITY","byte").
before_fieldoftype("DNS%.dns#AXFR","short").
before_fieldoftype("DNS%.dns#BADID","byte").
before_fieldoftype("DNS%.dns#BADKEY","byte").
before_fieldoftype("DNS%.dns#BADSIG","byte").
before_fieldoftype("DNS%.dns#BADTIME","byte").
before_fieldoftype("DNS%.dns#CD","byte").
before_fieldoftype("DNS%.dns#CERT","short").
before_fieldoftype("DNS%.dns#CHAOS","short").
before_fieldoftype("DNS%.dns#CNAME","short").
before_fieldoftype("DNS%.dns#EID","short").
before_fieldoftype("DNS%.dns#FORMERR","byte").
before_fieldoftype("DNS%.dns#GPOS","short").
before_fieldoftype("DNS%.dns#HESIOD","short").
before_fieldoftype("DNS%.dns#HINFO","short").
before_fieldoftype("DNS%.dns#HMAC","java.lang%.String").
before_fieldoftype("DNS%.dns#IN","short").
before_fieldoftype("DNS%.dns#ISDN","short").
before_fieldoftype("DNS%.dns#IXFR","short").
before_fieldoftype("DNS%.dns#KEY","short").
before_fieldoftype("DNS%.dns#LOC","short").
before_fieldoftype("DNS%.dns#MAILA","short").
before_fieldoftype("DNS%.dns#MAILB","short").
before_fieldoftype("DNS%.dns#MB","short").
before_fieldoftype("DNS%.dns#MD","short").
before_fieldoftype("DNS%.dns#MF","short").
before_fieldoftype("DNS%.dns#MG","short").
before_fieldoftype("DNS%.dns#MINFO","short").
before_fieldoftype("DNS%.dns#MR","short").
before_fieldoftype("DNS%.dns#MX","short").
before_fieldoftype("DNS%.dns#NAPTR","short").
before_fieldoftype("DNS%.dns#NIMLOC","short").
before_fieldoftype("DNS%.dns#NOERROR","byte").
before_fieldoftype("DNS%.dns#NONE","short").
before_fieldoftype("DNS%.dns#NOTAUTH","byte").
before_fieldoftype("DNS%.dns#NOTIFY","byte").
before_fieldoftype("DNS%.dns#NOTIMPL","byte").
before_fieldoftype("DNS%.dns#NOTZONE","byte").
before_fieldoftype("DNS%.dns#NS","short").
before_fieldoftype("DNS%.dns#NSAP","short").
before_fieldoftype("DNS%.dns#NSAP_PTR","short").
before_fieldoftype("DNS%.dns#NULL","short").
before_fieldoftype("DNS%.dns#NXDOMAIN","byte").
before_fieldoftype("DNS%.dns#NXRRSET","byte").
before_fieldoftype("DNS%.dns#NXT","short").
before_fieldoftype("DNS%.dns#OPT","short").
before_fieldoftype("DNS%.dns#PORT","int").
before_fieldoftype("DNS%.dns#PTR","short").
before_fieldoftype("DNS%.dns#PX","short").
before_fieldoftype("DNS%.dns#QR","byte").
before_fieldoftype("DNS%.dns#QUERY","byte").
before_fieldoftype("DNS%.dns#QUESTION","byte").
before_fieldoftype("DNS%.dns#RA","byte").
before_fieldoftype("DNS%.dns#RD","byte").
before_fieldoftype("DNS%.dns#REFUSED","byte").
before_fieldoftype("DNS%.dns#RP","short").
before_fieldoftype("DNS%.dns#RT","short").
before_fieldoftype("DNS%.dns#SERVFAIL","byte").
before_fieldoftype("DNS%.dns#SIG","short").
before_fieldoftype("DNS%.dns#SOA","short").
before_fieldoftype("DNS%.dns#SRV","short").
before_fieldoftype("DNS%.dns#TC","byte").
before_fieldoftype("DNS%.dns#TSIG","short").
before_fieldoftype("DNS%.dns#TXT","short").
before_fieldoftype("DNS%.dns#UPDATE","byte").
before_fieldoftype("DNS%.dns#WKS","short").
before_fieldoftype("DNS%.dns#X25","short").
before_fieldoftype("DNS%.dns#YXDOMAIN","byte").
before_fieldoftype("DNS%.dns#YXRRSET","byte").
before_fieldoftype("DNS%.dns#_res","DNS%.Resolver").
before_fieldoftype("DNS%.dns#classes","java.util%.Hashtable").
before_fieldoftype("DNS%.dns#flags","java.util%.Hashtable").
before_fieldoftype("DNS%.dns#longSections","java.util%.Hashtable").
before_fieldoftype("DNS%.dns#opcodes","java.util%.Hashtable").
before_fieldoftype("DNS%.dns#rcodes","java.util%.Hashtable").
before_fieldoftype("DNS%.dns#sections","java.util%.Hashtable").
before_fieldoftype("DNS%.dns#types","java.util%.Hashtable").
before_fieldoftype("DNS.utils%.CountedDataInputStream#counter","int").
before_fieldoftype("DNS.utils%.CountedDataInputStream#in","java.io%.DataInputStream").
before_fieldoftype("DNS.utils%.CountedDataOutputStream#counter","int").
before_fieldoftype("DNS.utils%.CountedDataOutputStream#out","java.io%.DataOutputStream").
before_fieldoftype("DNS.utils%.base16#Base16","java.lang%.String").
before_fieldoftype("DNS.utils%.base64#Base64","java.lang%.String").
before_fieldoftype("DNS.utils%.hmacSigner#IPAD","byte").
before_fieldoftype("DNS.utils%.hmacSigner#OPAD","byte").
before_fieldoftype("DNS.utils%.hmacSigner#PADLEN","byte").
before_fieldoftype("DNS.utils%.hmacSigner#bytes","java.io%.ByteArrayOutputStream").
before_fieldoftype("DNS.utils%.hmacSigner#ipad","byte[]").
before_fieldoftype("DNS.utils%.hmacSigner#opad","byte[]").
before_fieldoftype("DNS.utils%.md5#S11","int").
before_fieldoftype("DNS.utils%.md5#S12","int").
before_fieldoftype("DNS.utils%.md5#S13","int").
before_fieldoftype("DNS.utils%.md5#S14","int").
before_fieldoftype("DNS.utils%.md5#S21","int").
before_fieldoftype("DNS.utils%.md5#S22","int").
before_fieldoftype("DNS.utils%.md5#S23","int").
before_fieldoftype("DNS.utils%.md5#S24","int").
before_fieldoftype("DNS.utils%.md5#S31","int").
before_fieldoftype("DNS.utils%.md5#S32","int").
before_fieldoftype("DNS.utils%.md5#S33","int").
before_fieldoftype("DNS.utils%.md5#S34","int").
before_fieldoftype("DNS.utils%.md5#S41","int").
before_fieldoftype("DNS.utils%.md5#S42","int").
before_fieldoftype("DNS.utils%.md5#S43","int").
before_fieldoftype("DNS.utils%.md5#S44","int").
before_inheritedfield("dclass","DNS%.Record","DNS%.ARecord").
before_inheritedfield("dclass","DNS%.Record","DNS%.CERTRecord").
before_inheritedfield("dclass","DNS%.Record","DNS%.CNAMERecord").
before_inheritedfield("dclass","DNS%.Record","DNS%.HINFORecord").
before_inheritedfield("dclass","DNS%.Record","DNS%.KEYRecord").
before_inheritedfield("dclass","DNS%.Record","DNS%.MXRecord").
before_inheritedfield("dclass","DNS%.Record","DNS%.NSRecord").
before_inheritedfield("dclass","DNS%.Record","DNS%.NS_CNAME_PTRRecord").
before_inheritedfield("dclass","DNS%.Record","DNS%.NXTRecord").
before_inheritedfield("dclass","DNS%.Record","DNS%.OPTRecord").
before_inheritedfield("dclass","DNS%.Record","DNS%.PTRRecord").
before_inheritedfield("dclass","DNS%.Record","DNS%.SIGRecord").
before_inheritedfield("dclass","DNS%.Record","DNS%.SOARecord").
before_inheritedfield("dclass","DNS%.Record","DNS%.SRVRecord").
before_inheritedfield("dclass","DNS%.Record","DNS%.TSIGRecord").
before_inheritedfield("dclass","DNS%.Record","DNS%.TXTRecord").
before_inheritedfield("dclass","DNS%.Record","DNS%.UNKRecord").
before_inheritedfield("name","DNS%.Record","DNS%.ARecord").
before_inheritedfield("name","DNS%.Record","DNS%.CERTRecord").
before_inheritedfield("name","DNS%.Record","DNS%.CNAMERecord").
before_inheritedfield("name","DNS%.Record","DNS%.HINFORecord").
before_inheritedfield("name","DNS%.Record","DNS%.KEYRecord").
before_inheritedfield("name","DNS%.Record","DNS%.MXRecord").
before_inheritedfield("name","DNS%.Record","DNS%.NSRecord").
before_inheritedfield("name","DNS%.Record","DNS%.NS_CNAME_PTRRecord").
before_inheritedfield("name","DNS%.Record","DNS%.NXTRecord").
before_inheritedfield("name","DNS%.Record","DNS%.OPTRecord").
before_inheritedfield("name","DNS%.Record","DNS%.PTRRecord").
before_inheritedfield("name","DNS%.Record","DNS%.SIGRecord").
before_inheritedfield("name","DNS%.Record","DNS%.SOARecord").
before_inheritedfield("name","DNS%.Record","DNS%.SRVRecord").
before_inheritedfield("name","DNS%.Record","DNS%.TSIGRecord").
before_inheritedfield("name","DNS%.Record","DNS%.TXTRecord").
before_inheritedfield("name","DNS%.Record","DNS%.UNKRecord").
before_inheritedfield("oLength","DNS%.Record","DNS%.ARecord").
before_inheritedfield("oLength","DNS%.Record","DNS%.CERTRecord").
before_inheritedfield("oLength","DNS%.Record","DNS%.CNAMERecord").
before_inheritedfield("oLength","DNS%.Record","DNS%.HINFORecord").
before_inheritedfield("oLength","DNS%.Record","DNS%.KEYRecord").
before_inheritedfield("oLength","DNS%.Record","DNS%.MXRecord").
before_inheritedfield("oLength","DNS%.Record","DNS%.NSRecord").
before_inheritedfield("oLength","DNS%.Record","DNS%.NS_CNAME_PTRRecord").
before_inheritedfield("oLength","DNS%.Record","DNS%.NXTRecord").
before_inheritedfield("oLength","DNS%.Record","DNS%.OPTRecord").
before_inheritedfield("oLength","DNS%.Record","DNS%.PTRRecord").
before_inheritedfield("oLength","DNS%.Record","DNS%.SIGRecord").
before_inheritedfield("oLength","DNS%.Record","DNS%.SOARecord").
before_inheritedfield("oLength","DNS%.Record","DNS%.SRVRecord").
before_inheritedfield("oLength","DNS%.Record","DNS%.TSIGRecord").
before_inheritedfield("oLength","DNS%.Record","DNS%.TXTRecord").
before_inheritedfield("oLength","DNS%.Record","DNS%.UNKRecord").
before_inheritedfield("target","DNS%.NS_CNAME_PTRRecord","DNS%.CNAMERecord").
before_inheritedfield("target","DNS%.NS_CNAME_PTRRecord","DNS%.NSRecord").
before_inheritedfield("target","DNS%.NS_CNAME_PTRRecord","DNS%.PTRRecord").
before_inheritedfield("ttl","DNS%.Record","DNS%.ARecord").
before_inheritedfield("ttl","DNS%.Record","DNS%.CERTRecord").
before_inheritedfield("ttl","DNS%.Record","DNS%.CNAMERecord").
before_inheritedfield("ttl","DNS%.Record","DNS%.HINFORecord").
before_inheritedfield("ttl","DNS%.Record","DNS%.KEYRecord").
before_inheritedfield("ttl","DNS%.Record","DNS%.MXRecord").
before_inheritedfield("ttl","DNS%.Record","DNS%.NSRecord").
before_inheritedfield("ttl","DNS%.Record","DNS%.NS_CNAME_PTRRecord").
before_inheritedfield("ttl","DNS%.Record","DNS%.NXTRecord").
before_inheritedfield("ttl","DNS%.Record","DNS%.OPTRecord").
before_inheritedfield("ttl","DNS%.Record","DNS%.PTRRecord").
before_inheritedfield("ttl","DNS%.Record","DNS%.SIGRecord").
before_inheritedfield("ttl","DNS%.Record","DNS%.SOARecord").
before_inheritedfield("ttl","DNS%.Record","DNS%.SRVRecord").
before_inheritedfield("ttl","DNS%.Record","DNS%.TSIGRecord").
before_inheritedfield("ttl","DNS%.Record","DNS%.TXTRecord").
before_inheritedfield("ttl","DNS%.Record","DNS%.UNKRecord").
before_inheritedfield("type","DNS%.Record","DNS%.ARecord").
before_inheritedfield("type","DNS%.Record","DNS%.CERTRecord").
before_inheritedfield("type","DNS%.Record","DNS%.CNAMERecord").
before_inheritedfield("type","DNS%.Record","DNS%.HINFORecord").
before_inheritedfield("type","DNS%.Record","DNS%.KEYRecord").
before_inheritedfield("type","DNS%.Record","DNS%.MXRecord").
before_inheritedfield("type","DNS%.Record","DNS%.NSRecord").
before_inheritedfield("type","DNS%.Record","DNS%.NS_CNAME_PTRRecord").
before_inheritedfield("type","DNS%.Record","DNS%.NXTRecord").
before_inheritedfield("type","DNS%.Record","DNS%.OPTRecord").
before_inheritedfield("type","DNS%.Record","DNS%.PTRRecord").
before_inheritedfield("type","DNS%.Record","DNS%.SIGRecord").
before_inheritedfield("type","DNS%.Record","DNS%.SOARecord").
before_inheritedfield("type","DNS%.Record","DNS%.SRVRecord").
before_inheritedfield("type","DNS%.Record","DNS%.TSIGRecord").
before_inheritedfield("type","DNS%.Record","DNS%.TXTRecord").
before_inheritedfield("type","DNS%.Record","DNS%.UNKRecord").
before_method("%.dig#<init>()","<init>()","%.dig").
before_method("%.dig#doAXFR(DNS%.Message,DNS%.Resolver)","doAXFR(DNS%.Message,DNS%.Resolver)","%.dig").
before_method("%.dig#doQuery(DNS%.Message,DNS%.Resolver)","doQuery(DNS%.Message,DNS%.Resolver)","%.dig").
before_method("%.dig#main(java.lang%.String[])","main(java.lang%.String[])","%.dig").
before_method("%.dig#usage()","usage()","%.dig").
before_method("%.dnsServer#1#<init>()","<init>()","%.dnsServer#1").
before_method("%.dnsServer#1#run()","run()","%.dnsServer#1").
before_method("%.dnsServer#2#<init>()","<init>()","%.dnsServer#2").
before_method("%.dnsServer#2#run()","run()","%.dnsServer#2").
before_method("%.dnsServer#<init>()","<init>()","%.dnsServer").
before_method("%.dnsServer#addTCP(short)","addTCP(short)","%.dnsServer").
before_method("%.dnsServer#addUDP(short)","addUDP(short)","%.dnsServer").
before_method("%.dnsServer#addZone(java.lang%.String)","addZone(java.lang%.String)","%.dnsServer").
before_method("%.dnsServer#findBestZone(DNS%.Name)","findBestZone(DNS%.Name)","%.dnsServer").
before_method("%.dnsServer#generateReply(DNS%.Message)","generateReply(DNS%.Message)","%.dnsServer").
before_method("%.dnsServer#main(java.lang%.String[])","main(java.lang%.String[])","%.dnsServer").
before_method("%.dnsServer#serveTCP(short)","serveTCP(short)","%.dnsServer").
before_method("%.dnsServer#serveUDP(short)","serveUDP(short)","%.dnsServer").
before_method("%.update#<init>(java.io%.InputStream)","<init>(java.io%.InputStream)","%.update").
before_method("%.update#doAdd(DNS%.MyStringTokenizer)","doAdd(DNS%.MyStringTokenizer)","%.update").
before_method("%.update#doAssert(DNS%.MyStringTokenizer)","doAssert(DNS%.MyStringTokenizer)","%.update").
before_method("%.update#doDelete(DNS%.MyStringTokenizer)","doDelete(DNS%.MyStringTokenizer)","%.update").
before_method("%.update#doFile(DNS%.MyStringTokenizer,java.util%.Vector)","doFile(DNS%.MyStringTokenizer,java.util%.Vector)","%.update").
before_method("%.update#doGlue(DNS%.MyStringTokenizer)","doGlue(DNS%.MyStringTokenizer)","%.update").
before_method("%.update#doProhibit(DNS%.MyStringTokenizer)","doProhibit(DNS%.MyStringTokenizer)","%.update").
before_method("%.update#doQuery(DNS%.MyStringTokenizer)","doQuery(DNS%.MyStringTokenizer)","%.update").
before_method("%.update#doRequire(DNS%.MyStringTokenizer)","doRequire(DNS%.MyStringTokenizer)","%.update").
before_method("%.update#help(java.lang%.String)","help(java.lang%.String)","%.update").
before_method("%.update#helpAttributes()","helpAttributes()","%.update").
before_method("%.update#helpData()","helpData()","%.update").
before_method("%.update#helpOperations()","helpOperations()","%.update").
before_method("%.update#helpResolver()","helpResolver()","%.update").
before_method("%.update#main(java.lang%.String[])","main(java.lang%.String[])","%.update").
before_method("%.update#parseName(DNS%.MyStringTokenizer,short)","parseName(DNS%.MyStringTokenizer,short)","%.update").
before_method("%.update#parseRR(DNS%.MyStringTokenizer,short,int)","parseRR(DNS%.MyStringTokenizer,short,int)","%.update").
before_method("%.update#parseSet(DNS%.MyStringTokenizer,short)","parseSet(DNS%.MyStringTokenizer,short)","%.update").
before_method("%.update#sendUpdate()","sendUpdate()","%.update").
before_method("DNS%.ARecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)","<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)","DNS%.ARecord").
before_method("DNS%.ARecord#<init>(DNS%.Name,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)","<init>(DNS%.Name,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)","DNS%.ARecord").
before_method("DNS%.ARecord#<init>(DNS%.Name,short,int,java.net%.InetAddress)","<init>(DNS%.Name,short,int,java.net%.InetAddress)","DNS%.ARecord").
before_method("DNS%.ARecord#getAddress()","getAddress()","DNS%.ARecord").
before_method("DNS%.ARecord#rrToWire(DNS%.Compression)","rrToWire(DNS%.Compression)","DNS%.ARecord").
before_method("DNS%.ARecord#toString()","toString()","DNS%.ARecord").
before_method("DNS%.CERTRecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)","<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)","DNS%.CERTRecord").
before_method("DNS%.CERTRecord#<init>(DNS%.Name,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)","<init>(DNS%.Name,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)","DNS%.CERTRecord").
before_method("DNS%.CERTRecord#<init>(DNS%.Name,short,int,int,int,int,byte[])","<init>(DNS%.Name,short,int,int,int,int,byte[])","DNS%.CERTRecord").
before_method("DNS%.CERTRecord#getAlgorithm()","getAlgorithm()","DNS%.CERTRecord").
before_method("DNS%.CERTRecord#getCertType()","getCertType()","DNS%.CERTRecord").
before_method("DNS%.CERTRecord#getKeyTag()","getKeyTag()","DNS%.CERTRecord").
before_method("DNS%.CERTRecord#rrToWire(DNS%.Compression)","rrToWire(DNS%.Compression)","DNS%.CERTRecord").
before_method("DNS%.CERTRecord#toString()","toString()","DNS%.CERTRecord").
before_method("DNS%.CNAMERecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)","<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)","DNS%.CNAMERecord").
before_method("DNS%.CNAMERecord#<init>(DNS%.Name,short,int,DNS%.Name)","<init>(DNS%.Name,short,int,DNS%.Name)","DNS%.CNAMERecord").
before_method("DNS%.CNAMERecord#<init>(DNS%.Name,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)","<init>(DNS%.Name,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)","DNS%.CNAMERecord").
before_method("DNS%.Compression#<init>()","<init>()","DNS%.Compression").
before_method("DNS%.Compression#add(int,DNS%.Name)","add(int,DNS%.Name)","DNS%.Compression").
before_method("DNS%.Compression#get(DNS%.Name)","get(DNS%.Name)","DNS%.Compression").
before_method("DNS%.Compression#get(int)","get(int)","DNS%.Compression").
before_method("DNS%.EDNS#<init>()","<init>()","DNS%.EDNS").
before_method("DNS%.EDNS#newOPT(int)","newOPT(int)","DNS%.EDNS").
before_method("DNS%.FindResolver#<init>()","<init>()","DNS%.FindResolver").
before_method("DNS%.FindResolver#find()","find()","DNS%.FindResolver").
before_method("DNS%.FindResolver#findProperty()","findProperty()","DNS%.FindResolver").
before_method("DNS%.FindResolver#findUnix()","findUnix()","DNS%.FindResolver").
before_method("DNS%.HINFORecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)","<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)","DNS%.HINFORecord").
before_method("DNS%.HINFORecord#<init>(DNS%.Name,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)","<init>(DNS%.Name,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)","DNS%.HINFORecord").
before_method("DNS%.HINFORecord#<init>(DNS%.Name,short,int,java.lang%.String,java.lang%.String)","<init>(DNS%.Name,short,int,java.lang%.String,java.lang%.String)","DNS%.HINFORecord").
before_method("DNS%.HINFORecord#getCPU()","getCPU()","DNS%.HINFORecord").
before_method("DNS%.HINFORecord#getOS()","getOS()","DNS%.HINFORecord").
before_method("DNS%.HINFORecord#rrToWire(DNS%.Compression)","rrToWire(DNS%.Compression)","DNS%.HINFORecord").
before_method("DNS%.HINFORecord#toString()","toString()","DNS%.HINFORecord").
before_method("DNS%.Header#<init>(DNS.utils%.CountedDataInputStream)","<init>(DNS.utils%.CountedDataInputStream)","DNS%.Header").
before_method("DNS%.Header#<init>(int)","<init>(int)","DNS%.Header").
before_method("DNS%.Header#decCount(int)","decCount(int)","DNS%.Header").
before_method("DNS%.Header#getCount(int)","getCount(int)","DNS%.Header").
before_method("DNS%.Header#getFlag(int)","getFlag(int)","DNS%.Header").
before_method("DNS%.Header#getID()","getID()","DNS%.Header").
before_method("DNS%.Header#getOpcode()","getOpcode()","DNS%.Header").
before_method("DNS%.Header#getRcode()","getRcode()","DNS%.Header").
before_method("DNS%.Header#incCount(int)","incCount(int)","DNS%.Header").
before_method("DNS%.Header#printFlags()","printFlags()","DNS%.Header").
before_method("DNS%.Header#randomID()","randomID()","DNS%.Header").
before_method("DNS%.Header#readFlags(DNS.utils%.CountedDataInputStream)","readFlags(DNS.utils%.CountedDataInputStream)","DNS%.Header").
before_method("DNS%.Header#setCount(int,short)","setCount(int,short)","DNS%.Header").
before_method("DNS%.Header#setFlag(int)","setFlag(int)","DNS%.Header").
before_method("DNS%.Header#setID(int)","setID(int)","DNS%.Header").
before_method("DNS%.Header#setOpcode(byte)","setOpcode(byte)","DNS%.Header").
before_method("DNS%.Header#setRcode(byte)","setRcode(byte)","DNS%.Header").
before_method("DNS%.Header#toString()","toString()","DNS%.Header").
before_method("DNS%.Header#toWire()","toWire()","DNS%.Header").
before_method("DNS%.Header#toWire(DNS.utils%.CountedDataOutputStream)","toWire(DNS.utils%.CountedDataOutputStream)","DNS%.Header").
before_method("DNS%.Header#unsetFlag(int)","unsetFlag(int)","DNS%.Header").
before_method("DNS%.Header#writeFlags(DNS.utils%.CountedDataOutputStream)","writeFlags(DNS.utils%.CountedDataOutputStream)","DNS%.Header").
before_method("DNS%.IO#<init>()","<init>()","DNS%.IO").
before_method("DNS%.IO#formatBase64String(java.lang%.String,int,java.lang%.String,boolean)","formatBase64String(java.lang%.String,int,java.lang%.String,boolean)","DNS%.IO").
before_method("DNS%.IO#readExtendedLine(java.io%.BufferedReader)","readExtendedLine(java.io%.BufferedReader)","DNS%.IO").
before_method("DNS%.KEYRecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)","<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)","DNS%.KEYRecord").
before_method("DNS%.KEYRecord#<init>(DNS%.Name,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)","<init>(DNS%.Name,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)","DNS%.KEYRecord").
before_method("DNS%.KEYRecord#<init>(DNS%.Name,short,int,int,int,int,byte[])","<init>(DNS%.Name,short,int,int,int,int,byte[])","DNS%.KEYRecord").
before_method("DNS%.KEYRecord#getAlgorithm()","getAlgorithm()","DNS%.KEYRecord").
before_method("DNS%.KEYRecord#getFlags()","getFlags()","DNS%.KEYRecord").
before_method("DNS%.KEYRecord#getProtocol()","getProtocol()","DNS%.KEYRecord").
before_method("DNS%.KEYRecord#rrToWire(DNS%.Compression)","rrToWire(DNS%.Compression)","DNS%.KEYRecord").
before_method("DNS%.KEYRecord#toString()","toString()","DNS%.KEYRecord").
before_method("DNS%.MXRecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)","<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)","DNS%.MXRecord").
before_method("DNS%.MXRecord#<init>(DNS%.Name,short,int,int,DNS%.Name)","<init>(DNS%.Name,short,int,int,DNS%.Name)","DNS%.MXRecord").
before_method("DNS%.MXRecord#<init>(DNS%.Name,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)","<init>(DNS%.Name,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)","DNS%.MXRecord").
before_method("DNS%.MXRecord#getPriority()","getPriority()","DNS%.MXRecord").
before_method("DNS%.MXRecord#getTarget()","getTarget()","DNS%.MXRecord").
before_method("DNS%.MXRecord#rrToWire(DNS%.Compression)","rrToWire(DNS%.Compression)","DNS%.MXRecord").
before_method("DNS%.MXRecord#toString()","toString()","DNS%.MXRecord").
before_method("DNS%.Message#<init>()","<init>()","DNS%.Message").
before_method("DNS%.Message#<init>(DNS.utils%.CountedDataInputStream)","<init>(DNS.utils%.CountedDataInputStream)","DNS%.Message").
before_method("DNS%.Message#<init>(byte[])","<init>(byte[])","DNS%.Message").
before_method("DNS%.Message#<init>(int)","<init>(int)","DNS%.Message").
before_method("DNS%.Message#addRecord(int,DNS%.Record)","addRecord(int,DNS%.Record)","DNS%.Message").
before_method("DNS%.Message#getHeader()","getHeader()","DNS%.Message").
before_method("DNS%.Message#getSection(int)","getSection(int)","DNS%.Message").
before_method("DNS%.Message#getTSIG()","getTSIG()","DNS%.Message").
before_method("DNS%.Message#numBytes()","numBytes()","DNS%.Message").
before_method("DNS%.Message#removeRecord(int,DNS%.Record)","removeRecord(int,DNS%.Record)","DNS%.Message").
before_method("DNS%.Message#sectionToString(int)","sectionToString(int)","DNS%.Message").
before_method("DNS%.Message#setHeader(DNS%.Header)","setHeader(DNS%.Header)","DNS%.Message").
before_method("DNS%.Message#toString()","toString()","DNS%.Message").
before_method("DNS%.Message#toWire()","toWire()","DNS%.Message").
before_method("DNS%.Message#toWire(DNS.utils%.CountedDataOutputStream)","toWire(DNS.utils%.CountedDataOutputStream)","DNS%.Message").
before_method("DNS%.Message#toWireCanonical(DNS.utils%.CountedDataOutputStream)","toWireCanonical(DNS.utils%.CountedDataOutputStream)","DNS%.Message").
before_method("DNS%.MyStringTokenizer#<init>(java.lang%.String)","<init>(java.lang%.String)","DNS%.MyStringTokenizer").
before_method("DNS%.MyStringTokenizer#<init>(java.lang%.String,java.lang%.String)","<init>(java.lang%.String,java.lang%.String)","DNS%.MyStringTokenizer").
before_method("DNS%.MyStringTokenizer#<init>(java.lang%.String,java.lang%.String,boolean)","<init>(java.lang%.String,java.lang%.String,boolean)","DNS%.MyStringTokenizer").
before_method("DNS%.MyStringTokenizer#hasMoreDelimiters()","hasMoreDelimiters()","DNS%.MyStringTokenizer").
before_method("DNS%.MyStringTokenizer#hasMoreElements()","hasMoreElements()","DNS%.MyStringTokenizer").
before_method("DNS%.MyStringTokenizer#hasMoreTokens()","hasMoreTokens()","DNS%.MyStringTokenizer").
before_method("DNS%.MyStringTokenizer#isDelim(int)","isDelim(int)","DNS%.MyStringTokenizer").
before_method("DNS%.MyStringTokenizer#main(java.lang%.String[])","main(java.lang%.String[])","DNS%.MyStringTokenizer").
before_method("DNS%.MyStringTokenizer#nextElement()","nextElement()","DNS%.MyStringTokenizer").
before_method("DNS%.MyStringTokenizer#nextToken()","nextToken()","DNS%.MyStringTokenizer").
before_method("DNS%.MyStringTokenizer#putBackToken(java.lang%.String)","putBackToken(java.lang%.String)","DNS%.MyStringTokenizer").
before_method("DNS%.NSRecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)","<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)","DNS%.NSRecord").
before_method("DNS%.NSRecord#<init>(DNS%.Name,short,int,DNS%.Name)","<init>(DNS%.Name,short,int,DNS%.Name)","DNS%.NSRecord").
before_method("DNS%.NSRecord#<init>(DNS%.Name,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)","<init>(DNS%.Name,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)","DNS%.NSRecord").
before_method("DNS%.NS_CNAME_PTRRecord#<init>(DNS%.Name,short,short,int,DNS%.MyStringTokenizer,DNS%.Name)","<init>(DNS%.Name,short,short,int,DNS%.MyStringTokenizer,DNS%.Name)","DNS%.NS_CNAME_PTRRecord").
before_method("DNS%.NS_CNAME_PTRRecord#<init>(DNS%.Name,short,short,int,DNS%.Name)","<init>(DNS%.Name,short,short,int,DNS%.Name)","DNS%.NS_CNAME_PTRRecord").
before_method("DNS%.NS_CNAME_PTRRecord#<init>(DNS%.Name,short,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)","<init>(DNS%.Name,short,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)","DNS%.NS_CNAME_PTRRecord").
before_method("DNS%.NS_CNAME_PTRRecord#getTarget()","getTarget()","DNS%.NS_CNAME_PTRRecord").
before_method("DNS%.NS_CNAME_PTRRecord#rrToWire(DNS%.Compression)","rrToWire(DNS%.Compression)","DNS%.NS_CNAME_PTRRecord").
before_method("DNS%.NS_CNAME_PTRRecord#toString()","toString()","DNS%.NS_CNAME_PTRRecord").
before_method("DNS%.NXTRecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)","<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)","DNS%.NXTRecord").
before_method("DNS%.NXTRecord#<init>(DNS%.Name,short,int,DNS%.Name,java.util%.BitSet)","<init>(DNS%.Name,short,int,DNS%.Name,java.util%.BitSet)","DNS%.NXTRecord").
before_method("DNS%.NXTRecord#<init>(DNS%.Name,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)","<init>(DNS%.Name,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)","DNS%.NXTRecord").
before_method("DNS%.NXTRecord#getBitmap()","getBitmap()","DNS%.NXTRecord").
before_method("DNS%.NXTRecord#getNext()","getNext()","DNS%.NXTRecord").
before_method("DNS%.NXTRecord#rrToWire(DNS%.Compression)","rrToWire(DNS%.Compression)","DNS%.NXTRecord").
before_method("DNS%.NXTRecord#toString()","toString()","DNS%.NXTRecord").
before_method("DNS%.Name#<init>(DNS%.Name,int)","<init>(DNS%.Name,int)","DNS%.Name").
before_method("DNS%.Name#<init>(DNS.utils%.CountedDataInputStream,DNS%.Compression)","<init>(DNS.utils%.CountedDataInputStream,DNS%.Compression)","DNS%.Name").
before_method("DNS%.Name#<init>(java.lang%.String)","<init>(java.lang%.String)","DNS%.Name").
before_method("DNS%.Name#<init>(java.lang%.String,DNS%.Name)","<init>(java.lang%.String,DNS%.Name)","DNS%.Name").
before_method("DNS%.Name#append(DNS%.Name)","append(DNS%.Name)","DNS%.Name").
before_method("DNS%.Name#equals(java.lang%.Object)","equals(java.lang%.Object)","DNS%.Name").
before_method("DNS%.Name#hashCode()","hashCode()","DNS%.Name").
before_method("DNS%.Name#labels()","labels()","DNS%.Name").
before_method("DNS%.Name#length()","length()","DNS%.Name").
before_method("DNS%.Name#toString()","toString()","DNS%.Name").
before_method("DNS%.Name#toWire(DNS.utils%.CountedDataOutputStream,DNS%.Compression)","toWire(DNS.utils%.CountedDataOutputStream,DNS%.Compression)","DNS%.Name").
before_method("DNS%.Name#toWireCanonical(DNS.utils%.CountedDataOutputStream)","toWireCanonical(DNS.utils%.CountedDataOutputStream)","DNS%.Name").
before_method("DNS%.OPTRecord#<init>(DNS%.Name,short,int)","<init>(DNS%.Name,short,int)","DNS%.OPTRecord").
before_method("DNS%.OPTRecord#<init>(DNS%.Name,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)","<init>(DNS%.Name,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)","DNS%.OPTRecord").
before_method("DNS%.OPTRecord#getExtendedRcode()","getExtendedRcode()","DNS%.OPTRecord").
before_method("DNS%.OPTRecord#getPayloadSize()","getPayloadSize()","DNS%.OPTRecord").
before_method("DNS%.OPTRecord#getVersion()","getVersion()","DNS%.OPTRecord").
before_method("DNS%.OPTRecord#rrToWire(DNS%.Compression)","rrToWire(DNS%.Compression)","DNS%.OPTRecord").
before_method("DNS%.OPTRecord#toString()","toString()","DNS%.OPTRecord").
before_method("DNS%.PTRRecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)","<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)","DNS%.PTRRecord").
before_method("DNS%.PTRRecord#<init>(DNS%.Name,short,int,DNS%.Name)","<init>(DNS%.Name,short,int,DNS%.Name)","DNS%.PTRRecord").
before_method("DNS%.PTRRecord#<init>(DNS%.Name,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)","<init>(DNS%.Name,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)","DNS%.PTRRecord").
before_method("DNS%.Record#<init>(DNS%.Name,short,short,int)","<init>(DNS%.Name,short,short,int)","DNS%.Record").
before_method("DNS%.Record#fromString(DNS%.Name,short,short,int,DNS%.MyStringTokenizer,DNS%.Name)","fromString(DNS%.Name,short,short,int,DNS%.MyStringTokenizer,DNS%.Name)","DNS%.Record").
before_method("DNS%.Record#fromWire(DNS.utils%.CountedDataInputStream,int,DNS%.Compression)","fromWire(DNS.utils%.CountedDataInputStream,int,DNS%.Compression)","DNS%.Record").
before_method("DNS%.Record#getDClass()","getDClass()","DNS%.Record").
before_method("DNS%.Record#getName()","getName()","DNS%.Record").
before_method("DNS%.Record#getType()","getType()","DNS%.Record").
before_method("DNS%.Record#newRecord(DNS%.Name,short,short)","newRecord(DNS%.Name,short,short)","DNS%.Record").
before_method("DNS%.Record#newRecord(DNS%.Name,short,short,int)","newRecord(DNS%.Name,short,short,int)","DNS%.Record").
before_method("DNS%.Record#newRecord(DNS%.Name,short,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)","newRecord(DNS%.Name,short,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)","DNS%.Record").
before_method("DNS%.Record#newRecord(DNS%.Name,short,short,int,int,byte[])","newRecord(DNS%.Name,short,short,int,int,byte[])","DNS%.Record").
before_method("DNS%.Record#rrToWire(DNS%.Compression)","rrToWire(DNS%.Compression)","DNS%.Record").
before_method("DNS%.Record#rrToWireCanonical()","rrToWireCanonical()","DNS%.Record").
before_method("DNS%.Record#toString()","toString()","DNS%.Record").
before_method("DNS%.Record#toStringNoData()","toStringNoData()","DNS%.Record").
before_method("DNS%.Record#toWire(DNS.utils%.CountedDataOutputStream,int,DNS%.Compression)","toWire(DNS.utils%.CountedDataOutputStream,int,DNS%.Compression)","DNS%.Record").
before_method("DNS%.Record#toWire(int)","toWire(int)","DNS%.Record").
before_method("DNS%.Record#toWireCanonical(DNS.utils%.CountedDataOutputStream,int)","toWireCanonical(DNS.utils%.CountedDataOutputStream,int)","DNS%.Record").
before_method("DNS%.Resolver#<init>()","<init>()","DNS%.Resolver").
before_method("DNS%.Resolver#<init>(java.lang%.String)","<init>(java.lang%.String)","DNS%.Resolver").
before_method("DNS%.Resolver#send(DNS%.Message)","send(DNS%.Message)","DNS%.Resolver").
before_method("DNS%.Resolver#sendAXFR(DNS%.Message)","sendAXFR(DNS%.Message)","DNS%.Resolver").
before_method("DNS%.Resolver#sendTCP(DNS%.Message,byte[])","sendTCP(DNS%.Message,byte[])","DNS%.Resolver").
before_method("DNS%.Resolver#setDefaultResolver(java.lang%.String)","setDefaultResolver(java.lang%.String)","DNS%.Resolver").
before_method("DNS%.Resolver#setEDNS(boolean)","setEDNS(boolean)","DNS%.Resolver").
before_method("DNS%.Resolver#setPort(int)","setPort(int)","DNS%.Resolver").
before_method("DNS%.Resolver#setTCP(boolean)","setTCP(boolean)","DNS%.Resolver").
before_method("DNS%.Resolver#setTSIGKey(java.lang%.String)","setTSIGKey(java.lang%.String)","DNS%.Resolver").
before_method("DNS%.Resolver#setTSIGKey(java.lang%.String,java.lang%.String)","setTSIGKey(java.lang%.String,java.lang%.String)","DNS%.Resolver").
before_method("DNS%.SIGRecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)","<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)","DNS%.SIGRecord").
before_method("DNS%.SIGRecord#<init>(DNS%.Name,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)","<init>(DNS%.Name,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)","DNS%.SIGRecord").
before_method("DNS%.SIGRecord#<init>(DNS%.Name,short,int,int,int,int,java.util%.Date,java.util%.Date,int,DNS%.Name,byte[])","<init>(DNS%.Name,short,int,int,int,int,java.util%.Date,java.util%.Date,int,DNS%.Name,byte[])","DNS%.SIGRecord").
before_method("DNS%.SIGRecord#formatDate(java.util%.Date)","formatDate(java.util%.Date)","DNS%.SIGRecord").
before_method("DNS%.SIGRecord#parseDate(java.lang%.String)","parseDate(java.lang%.String)","DNS%.SIGRecord").
before_method("DNS%.SIGRecord#rrToWire(DNS%.Compression)","rrToWire(DNS%.Compression)","DNS%.SIGRecord").
before_method("DNS%.SIGRecord#toString()","toString()","DNS%.SIGRecord").
before_method("DNS%.SOARecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)","<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)","DNS%.SOARecord").
before_method("DNS%.SOARecord#<init>(DNS%.Name,short,int,DNS%.Name,DNS%.Name,int,int,int,int,int)","<init>(DNS%.Name,short,int,DNS%.Name,DNS%.Name,int,int,int,int,int)","DNS%.SOARecord").
before_method("DNS%.SOARecord#<init>(DNS%.Name,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)","<init>(DNS%.Name,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)","DNS%.SOARecord").
before_method("DNS%.SOARecord#getAdmin()","getAdmin()","DNS%.SOARecord").
before_method("DNS%.SOARecord#getExpire()","getExpire()","DNS%.SOARecord").
before_method("DNS%.SOARecord#getHost()","getHost()","DNS%.SOARecord").
before_method("DNS%.SOARecord#getMinimum()","getMinimum()","DNS%.SOARecord").
before_method("DNS%.SOARecord#getRefresh()","getRefresh()","DNS%.SOARecord").
before_method("DNS%.SOARecord#getRetry()","getRetry()","DNS%.SOARecord").
before_method("DNS%.SOARecord#getSerial()","getSerial()","DNS%.SOARecord").
before_method("DNS%.SOARecord#rrToWire(DNS%.Compression)","rrToWire(DNS%.Compression)","DNS%.SOARecord").
before_method("DNS%.SOARecord#toString()","toString()","DNS%.SOARecord").
before_method("DNS%.SRVRecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)","<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)","DNS%.SRVRecord").
before_method("DNS%.SRVRecord#<init>(DNS%.Name,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)","<init>(DNS%.Name,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)","DNS%.SRVRecord").
before_method("DNS%.SRVRecord#<init>(DNS%.Name,short,int,int,int,int,DNS%.Name)","<init>(DNS%.Name,short,int,int,int,int,DNS%.Name)","DNS%.SRVRecord").
before_method("DNS%.SRVRecord#getPort()","getPort()","DNS%.SRVRecord").
before_method("DNS%.SRVRecord#getPriority()","getPriority()","DNS%.SRVRecord").
before_method("DNS%.SRVRecord#getTarget()","getTarget()","DNS%.SRVRecord").
before_method("DNS%.SRVRecord#getWeight()","getWeight()","DNS%.SRVRecord").
before_method("DNS%.SRVRecord#rrToWire(DNS%.Compression)","rrToWire(DNS%.Compression)","DNS%.SRVRecord").
before_method("DNS%.SRVRecord#toString()","toString()","DNS%.SRVRecord").
before_method("DNS%.TSIG#<init>(java.lang%.String,byte[])","<init>(java.lang%.String,byte[])","DNS%.TSIG").
before_method("DNS%.TSIG#apply(DNS%.Message)","apply(DNS%.Message)","DNS%.TSIG").
before_method("DNS%.TSIG#verify(DNS%.Message,byte[],DNS%.TSIGRecord)","verify(DNS%.Message,byte[],DNS%.TSIGRecord)","DNS%.TSIG").
before_method("DNS%.TSIG#verifyAXFR(DNS%.Message,byte[],DNS%.TSIGRecord,boolean,boolean)","verifyAXFR(DNS%.Message,byte[],DNS%.TSIGRecord,boolean,boolean)","DNS%.TSIG").
before_method("DNS%.TSIG#verifyAXFRStart()","verifyAXFRStart()","DNS%.TSIG").
before_method("DNS%.TSIGRecord#<init>(DNS%.Name,short,int,DNS%.Name,java.util%.Date,short,byte[],int,short,byte[])","<init>(DNS%.Name,short,int,DNS%.Name,java.util%.Date,short,byte[],int,short,byte[])","DNS%.TSIGRecord").
before_method("DNS%.TSIGRecord#<init>(DNS%.Name,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)","<init>(DNS%.Name,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)","DNS%.TSIGRecord").
before_method("DNS%.TSIGRecord#getAlg()","getAlg()","DNS%.TSIGRecord").
before_method("DNS%.TSIGRecord#getError()","getError()","DNS%.TSIGRecord").
before_method("DNS%.TSIGRecord#getFudge()","getFudge()","DNS%.TSIGRecord").
before_method("DNS%.TSIGRecord#getOriginalID()","getOriginalID()","DNS%.TSIGRecord").
before_method("DNS%.TSIGRecord#getOther()","getOther()","DNS%.TSIGRecord").
before_method("DNS%.TSIGRecord#getSignature()","getSignature()","DNS%.TSIGRecord").
before_method("DNS%.TSIGRecord#getTimeSigned()","getTimeSigned()","DNS%.TSIGRecord").
before_method("DNS%.TSIGRecord#rrToWire(DNS%.Compression)","rrToWire(DNS%.Compression)","DNS%.TSIGRecord").
before_method("DNS%.TSIGRecord#toString()","toString()","DNS%.TSIGRecord").
before_method("DNS%.TXTRecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)","<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)","DNS%.TXTRecord").
before_method("DNS%.TXTRecord#<init>(DNS%.Name,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)","<init>(DNS%.Name,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)","DNS%.TXTRecord").
before_method("DNS%.TXTRecord#<init>(DNS%.Name,short,int,java.lang%.String)","<init>(DNS%.Name,short,int,java.lang%.String)","DNS%.TXTRecord").
before_method("DNS%.TXTRecord#<init>(DNS%.Name,short,int,java.util%.Vector)","<init>(DNS%.Name,short,int,java.util%.Vector)","DNS%.TXTRecord").
before_method("DNS%.TXTRecord#getStrings()","getStrings()","DNS%.TXTRecord").
before_method("DNS%.TXTRecord#rrToWire(DNS%.Compression)","rrToWire(DNS%.Compression)","DNS%.TXTRecord").
before_method("DNS%.TXTRecord#toString()","toString()","DNS%.TXTRecord").
before_method("DNS%.UNKRecord#<init>(DNS%.Name,short,short,int,DNS%.MyStringTokenizer,DNS%.Name)","<init>(DNS%.Name,short,short,int,DNS%.MyStringTokenizer,DNS%.Name)","DNS%.UNKRecord").
before_method("DNS%.UNKRecord#<init>(DNS%.Name,short,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)","<init>(DNS%.Name,short,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)","DNS%.UNKRecord").
before_method("DNS%.UNKRecord#rrToWire(DNS%.Compression)","rrToWire(DNS%.Compression)","DNS%.UNKRecord").
before_method("DNS%.UNKRecord#toString()","toString()","DNS%.UNKRecord").
before_method("DNS%.Zone#<init>(java.lang%.String)","<init>(java.lang%.String)","DNS%.Zone").
before_method("DNS%.Zone#findName(DNS%.Name)","findName(DNS%.Name)","DNS%.Zone").
before_method("DNS%.Zone#getOrigin()","getOrigin()","DNS%.Zone").
before_method("DNS%.Zone#parseOrigin(DNS%.MyStringTokenizer)","parseOrigin(DNS%.MyStringTokenizer)","DNS%.Zone").
before_method("DNS%.Zone#parseRR(DNS%.MyStringTokenizer,boolean,DNS%.Record,DNS%.Name)","parseRR(DNS%.MyStringTokenizer,boolean,DNS%.Record,DNS%.Name)","DNS%.Zone").
before_method("DNS%.dns#<init>()","<init>()","DNS%.dns").
before_method("DNS%.dns#classString(int)","classString(int)","DNS%.dns").
before_method("DNS%.dns#classValue(java.lang%.String)","classValue(java.lang%.String)","DNS%.dns").
before_method("DNS%.dns#flagString(int)","flagString(int)","DNS%.dns").
before_method("DNS%.dns#getRecords(DNS%.Resolver,java.lang%.String,short)","getRecords(DNS%.Resolver,java.lang%.String,short)","DNS%.dns").
before_method("DNS%.dns#getRecords(DNS%.Resolver,java.lang%.String,short,short)","getRecords(DNS%.Resolver,java.lang%.String,short,short)","DNS%.dns").
before_method("DNS%.dns#getRecords(java.lang%.String,short)","getRecords(java.lang%.String,short)","DNS%.dns").
before_method("DNS%.dns#getRecords(java.lang%.String,short,short)","getRecords(java.lang%.String,short,short)","DNS%.dns").
before_method("DNS%.dns#getRecordsByAddress(DNS%.Resolver,java.lang%.String,short)","getRecordsByAddress(DNS%.Resolver,java.lang%.String,short)","DNS%.dns").
before_method("DNS%.dns#getRecordsByAddress(java.lang%.String,short)","getRecordsByAddress(java.lang%.String,short)","DNS%.dns").
before_method("DNS%.dns#init(java.lang%.String)","init(java.lang%.String)","DNS%.dns").
before_method("DNS%.dns#longSectionString(int)","longSectionString(int)","DNS%.dns").
before_method("DNS%.dns#matchType(short,short)","matchType(short,short)","DNS%.dns").
before_method("DNS%.dns#opcodeString(int)","opcodeString(int)","DNS%.dns").
before_method("DNS%.dns#put2(java.util%.Hashtable,java.lang%.Object,java.lang%.Object)","put2(java.util%.Hashtable,java.lang%.Object,java.lang%.Object)","DNS%.dns").
before_method("DNS%.dns#rcodeString(int)","rcodeString(int)","DNS%.dns").
before_method("DNS%.dns#rcodeValue(java.lang%.String)","rcodeValue(java.lang%.String)","DNS%.dns").
before_method("DNS%.dns#sectionString(int)","sectionString(int)","DNS%.dns").
before_method("DNS%.dns#sectionValue(java.lang%.String)","sectionValue(java.lang%.String)","DNS%.dns").
before_method("DNS%.dns#typeString(int)","typeString(int)","DNS%.dns").
before_method("DNS%.dns#typeValue(java.lang%.String)","typeValue(java.lang%.String)","DNS%.dns").
before_method("DNS.utils%.CountedDataInputStream#<init>(java.io%.InputStream)","<init>(java.io%.InputStream)","DNS.utils%.CountedDataInputStream").
before_method("DNS.utils%.CountedDataInputStream#getPos()","getPos()","DNS.utils%.CountedDataInputStream").
before_method("DNS.utils%.CountedDataInputStream#read(byte[])","read(byte[])","DNS.utils%.CountedDataInputStream").
before_method("DNS.utils%.CountedDataInputStream#readByte()","readByte()","DNS.utils%.CountedDataInputStream").
before_method("DNS.utils%.CountedDataInputStream#readInt()","readInt()","DNS.utils%.CountedDataInputStream").
before_method("DNS.utils%.CountedDataInputStream#readLong()","readLong()","DNS.utils%.CountedDataInputStream").
before_method("DNS.utils%.CountedDataInputStream#readShort()","readShort()","DNS.utils%.CountedDataInputStream").
before_method("DNS.utils%.CountedDataInputStream#readString()","readString()","DNS.utils%.CountedDataInputStream").
before_method("DNS.utils%.CountedDataInputStream#readUnsignedByte()","readUnsignedByte()","DNS.utils%.CountedDataInputStream").
before_method("DNS.utils%.CountedDataInputStream#readUnsignedShort()","readUnsignedShort()","DNS.utils%.CountedDataInputStream").
before_method("DNS.utils%.CountedDataInputStream#skipBytes(int)","skipBytes(int)","DNS.utils%.CountedDataInputStream").
before_method("DNS.utils%.CountedDataOutputStream#<init>(java.io%.OutputStream)","<init>(java.io%.OutputStream)","DNS.utils%.CountedDataOutputStream").
before_method("DNS.utils%.CountedDataOutputStream#getPos()","getPos()","DNS.utils%.CountedDataOutputStream").
before_method("DNS.utils%.CountedDataOutputStream#write(byte[])","write(byte[])","DNS.utils%.CountedDataOutputStream").
before_method("DNS.utils%.CountedDataOutputStream#writeByte(int)","writeByte(int)","DNS.utils%.CountedDataOutputStream").
before_method("DNS.utils%.CountedDataOutputStream#writeInt(int)","writeInt(int)","DNS.utils%.CountedDataOutputStream").
before_method("DNS.utils%.CountedDataOutputStream#writeLong(long)","writeLong(long)","DNS.utils%.CountedDataOutputStream").
before_method("DNS.utils%.CountedDataOutputStream#writeShort(int)","writeShort(int)","DNS.utils%.CountedDataOutputStream").
before_method("DNS.utils%.CountedDataOutputStream#writeString(java.lang%.String)","writeString(java.lang%.String)","DNS.utils%.CountedDataOutputStream").
before_method("DNS.utils%.base16#<init>()","<init>()","DNS.utils%.base16").
before_method("DNS.utils%.base16#fromString(java.lang%.String)","fromString(java.lang%.String)","DNS.utils%.base16").
before_method("DNS.utils%.base16#toString(byte[])","toString(byte[])","DNS.utils%.base16").
before_method("DNS.utils%.base64#<init>()","<init>()","DNS.utils%.base64").
before_method("DNS.utils%.base64#fromString(java.lang%.String)","fromString(java.lang%.String)","DNS.utils%.base64").
before_method("DNS.utils%.base64#toString(byte[])","toString(byte[])","DNS.utils%.base64").
before_method("DNS.utils%.hmacSigner#<init>(byte[])","<init>(byte[])","DNS.utils%.hmacSigner").
before_method("DNS.utils%.hmacSigner#addData(byte[])","addData(byte[])","DNS.utils%.hmacSigner").
before_method("DNS.utils%.hmacSigner#addData(byte[],int,int)","addData(byte[],int,int)","DNS.utils%.hmacSigner").
before_method("DNS.utils%.hmacSigner#byteArrayCompare(byte[],byte[])","byteArrayCompare(byte[],byte[])","DNS.utils%.hmacSigner").
before_method("DNS.utils%.hmacSigner#clear()","clear()","DNS.utils%.hmacSigner").
before_method("DNS.utils%.hmacSigner#printByteString(java.lang%.String,byte[],int,int)","printByteString(java.lang%.String,byte[],int,int)","DNS.utils%.hmacSigner").
before_method("DNS.utils%.hmacSigner#sign()","sign()","DNS.utils%.hmacSigner").
before_method("DNS.utils%.hmacSigner#verify(byte[])","verify(byte[])","DNS.utils%.hmacSigner").
before_method("DNS.utils%.md5#<init>()","<init>()","DNS.utils%.md5").
before_method("DNS.utils%.md5#F(int,int,int)","F(int,int,int)","DNS.utils%.md5").
before_method("DNS.utils%.md5#FF(int,int,int,int,int,int,int)","FF(int,int,int,int,int,int,int)","DNS.utils%.md5").
before_method("DNS.utils%.md5#G(int,int,int)","G(int,int,int)","DNS.utils%.md5").
before_method("DNS.utils%.md5#GG(int,int,int,int,int,int,int)","GG(int,int,int,int,int,int,int)","DNS.utils%.md5").
before_method("DNS.utils%.md5#H(int,int,int)","H(int,int,int)","DNS.utils%.md5").
before_method("DNS.utils%.md5#HH(int,int,int,int,int,int,int)","HH(int,int,int,int,int,int,int)","DNS.utils%.md5").
before_method("DNS.utils%.md5#I(int,int,int)","I(int,int,int)","DNS.utils%.md5").
before_method("DNS.utils%.md5#II(int,int,int,int,int,int,int)","II(int,int,int,int,int,int,int)","DNS.utils%.md5").
before_method("DNS.utils%.md5#ROTATE_LEFT(int,int)","ROTATE_LEFT(int,int)","DNS.utils%.md5").
before_method("DNS.utils%.md5#compute(byte[])","compute(byte[])","DNS.utils%.md5").
before_method("DNS.utils%.md5#compute(byte[],int,int)","compute(byte[],int,int)","DNS.utils%.md5").
before_method("DNS.utils%.md5#decode(byte[],int,int)","decode(byte[],int,int)","DNS.utils%.md5").
before_method("DNS.utils%.md5#digest(byte[],int,int,int[])","digest(byte[],int,int,int[])","DNS.utils%.md5").
before_method("DNS.utils%.md5#encode(int[])","encode(int[])","DNS.utils%.md5").
before_method("DNS.utils%.md5#pad(byte[],int,int)","pad(byte[],int,int)","DNS.utils%.md5").
before_package("DNS").
before_package("DNS.utils").
before_return("%.dig#<init>()","void").
before_return("%.dig#doAXFR(DNS%.Message,DNS%.Resolver)","void").
before_return("%.dig#doQuery(DNS%.Message,DNS%.Resolver)","void").
before_return("%.dig#main(java.lang%.String[])","void").
before_return("%.dig#usage()","void").
before_return("%.dnsServer#1#<init>()","void").
before_return("%.dnsServer#1#run()","void").
before_return("%.dnsServer#2#<init>()","void").
before_return("%.dnsServer#2#run()","void").
before_return("%.dnsServer#<init>()","void").
before_return("%.dnsServer#addTCP(short)","void").
before_return("%.dnsServer#addUDP(short)","void").
before_return("%.dnsServer#addZone(java.lang%.String)","void").
before_return("%.dnsServer#findBestZone(DNS%.Name)","DNS%.Zone").
before_return("%.dnsServer#generateReply(DNS%.Message)","DNS%.Message").
before_return("%.dnsServer#main(java.lang%.String[])","void").
before_return("%.dnsServer#serveTCP(short)","void").
before_return("%.dnsServer#serveUDP(short)","void").
before_return("%.update#<init>(java.io%.InputStream)","void").
before_return("%.update#doAdd(DNS%.MyStringTokenizer)","void").
before_return("%.update#doAssert(DNS%.MyStringTokenizer)","boolean").
before_return("%.update#doDelete(DNS%.MyStringTokenizer)","void").
before_return("%.update#doFile(DNS%.MyStringTokenizer,java.util%.Vector)","void").
before_return("%.update#doGlue(DNS%.MyStringTokenizer)","void").
before_return("%.update#doProhibit(DNS%.MyStringTokenizer)","void").
before_return("%.update#doQuery(DNS%.MyStringTokenizer)","void").
before_return("%.update#doRequire(DNS%.MyStringTokenizer)","void").
before_return("%.update#help(java.lang%.String)","void").
before_return("%.update#helpAttributes()","void").
before_return("%.update#helpData()","void").
before_return("%.update#helpOperations()","void").
before_return("%.update#helpResolver()","void").
before_return("%.update#main(java.lang%.String[])","void").
before_return("%.update#parseName(DNS%.MyStringTokenizer,short)","DNS%.Record").
before_return("%.update#parseRR(DNS%.MyStringTokenizer,short,int)","DNS%.Record").
before_return("%.update#parseSet(DNS%.MyStringTokenizer,short)","DNS%.Record").
before_return("%.update#sendUpdate()","void").
before_return("DNS%.ARecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)","void").
before_return("DNS%.ARecord#<init>(DNS%.Name,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)","void").
before_return("DNS%.ARecord#<init>(DNS%.Name,short,int,java.net%.InetAddress)","void").
before_return("DNS%.ARecord#getAddress()","java.net%.InetAddress").
before_return("DNS%.ARecord#rrToWire(DNS%.Compression)","byte[]").
before_return("DNS%.ARecord#toString()","java.lang%.String").
before_return("DNS%.CERTRecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)","void").
before_return("DNS%.CERTRecord#<init>(DNS%.Name,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)","void").
before_return("DNS%.CERTRecord#<init>(DNS%.Name,short,int,int,int,int,byte[])","void").
before_return("DNS%.CERTRecord#getAlgorithm()","byte").
before_return("DNS%.CERTRecord#getCertType()","short").
before_return("DNS%.CERTRecord#getKeyTag()","short").
before_return("DNS%.CERTRecord#rrToWire(DNS%.Compression)","byte[]").
before_return("DNS%.CERTRecord#toString()","java.lang%.String").
before_return("DNS%.CNAMERecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)","void").
before_return("DNS%.CNAMERecord#<init>(DNS%.Name,short,int,DNS%.Name)","void").
before_return("DNS%.CNAMERecord#<init>(DNS%.Name,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)","void").
before_return("DNS%.Compression#<init>()","void").
before_return("DNS%.Compression#add(int,DNS%.Name)","void").
before_return("DNS%.Compression#get(DNS%.Name)","int").
before_return("DNS%.Compression#get(int)","DNS%.Name").
before_return("DNS%.EDNS#<init>()","void").
before_return("DNS%.EDNS#newOPT(int)","DNS%.OPTRecord").
before_return("DNS%.FindResolver#<init>()","void").
before_return("DNS%.FindResolver#find()","java.lang%.String").
before_return("DNS%.FindResolver#findProperty()","java.lang%.String").
before_return("DNS%.FindResolver#findUnix()","java.lang%.String").
before_return("DNS%.HINFORecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)","void").
before_return("DNS%.HINFORecord#<init>(DNS%.Name,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)","void").
before_return("DNS%.HINFORecord#<init>(DNS%.Name,short,int,java.lang%.String,java.lang%.String)","void").
before_return("DNS%.HINFORecord#getCPU()","java.lang%.String").
before_return("DNS%.HINFORecord#getOS()","java.lang%.String").
before_return("DNS%.HINFORecord#rrToWire(DNS%.Compression)","byte[]").
before_return("DNS%.HINFORecord#toString()","java.lang%.String").
before_return("DNS%.Header#<init>(DNS.utils%.CountedDataInputStream)","void").
before_return("DNS%.Header#<init>(int)","void").
before_return("DNS%.Header#decCount(int)","void").
before_return("DNS%.Header#getCount(int)","short").
before_return("DNS%.Header#getFlag(int)","boolean").
before_return("DNS%.Header#getID()","int").
before_return("DNS%.Header#getOpcode()","byte").
before_return("DNS%.Header#getRcode()","byte").
before_return("DNS%.Header#incCount(int)","void").
before_return("DNS%.Header#printFlags()","java.lang%.String").
before_return("DNS%.Header#randomID()","short").
before_return("DNS%.Header#readFlags(DNS.utils%.CountedDataInputStream)","void").
before_return("DNS%.Header#setCount(int,short)","void").
before_return("DNS%.Header#setFlag(int)","void").
before_return("DNS%.Header#setID(int)","void").
before_return("DNS%.Header#setOpcode(byte)","void").
before_return("DNS%.Header#setRcode(byte)","void").
before_return("DNS%.Header#toString()","java.lang%.String").
before_return("DNS%.Header#toWire()","byte[]").
before_return("DNS%.Header#toWire(DNS.utils%.CountedDataOutputStream)","void").
before_return("DNS%.Header#unsetFlag(int)","void").
before_return("DNS%.Header#writeFlags(DNS.utils%.CountedDataOutputStream)","void").
before_return("DNS%.IO#<init>()","void").
before_return("DNS%.IO#formatBase64String(java.lang%.String,int,java.lang%.String,boolean)","java.lang%.String").
before_return("DNS%.IO#readExtendedLine(java.io%.BufferedReader)","java.lang%.String").
before_return("DNS%.KEYRecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)","void").
before_return("DNS%.KEYRecord#<init>(DNS%.Name,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)","void").
before_return("DNS%.KEYRecord#<init>(DNS%.Name,short,int,int,int,int,byte[])","void").
before_return("DNS%.KEYRecord#getAlgorithm()","byte").
before_return("DNS%.KEYRecord#getFlags()","short").
before_return("DNS%.KEYRecord#getProtocol()","byte").
before_return("DNS%.KEYRecord#rrToWire(DNS%.Compression)","byte[]").
before_return("DNS%.KEYRecord#toString()","java.lang%.String").
before_return("DNS%.MXRecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)","void").
before_return("DNS%.MXRecord#<init>(DNS%.Name,short,int,int,DNS%.Name)","void").
before_return("DNS%.MXRecord#<init>(DNS%.Name,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)","void").
before_return("DNS%.MXRecord#getPriority()","short").
before_return("DNS%.MXRecord#getTarget()","DNS%.Name").
before_return("DNS%.MXRecord#rrToWire(DNS%.Compression)","byte[]").
before_return("DNS%.MXRecord#toString()","java.lang%.String").
before_return("DNS%.Message#<init>()","void").
before_return("DNS%.Message#<init>(DNS.utils%.CountedDataInputStream)","void").
before_return("DNS%.Message#<init>(byte[])","void").
before_return("DNS%.Message#<init>(int)","void").
before_return("DNS%.Message#addRecord(int,DNS%.Record)","void").
before_return("DNS%.Message#getHeader()","DNS%.Header").
before_return("DNS%.Message#getSection(int)","java.util%.Enumeration").
before_return("DNS%.Message#getTSIG()","DNS%.TSIGRecord").
before_return("DNS%.Message#numBytes()","int").
before_return("DNS%.Message#removeRecord(int,DNS%.Record)","boolean").
before_return("DNS%.Message#sectionToString(int)","java.lang%.String").
before_return("DNS%.Message#setHeader(DNS%.Header)","void").
before_return("DNS%.Message#toString()","java.lang%.String").
before_return("DNS%.Message#toWire()","byte[]").
before_return("DNS%.Message#toWire(DNS.utils%.CountedDataOutputStream)","void").
before_return("DNS%.Message#toWireCanonical(DNS.utils%.CountedDataOutputStream)","void").
before_return("DNS%.MyStringTokenizer#<init>(java.lang%.String)","void").
before_return("DNS%.MyStringTokenizer#<init>(java.lang%.String,java.lang%.String)","void").
before_return("DNS%.MyStringTokenizer#<init>(java.lang%.String,java.lang%.String,boolean)","void").
before_return("DNS%.MyStringTokenizer#hasMoreDelimiters()","boolean").
before_return("DNS%.MyStringTokenizer#hasMoreElements()","boolean").
before_return("DNS%.MyStringTokenizer#hasMoreTokens()","boolean").
before_return("DNS%.MyStringTokenizer#isDelim(int)","boolean").
before_return("DNS%.MyStringTokenizer#main(java.lang%.String[])","void").
before_return("DNS%.MyStringTokenizer#nextElement()","java.lang%.Object").
before_return("DNS%.MyStringTokenizer#nextToken()","java.lang%.String").
before_return("DNS%.MyStringTokenizer#putBackToken(java.lang%.String)","void").
before_return("DNS%.NSRecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)","void").
before_return("DNS%.NSRecord#<init>(DNS%.Name,short,int,DNS%.Name)","void").
before_return("DNS%.NSRecord#<init>(DNS%.Name,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)","void").
before_return("DNS%.NS_CNAME_PTRRecord#<init>(DNS%.Name,short,short,int,DNS%.MyStringTokenizer,DNS%.Name)","void").
before_return("DNS%.NS_CNAME_PTRRecord#<init>(DNS%.Name,short,short,int,DNS%.Name)","void").
before_return("DNS%.NS_CNAME_PTRRecord#<init>(DNS%.Name,short,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)","void").
before_return("DNS%.NS_CNAME_PTRRecord#getTarget()","DNS%.Name").
before_return("DNS%.NS_CNAME_PTRRecord#rrToWire(DNS%.Compression)","byte[]").
before_return("DNS%.NS_CNAME_PTRRecord#toString()","java.lang%.String").
before_return("DNS%.NXTRecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)","void").
before_return("DNS%.NXTRecord#<init>(DNS%.Name,short,int,DNS%.Name,java.util%.BitSet)","void").
before_return("DNS%.NXTRecord#<init>(DNS%.Name,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)","void").
before_return("DNS%.NXTRecord#getBitmap()","java.util%.BitSet").
before_return("DNS%.NXTRecord#getNext()","DNS%.Name").
before_return("DNS%.NXTRecord#rrToWire(DNS%.Compression)","byte[]").
before_return("DNS%.NXTRecord#toString()","java.lang%.String").
before_return("DNS%.Name#<init>(DNS%.Name,int)","void").
before_return("DNS%.Name#<init>(DNS.utils%.CountedDataInputStream,DNS%.Compression)","void").
before_return("DNS%.Name#<init>(java.lang%.String)","void").
before_return("DNS%.Name#<init>(java.lang%.String,DNS%.Name)","void").
before_return("DNS%.Name#append(DNS%.Name)","void").
before_return("DNS%.Name#equals(java.lang%.Object)","boolean").
before_return("DNS%.Name#hashCode()","int").
before_return("DNS%.Name#labels()","byte").
before_return("DNS%.Name#length()","short").
before_return("DNS%.Name#toString()","java.lang%.String").
before_return("DNS%.Name#toWire(DNS.utils%.CountedDataOutputStream,DNS%.Compression)","void").
before_return("DNS%.Name#toWireCanonical(DNS.utils%.CountedDataOutputStream)","void").
before_return("DNS%.OPTRecord#<init>(DNS%.Name,short,int)","void").
before_return("DNS%.OPTRecord#<init>(DNS%.Name,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)","void").
before_return("DNS%.OPTRecord#getExtendedRcode()","short").
before_return("DNS%.OPTRecord#getPayloadSize()","short").
before_return("DNS%.OPTRecord#getVersion()","short").
before_return("DNS%.OPTRecord#rrToWire(DNS%.Compression)","byte[]").
before_return("DNS%.OPTRecord#toString()","java.lang%.String").
before_return("DNS%.PTRRecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)","void").
before_return("DNS%.PTRRecord#<init>(DNS%.Name,short,int,DNS%.Name)","void").
before_return("DNS%.PTRRecord#<init>(DNS%.Name,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)","void").
before_return("DNS%.Record#<init>(DNS%.Name,short,short,int)","void").
before_return("DNS%.Record#fromString(DNS%.Name,short,short,int,DNS%.MyStringTokenizer,DNS%.Name)","DNS%.Record").
before_return("DNS%.Record#fromWire(DNS.utils%.CountedDataInputStream,int,DNS%.Compression)","DNS%.Record").
before_return("DNS%.Record#getDClass()","short").
before_return("DNS%.Record#getName()","DNS%.Name").
before_return("DNS%.Record#getType()","short").
before_return("DNS%.Record#newRecord(DNS%.Name,short,short)","DNS%.Record").
before_return("DNS%.Record#newRecord(DNS%.Name,short,short,int)","DNS%.Record").
before_return("DNS%.Record#newRecord(DNS%.Name,short,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)","DNS%.Record").
before_return("DNS%.Record#newRecord(DNS%.Name,short,short,int,int,byte[])","DNS%.Record").
before_return("DNS%.Record#rrToWire(DNS%.Compression)","byte[]").
before_return("DNS%.Record#rrToWireCanonical()","byte[]").
before_return("DNS%.Record#toString()","java.lang%.String").
before_return("DNS%.Record#toStringNoData()","java.lang%.StringBuffer").
before_return("DNS%.Record#toWire(DNS.utils%.CountedDataOutputStream,int,DNS%.Compression)","void").
before_return("DNS%.Record#toWire(int)","byte[]").
before_return("DNS%.Record#toWireCanonical(DNS.utils%.CountedDataOutputStream,int)","void").
before_return("DNS%.Resolver#<init>()","void").
before_return("DNS%.Resolver#<init>(java.lang%.String)","void").
before_return("DNS%.Resolver#send(DNS%.Message)","DNS%.Message").
before_return("DNS%.Resolver#sendAXFR(DNS%.Message)","DNS%.Message").
before_return("DNS%.Resolver#sendTCP(DNS%.Message,byte[])","DNS%.Message").
before_return("DNS%.Resolver#setDefaultResolver(java.lang%.String)","void").
before_return("DNS%.Resolver#setEDNS(boolean)","void").
before_return("DNS%.Resolver#setPort(int)","void").
before_return("DNS%.Resolver#setTCP(boolean)","void").
before_return("DNS%.Resolver#setTSIGKey(java.lang%.String)","void").
before_return("DNS%.Resolver#setTSIGKey(java.lang%.String,java.lang%.String)","void").
before_return("DNS%.SIGRecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)","void").
before_return("DNS%.SIGRecord#<init>(DNS%.Name,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)","void").
before_return("DNS%.SIGRecord#<init>(DNS%.Name,short,int,int,int,int,java.util%.Date,java.util%.Date,int,DNS%.Name,byte[])","void").
before_return("DNS%.SIGRecord#formatDate(java.util%.Date)","java.lang%.String").
before_return("DNS%.SIGRecord#parseDate(java.lang%.String)","java.util%.Date").
before_return("DNS%.SIGRecord#rrToWire(DNS%.Compression)","byte[]").
before_return("DNS%.SIGRecord#toString()","java.lang%.String").
before_return("DNS%.SOARecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)","void").
before_return("DNS%.SOARecord#<init>(DNS%.Name,short,int,DNS%.Name,DNS%.Name,int,int,int,int,int)","void").
before_return("DNS%.SOARecord#<init>(DNS%.Name,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)","void").
before_return("DNS%.SOARecord#getAdmin()","DNS%.Name").
before_return("DNS%.SOARecord#getExpire()","int").
before_return("DNS%.SOARecord#getHost()","DNS%.Name").
before_return("DNS%.SOARecord#getMinimum()","int").
before_return("DNS%.SOARecord#getRefresh()","int").
before_return("DNS%.SOARecord#getRetry()","int").
before_return("DNS%.SOARecord#getSerial()","int").
before_return("DNS%.SOARecord#rrToWire(DNS%.Compression)","byte[]").
before_return("DNS%.SOARecord#toString()","java.lang%.String").
before_return("DNS%.SRVRecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)","void").
before_return("DNS%.SRVRecord#<init>(DNS%.Name,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)","void").
before_return("DNS%.SRVRecord#<init>(DNS%.Name,short,int,int,int,int,DNS%.Name)","void").
before_return("DNS%.SRVRecord#getPort()","short").
before_return("DNS%.SRVRecord#getPriority()","short").
before_return("DNS%.SRVRecord#getTarget()","DNS%.Name").
before_return("DNS%.SRVRecord#getWeight()","short").
before_return("DNS%.SRVRecord#rrToWire(DNS%.Compression)","byte[]").
before_return("DNS%.SRVRecord#toString()","java.lang%.String").
before_return("DNS%.TSIG#<init>(java.lang%.String,byte[])","void").
before_return("DNS%.TSIG#apply(DNS%.Message)","void").
before_return("DNS%.TSIG#verify(DNS%.Message,byte[],DNS%.TSIGRecord)","boolean").
before_return("DNS%.TSIG#verifyAXFR(DNS%.Message,byte[],DNS%.TSIGRecord,boolean,boolean)","boolean").
before_return("DNS%.TSIG#verifyAXFRStart()","void").
before_return("DNS%.TSIGRecord#<init>(DNS%.Name,short,int,DNS%.Name,java.util%.Date,short,byte[],int,short,byte[])","void").
before_return("DNS%.TSIGRecord#<init>(DNS%.Name,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)","void").
before_return("DNS%.TSIGRecord#getAlg()","DNS%.Name").
before_return("DNS%.TSIGRecord#getError()","short").
before_return("DNS%.TSIGRecord#getFudge()","short").
before_return("DNS%.TSIGRecord#getOriginalID()","int").
before_return("DNS%.TSIGRecord#getOther()","byte[]").
before_return("DNS%.TSIGRecord#getSignature()","byte[]").
before_return("DNS%.TSIGRecord#getTimeSigned()","java.util%.Date").
before_return("DNS%.TSIGRecord#rrToWire(DNS%.Compression)","byte[]").
before_return("DNS%.TSIGRecord#toString()","java.lang%.String").
before_return("DNS%.TXTRecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)","void").
before_return("DNS%.TXTRecord#<init>(DNS%.Name,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)","void").
before_return("DNS%.TXTRecord#<init>(DNS%.Name,short,int,java.lang%.String)","void").
before_return("DNS%.TXTRecord#<init>(DNS%.Name,short,int,java.util%.Vector)","void").
before_return("DNS%.TXTRecord#getStrings()","java.util%.Vector").
before_return("DNS%.TXTRecord#rrToWire(DNS%.Compression)","byte[]").
before_return("DNS%.TXTRecord#toString()","java.lang%.String").
before_return("DNS%.UNKRecord#<init>(DNS%.Name,short,short,int,DNS%.MyStringTokenizer,DNS%.Name)","void").
before_return("DNS%.UNKRecord#<init>(DNS%.Name,short,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)","void").
before_return("DNS%.UNKRecord#rrToWire(DNS%.Compression)","byte[]").
before_return("DNS%.UNKRecord#toString()","java.lang%.String").
before_return("DNS%.Zone#<init>(java.lang%.String)","void").
before_return("DNS%.Zone#findName(DNS%.Name)","java.util%.Vector").
before_return("DNS%.Zone#getOrigin()","DNS%.Name").
before_return("DNS%.Zone#parseOrigin(DNS%.MyStringTokenizer)","DNS%.Name").
before_return("DNS%.Zone#parseRR(DNS%.MyStringTokenizer,boolean,DNS%.Record,DNS%.Name)","DNS%.Record").
before_return("DNS%.dns#<init>()","void").
before_return("DNS%.dns#classString(int)","java.lang%.String").
before_return("DNS%.dns#classValue(java.lang%.String)","short").
before_return("DNS%.dns#flagString(int)","java.lang%.String").
before_return("DNS%.dns#getRecords(DNS%.Resolver,java.lang%.String,short)","DNS%.Record[]").
before_return("DNS%.dns#getRecords(DNS%.Resolver,java.lang%.String,short,short)","DNS%.Record[]").
before_return("DNS%.dns#getRecords(java.lang%.String,short)","DNS%.Record[]").
before_return("DNS%.dns#getRecords(java.lang%.String,short,short)","DNS%.Record[]").
before_return("DNS%.dns#getRecordsByAddress(DNS%.Resolver,java.lang%.String,short)","DNS%.Record[]").
before_return("DNS%.dns#getRecordsByAddress(java.lang%.String,short)","DNS%.Record[]").
before_return("DNS%.dns#init(java.lang%.String)","void").
before_return("DNS%.dns#longSectionString(int)","java.lang%.String").
before_return("DNS%.dns#matchType(short,short)","boolean").
before_return("DNS%.dns#opcodeString(int)","java.lang%.String").
before_return("DNS%.dns#put2(java.util%.Hashtable,java.lang%.Object,java.lang%.Object)","void").
before_return("DNS%.dns#rcodeString(int)","java.lang%.String").
before_return("DNS%.dns#rcodeValue(java.lang%.String)","byte").
before_return("DNS%.dns#sectionString(int)","java.lang%.String").
before_return("DNS%.dns#sectionValue(java.lang%.String)","byte").
before_return("DNS%.dns#typeString(int)","java.lang%.String").
before_return("DNS%.dns#typeValue(java.lang%.String)","short").
before_return("DNS.utils%.CountedDataInputStream#<init>(java.io%.InputStream)","void").
before_return("DNS.utils%.CountedDataInputStream#getPos()","int").
before_return("DNS.utils%.CountedDataInputStream#read(byte[])","int").
before_return("DNS.utils%.CountedDataInputStream#readByte()","byte").
before_return("DNS.utils%.CountedDataInputStream#readInt()","int").
before_return("DNS.utils%.CountedDataInputStream#readLong()","long").
before_return("DNS.utils%.CountedDataInputStream#readShort()","short").
before_return("DNS.utils%.CountedDataInputStream#readString()","java.lang%.String").
before_return("DNS.utils%.CountedDataInputStream#readUnsignedByte()","int").
before_return("DNS.utils%.CountedDataInputStream#readUnsignedShort()","int").
before_return("DNS.utils%.CountedDataInputStream#skipBytes(int)","int").
before_return("DNS.utils%.CountedDataOutputStream#<init>(java.io%.OutputStream)","void").
before_return("DNS.utils%.CountedDataOutputStream#getPos()","int").
before_return("DNS.utils%.CountedDataOutputStream#write(byte[])","void").
before_return("DNS.utils%.CountedDataOutputStream#writeByte(int)","void").
before_return("DNS.utils%.CountedDataOutputStream#writeInt(int)","void").
before_return("DNS.utils%.CountedDataOutputStream#writeLong(long)","void").
before_return("DNS.utils%.CountedDataOutputStream#writeShort(int)","void").
before_return("DNS.utils%.CountedDataOutputStream#writeString(java.lang%.String)","void").
before_return("DNS.utils%.base16#<init>()","void").
before_return("DNS.utils%.base16#fromString(java.lang%.String)","byte[]").
before_return("DNS.utils%.base16#toString(byte[])","java.lang%.String").
before_return("DNS.utils%.base64#<init>()","void").
before_return("DNS.utils%.base64#fromString(java.lang%.String)","byte[]").
before_return("DNS.utils%.base64#toString(byte[])","java.lang%.String").
before_return("DNS.utils%.hmacSigner#<init>(byte[])","void").
before_return("DNS.utils%.hmacSigner#addData(byte[])","void").
before_return("DNS.utils%.hmacSigner#addData(byte[],int,int)","void").
before_return("DNS.utils%.hmacSigner#byteArrayCompare(byte[],byte[])","boolean").
before_return("DNS.utils%.hmacSigner#clear()","void").
before_return("DNS.utils%.hmacSigner#printByteString(java.lang%.String,byte[],int,int)","void").
before_return("DNS.utils%.hmacSigner#sign()","byte[]").
before_return("DNS.utils%.hmacSigner#verify(byte[])","boolean").
before_return("DNS.utils%.md5#<init>()","void").
before_return("DNS.utils%.md5#F(int,int,int)","int").
before_return("DNS.utils%.md5#FF(int,int,int,int,int,int,int)","int").
before_return("DNS.utils%.md5#G(int,int,int)","int").
before_return("DNS.utils%.md5#GG(int,int,int,int,int,int,int)","int").
before_return("DNS.utils%.md5#H(int,int,int)","int").
before_return("DNS.utils%.md5#HH(int,int,int,int,int,int,int)","int").
before_return("DNS.utils%.md5#I(int,int,int)","int").
before_return("DNS.utils%.md5#II(int,int,int,int,int,int,int)","int").
before_return("DNS.utils%.md5#ROTATE_LEFT(int,int)","int").
before_return("DNS.utils%.md5#compute(byte[])","byte[]").
before_return("DNS.utils%.md5#compute(byte[],int,int)","byte[]").
before_return("DNS.utils%.md5#decode(byte[],int,int)","int[]").
before_return("DNS.utils%.md5#digest(byte[],int,int,int[])","void").
before_return("DNS.utils%.md5#encode(int[])","byte[]").
before_return("DNS.utils%.md5#pad(byte[],int,int)","byte[]").
before_subtype("DNS%.NS_CNAME_PTRRecord","DNS%.CNAMERecord").
before_subtype("DNS%.NS_CNAME_PTRRecord","DNS%.NSRecord").
before_subtype("DNS%.NS_CNAME_PTRRecord","DNS%.PTRRecord").
before_subtype("DNS%.Record","DNS%.ARecord").
before_subtype("DNS%.Record","DNS%.CERTRecord").
before_subtype("DNS%.Record","DNS%.CNAMERecord").
before_subtype("DNS%.Record","DNS%.HINFORecord").
before_subtype("DNS%.Record","DNS%.KEYRecord").
before_subtype("DNS%.Record","DNS%.MXRecord").
before_subtype("DNS%.Record","DNS%.NSRecord").
before_subtype("DNS%.Record","DNS%.NS_CNAME_PTRRecord").
before_subtype("DNS%.Record","DNS%.NXTRecord").
before_subtype("DNS%.Record","DNS%.OPTRecord").
before_subtype("DNS%.Record","DNS%.PTRRecord").
before_subtype("DNS%.Record","DNS%.SIGRecord").
before_subtype("DNS%.Record","DNS%.SOARecord").
before_subtype("DNS%.Record","DNS%.SRVRecord").
before_subtype("DNS%.Record","DNS%.TSIGRecord").
before_subtype("DNS%.Record","DNS%.TXTRecord").
before_subtype("DNS%.Record","DNS%.UNKRecord").
before_subtype("java.lang%.Object","%.dig").
before_subtype("java.lang%.Object","%.dnsServer").
before_subtype("java.lang%.Object","%.dnsServer#1").
before_subtype("java.lang%.Object","%.dnsServer#2").
before_subtype("java.lang%.Object","%.update").
before_subtype("java.lang%.Object","DNS%.ARecord").
before_subtype("java.lang%.Object","DNS%.CERTRecord").
before_subtype("java.lang%.Object","DNS%.CNAMERecord").
before_subtype("java.lang%.Object","DNS%.Compression").
before_subtype("java.lang%.Object","DNS%.EDNS").
before_subtype("java.lang%.Object","DNS%.FindResolver").
before_subtype("java.lang%.Object","DNS%.HINFORecord").
before_subtype("java.lang%.Object","DNS%.Header").
before_subtype("java.lang%.Object","DNS%.IO").
before_subtype("java.lang%.Object","DNS%.KEYRecord").
before_subtype("java.lang%.Object","DNS%.MXRecord").
before_subtype("java.lang%.Object","DNS%.Message").
before_subtype("java.lang%.Object","DNS%.MyStringTokenizer").
before_subtype("java.lang%.Object","DNS%.NSRecord").
before_subtype("java.lang%.Object","DNS%.NS_CNAME_PTRRecord").
before_subtype("java.lang%.Object","DNS%.NXTRecord").
before_subtype("java.lang%.Object","DNS%.Name").
before_subtype("java.lang%.Object","DNS%.OPTRecord").
before_subtype("java.lang%.Object","DNS%.PTRRecord").
before_subtype("java.lang%.Object","DNS%.Record").
before_subtype("java.lang%.Object","DNS%.Resolver").
before_subtype("java.lang%.Object","DNS%.SIGRecord").
before_subtype("java.lang%.Object","DNS%.SOARecord").
before_subtype("java.lang%.Object","DNS%.SRVRecord").
before_subtype("java.lang%.Object","DNS%.TSIG").
before_subtype("java.lang%.Object","DNS%.TSIGRecord").
before_subtype("java.lang%.Object","DNS%.TXTRecord").
before_subtype("java.lang%.Object","DNS%.UNKRecord").
before_subtype("java.lang%.Object","DNS%.Zone").
before_subtype("java.lang%.Object","DNS%.dns").
before_subtype("java.lang%.Object","DNS.utils%.CountedDataInputStream").
before_subtype("java.lang%.Object","DNS.utils%.CountedDataOutputStream").
before_subtype("java.lang%.Object","DNS.utils%.base16").
before_subtype("java.lang%.Object","DNS.utils%.base64").
before_subtype("java.lang%.Object","DNS.utils%.hmacSigner").
before_subtype("java.lang%.Object","DNS.utils%.md5").
before_subtype("java.lang%.Runnable","%.dnsServer#1").
before_subtype("java.lang%.Runnable","%.dnsServer#2").
before_subtype("java.util%.Enumeration","DNS%.MyStringTokenizer").
before_type("%.dig","dig","null").
before_type("%.dnsServer","dnsServer","null").
before_type("%.dnsServer#1","dnsServer#1","null").
before_type("%.dnsServer#2","dnsServer#2","null").
before_type("%.update","update","null").
before_type("DNS%.ARecord","ARecord","DNS").
before_type("DNS%.CERTRecord","CERTRecord","DNS").
before_type("DNS%.CNAMERecord","CNAMERecord","DNS").
before_type("DNS%.Compression","Compression","DNS").
before_type("DNS%.EDNS","EDNS","DNS").
before_type("DNS%.FindResolver","FindResolver","DNS").
before_type("DNS%.HINFORecord","HINFORecord","DNS").
before_type("DNS%.Header","Header","DNS").
before_type("DNS%.IO","IO","DNS").
before_type("DNS%.KEYRecord","KEYRecord","DNS").
before_type("DNS%.MXRecord","MXRecord","DNS").
before_type("DNS%.Message","Message","DNS").
before_type("DNS%.MyStringTokenizer","MyStringTokenizer","DNS").
before_type("DNS%.NSRecord","NSRecord","DNS").
before_type("DNS%.NS_CNAME_PTRRecord","NS_CNAME_PTRRecord","DNS").
before_type("DNS%.NXTRecord","NXTRecord","DNS").
before_type("DNS%.Name","Name","DNS").
before_type("DNS%.OPTRecord","OPTRecord","DNS").
before_type("DNS%.PTRRecord","PTRRecord","DNS").
before_type("DNS%.Record","Record","DNS").
before_type("DNS%.Resolver","Resolver","DNS").
before_type("DNS%.SIGRecord","SIGRecord","DNS").
before_type("DNS%.SOARecord","SOARecord","DNS").
before_type("DNS%.SRVRecord","SRVRecord","DNS").
before_type("DNS%.TSIG","TSIG","DNS").
before_type("DNS%.TSIGRecord","TSIGRecord","DNS").
before_type("DNS%.TXTRecord","TXTRecord","DNS").
before_type("DNS%.UNKRecord","UNKRecord","DNS").
before_type("DNS%.Zone","Zone","DNS").
before_type("DNS%.dns","dns","DNS").
before_type("DNS.utils%.CountedDataInputStream","CountedDataInputStream","DNS.utils").
before_type("DNS.utils%.CountedDataOutputStream","CountedDataOutputStream","DNS.utils").
before_type("DNS.utils%.base16","base16","DNS.utils").
before_type("DNS.utils%.base64","base64","DNS.utils").
before_type("DNS.utils%.hmacSigner","hmacSigner","DNS.utils").
before_type("DNS.utils%.md5","md5","DNS.utils").
before_typeintype("%.dnsServer#1","%.dnsServer").
before_typeintype("%.dnsServer#2","%.dnsServer").
after_accesses("%.dig#_class","%.dig#main(java.lang%.String[])").
after_accesses("%.dig#name","%.dig#doAXFR(DNS%.Message,DNS%.Resolver)").
after_accesses("%.dig#name","%.dig#main(java.lang%.String[])").
after_accesses("%.dig#type","%.dig#main(java.lang%.String[])").
after_accesses("%.dnsServer#zcount","%.dnsServer#<init>()").
after_accesses("%.dnsServer#zcount","%.dnsServer#addZone(java.lang%.String,int)").
after_accesses("%.dnsServer#znames","%.dnsServer#<init>()").
after_accesses("%.dnsServer#znames","%.dnsServer#addZone(java.lang%.String,int)").
after_accesses("%.dnsServer#znames","%.dnsServer#findBestZone(DNS%.Name)").
after_accesses("%.dnsServer#zones","%.dnsServer#<init>()").
after_accesses("%.dnsServer#zones","%.dnsServer#addZone(java.lang%.String,int)").
after_accesses("%.update#ADDITIONAL","%.update#doGlue(DNS%.MyStringTokenizer)").
after_accesses("%.update#PREREQ","%.update#doProhibit(DNS%.MyStringTokenizer)").
after_accesses("%.update#PREREQ","%.update#doRequire(DNS%.MyStringTokenizer)").
after_accesses("%.update#UPDATE","%.update#doAdd(DNS%.MyStringTokenizer)").
after_accesses("%.update#UPDATE","%.update#doDelete(DNS%.MyStringTokenizer)").
after_accesses("%.update#UPDATE","%.update#sendUpdate()").
after_accesses("%.update#ZONE","%.update#sendUpdate()").
after_accesses("%.update#defaultClass","%.update#<init>(java.io%.InputStream)").
after_accesses("%.update#defaultClass","%.update#doAdd(DNS%.MyStringTokenizer)").
after_accesses("%.update#defaultClass","%.update#doGlue(DNS%.MyStringTokenizer)").
after_accesses("%.update#defaultClass","%.update#doProhibit(DNS%.MyStringTokenizer)").
after_accesses("%.update#defaultClass","%.update#doQuery(DNS%.MyStringTokenizer)").
after_accesses("%.update#defaultClass","%.update#doRequire(DNS%.MyStringTokenizer)").
after_accesses("%.update#defaultClass","%.update#sendUpdate()").
after_accesses("%.update#defaultTTL","%.update#<init>(java.io%.InputStream)").
after_accesses("%.update#defaultTTL","%.update#doAdd(DNS%.MyStringTokenizer)").
after_accesses("%.update#defaultTTL","%.update#doGlue(DNS%.MyStringTokenizer)").
after_accesses("%.update#origin","%.update#<init>(java.io%.InputStream)").
after_accesses("%.update#origin","%.update#parseName(DNS%.MyStringTokenizer,short)").
after_accesses("%.update#origin","%.update#parseRR(DNS%.MyStringTokenizer,short,int)").
after_accesses("%.update#origin","%.update#parseSet(DNS%.MyStringTokenizer,short)").
after_accesses("%.update#origin","%.update#sendUpdate()").
after_accesses("%.update#query","%.update#<init>(java.io%.InputStream)").
after_accesses("%.update#query","%.update#doAdd(DNS%.MyStringTokenizer)").
after_accesses("%.update#query","%.update#doDelete(DNS%.MyStringTokenizer)").
after_accesses("%.update#query","%.update#doGlue(DNS%.MyStringTokenizer)").
after_accesses("%.update#query","%.update#doProhibit(DNS%.MyStringTokenizer)").
after_accesses("%.update#query","%.update#doRequire(DNS%.MyStringTokenizer)").
after_accesses("%.update#query","%.update#sendUpdate()").
after_accesses("%.update#res","%.update#<init>(java.io%.InputStream)").
after_accesses("%.update#res","%.update#doQuery(DNS%.MyStringTokenizer)").
after_accesses("%.update#res","%.update#sendUpdate()").
after_accesses("%.update#response","%.update#doAssert(DNS%.MyStringTokenizer)").
after_accesses("%.update#response","%.update#doQuery(DNS%.MyStringTokenizer)").
after_accesses("%.update#response","%.update#sendUpdate()").
after_accesses("%.update#server","%.update#<init>(java.io%.InputStream)").
after_accesses("%.update#server","%.update#doQuery(DNS%.MyStringTokenizer)").
after_accesses("DNS%.ARecord#address","DNS%.ARecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)").
after_accesses("DNS%.ARecord#address","DNS%.ARecord#<init>(DNS%.Name,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)").
after_accesses("DNS%.ARecord#address","DNS%.ARecord#<init>(DNS%.Name,short,int,java.net%.InetAddress)").
after_accesses("DNS%.ARecord#address","DNS%.ARecord#getAddress()").
after_accesses("DNS%.ARecord#address","DNS%.ARecord#rrToWire(DNS%.Compression)").
after_accesses("DNS%.ARecord#address","DNS%.ARecord#toString()").
after_accesses("DNS%.CERTRecord#alg","DNS%.CERTRecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)").
after_accesses("DNS%.CERTRecord#alg","DNS%.CERTRecord#<init>(DNS%.Name,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)").
after_accesses("DNS%.CERTRecord#alg","DNS%.CERTRecord#<init>(DNS%.Name,short,int,int,int,int,byte[])").
after_accesses("DNS%.CERTRecord#alg","DNS%.CERTRecord#getAlgorithm()").
after_accesses("DNS%.CERTRecord#alg","DNS%.CERTRecord#rrToWire(DNS%.Compression)").
after_accesses("DNS%.CERTRecord#alg","DNS%.CERTRecord#toString()").
after_accesses("DNS%.CERTRecord#cert","DNS%.CERTRecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)").
after_accesses("DNS%.CERTRecord#cert","DNS%.CERTRecord#<init>(DNS%.Name,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)").
after_accesses("DNS%.CERTRecord#cert","DNS%.CERTRecord#<init>(DNS%.Name,short,int,int,int,int,byte[])").
after_accesses("DNS%.CERTRecord#cert","DNS%.CERTRecord#rrToWire(DNS%.Compression)").
after_accesses("DNS%.CERTRecord#cert","DNS%.CERTRecord#toString()").
after_accesses("DNS%.CERTRecord#certType","DNS%.CERTRecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)").
after_accesses("DNS%.CERTRecord#certType","DNS%.CERTRecord#<init>(DNS%.Name,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)").
after_accesses("DNS%.CERTRecord#certType","DNS%.CERTRecord#<init>(DNS%.Name,short,int,int,int,int,byte[])").
after_accesses("DNS%.CERTRecord#certType","DNS%.CERTRecord#getCertType()").
after_accesses("DNS%.CERTRecord#certType","DNS%.CERTRecord#rrToWire(DNS%.Compression)").
after_accesses("DNS%.CERTRecord#certType","DNS%.CERTRecord#toString()").
after_accesses("DNS%.CERTRecord#keyTag","DNS%.CERTRecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)").
after_accesses("DNS%.CERTRecord#keyTag","DNS%.CERTRecord#<init>(DNS%.Name,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)").
after_accesses("DNS%.CERTRecord#keyTag","DNS%.CERTRecord#<init>(DNS%.Name,short,int,int,int,int,byte[])").
after_accesses("DNS%.CERTRecord#keyTag","DNS%.CERTRecord#getKeyTag()").
after_accesses("DNS%.CERTRecord#keyTag","DNS%.CERTRecord#rrToWire(DNS%.Compression)").
after_accesses("DNS%.CERTRecord#keyTag","DNS%.CERTRecord#toString()").
after_accesses("DNS%.Compression#h","DNS%.Compression#<init>()").
after_accesses("DNS%.Compression#h","DNS%.Compression#add(int,DNS%.Name)").
after_accesses("DNS%.Compression#h","DNS%.Compression#get(DNS%.Name)").
after_accesses("DNS%.Compression#h","DNS%.Compression#get(int)").
after_accesses("DNS%.FindResolver#server","DNS%.FindResolver#find()").
after_accesses("DNS%.HINFORecord#cpu","DNS%.HINFORecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)").
after_accesses("DNS%.HINFORecord#cpu","DNS%.HINFORecord#<init>(DNS%.Name,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)").
after_accesses("DNS%.HINFORecord#cpu","DNS%.HINFORecord#<init>(DNS%.Name,short,int,java.lang%.String,java.lang%.String)").
after_accesses("DNS%.HINFORecord#cpu","DNS%.HINFORecord#getCPU()").
after_accesses("DNS%.HINFORecord#cpu","DNS%.HINFORecord#rrToWire(DNS%.Compression)").
after_accesses("DNS%.HINFORecord#cpu","DNS%.HINFORecord#toString()").
after_accesses("DNS%.HINFORecord#os","DNS%.HINFORecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)").
after_accesses("DNS%.HINFORecord#os","DNS%.HINFORecord#<init>(DNS%.Name,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)").
after_accesses("DNS%.HINFORecord#os","DNS%.HINFORecord#<init>(DNS%.Name,short,int,java.lang%.String,java.lang%.String)").
after_accesses("DNS%.HINFORecord#os","DNS%.HINFORecord#getOS()").
after_accesses("DNS%.HINFORecord#os","DNS%.HINFORecord#rrToWire(DNS%.Compression)").
after_accesses("DNS%.HINFORecord#os","DNS%.HINFORecord#toString()").
after_accesses("DNS%.Header#counts","DNS%.Header#<init>(DNS.utils%.CountedDataInputStream)").
after_accesses("DNS%.Header#counts","DNS%.Header#<init>(int)").
after_accesses("DNS%.Header#counts","DNS%.Header#decCount(int)").
after_accesses("DNS%.Header#counts","DNS%.Header#getCount(int)").
after_accesses("DNS%.Header#counts","DNS%.Header#incCount(int)").
after_accesses("DNS%.Header#counts","DNS%.Header#setCount(int,short)").
after_accesses("DNS%.Header#counts","DNS%.Header#toWire(DNS.utils%.CountedDataOutputStream)").
after_accesses("DNS%.Header#flags","DNS%.Header#<init>(int)").
after_accesses("DNS%.Header#flags","DNS%.Header#getFlag(int)").
after_accesses("DNS%.Header#flags","DNS%.Header#printFlags()").
after_accesses("DNS%.Header#flags","DNS%.Header#readFlags(DNS.utils%.CountedDataInputStream)").
after_accesses("DNS%.Header#flags","DNS%.Header#setFlag(int)").
after_accesses("DNS%.Header#flags","DNS%.Header#unsetFlag(int)").
after_accesses("DNS%.Header#flags","DNS%.Header#writeFlags(DNS.utils%.CountedDataOutputStream)").
after_accesses("DNS%.Header#id","DNS%.Header#<init>(int)").
after_accesses("DNS%.Header#id","DNS%.Header#getID()").
after_accesses("DNS%.Header#id","DNS%.Header#setID(int)").
after_accesses("DNS%.Header#id","DNS%.Header#toWire(DNS.utils%.CountedDataOutputStream)").
after_accesses("DNS%.Header#opcode","DNS%.Header#getOpcode()").
after_accesses("DNS%.Header#opcode","DNS%.Header#readFlags(DNS.utils%.CountedDataInputStream)").
after_accesses("DNS%.Header#opcode","DNS%.Header#setOpcode(byte)").
after_accesses("DNS%.Header#opcode","DNS%.Header#writeFlags(DNS.utils%.CountedDataOutputStream)").
after_accesses("DNS%.Header#rcode","DNS%.Header#getRcode()").
after_accesses("DNS%.Header#rcode","DNS%.Header#readFlags(DNS.utils%.CountedDataInputStream)").
after_accesses("DNS%.Header#rcode","DNS%.Header#setRcode(byte)").
after_accesses("DNS%.Header#rcode","DNS%.Header#writeFlags(DNS.utils%.CountedDataOutputStream)").
after_accesses("DNS%.KEYRecord#NOAUTH","DNS%.KEYRecord#rrToWire(DNS%.Compression)").
after_accesses("DNS%.KEYRecord#NOAUTH","DNS%.KEYRecord#toString()").
after_accesses("DNS%.KEYRecord#NOCONF","DNS%.KEYRecord#rrToWire(DNS%.Compression)").
after_accesses("DNS%.KEYRecord#NOCONF","DNS%.KEYRecord#toString()").
after_accesses("DNS%.KEYRecord#alg","DNS%.KEYRecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)").
after_accesses("DNS%.KEYRecord#alg","DNS%.KEYRecord#<init>(DNS%.Name,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)").
after_accesses("DNS%.KEYRecord#alg","DNS%.KEYRecord#<init>(DNS%.Name,short,int,int,int,int,byte[])").
after_accesses("DNS%.KEYRecord#alg","DNS%.KEYRecord#getAlgorithm()").
after_accesses("DNS%.KEYRecord#alg","DNS%.KEYRecord#rrToWire(DNS%.Compression)").
after_accesses("DNS%.KEYRecord#alg","DNS%.KEYRecord#toString()").
after_accesses("DNS%.KEYRecord#flags","DNS%.KEYRecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)").
after_accesses("DNS%.KEYRecord#flags","DNS%.KEYRecord#<init>(DNS%.Name,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)").
after_accesses("DNS%.KEYRecord#flags","DNS%.KEYRecord#<init>(DNS%.Name,short,int,int,int,int,byte[])").
after_accesses("DNS%.KEYRecord#flags","DNS%.KEYRecord#getFlags()").
after_accesses("DNS%.KEYRecord#flags","DNS%.KEYRecord#rrToWire(DNS%.Compression)").
after_accesses("DNS%.KEYRecord#flags","DNS%.KEYRecord#toString()").
after_accesses("DNS%.KEYRecord#key","DNS%.KEYRecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)").
after_accesses("DNS%.KEYRecord#key","DNS%.KEYRecord#<init>(DNS%.Name,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)").
after_accesses("DNS%.KEYRecord#key","DNS%.KEYRecord#<init>(DNS%.Name,short,int,int,int,int,byte[])").
after_accesses("DNS%.KEYRecord#key","DNS%.KEYRecord#rrToWire(DNS%.Compression)").
after_accesses("DNS%.KEYRecord#key","DNS%.KEYRecord#toString()").
after_accesses("DNS%.KEYRecord#proto","DNS%.KEYRecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)").
after_accesses("DNS%.KEYRecord#proto","DNS%.KEYRecord#<init>(DNS%.Name,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)").
after_accesses("DNS%.KEYRecord#proto","DNS%.KEYRecord#<init>(DNS%.Name,short,int,int,int,int,byte[])").
after_accesses("DNS%.KEYRecord#proto","DNS%.KEYRecord#getProtocol()").
after_accesses("DNS%.KEYRecord#proto","DNS%.KEYRecord#rrToWire(DNS%.Compression)").
after_accesses("DNS%.KEYRecord#proto","DNS%.KEYRecord#toString()").
after_accesses("DNS%.MXRecord#priority","DNS%.MXRecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)").
after_accesses("DNS%.MXRecord#priority","DNS%.MXRecord#<init>(DNS%.Name,short,int,int,DNS%.Name)").
after_accesses("DNS%.MXRecord#priority","DNS%.MXRecord#<init>(DNS%.Name,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)").
after_accesses("DNS%.MXRecord#priority","DNS%.MXRecord#getPriority()").
after_accesses("DNS%.MXRecord#priority","DNS%.MXRecord#rrToWire(DNS%.Compression)").
after_accesses("DNS%.MXRecord#priority","DNS%.MXRecord#toString()").
after_accesses("DNS%.MXRecord#target","DNS%.MXRecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)").
after_accesses("DNS%.MXRecord#target","DNS%.MXRecord#<init>(DNS%.Name,short,int,int,DNS%.Name)").
after_accesses("DNS%.MXRecord#target","DNS%.MXRecord#<init>(DNS%.Name,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)").
after_accesses("DNS%.MXRecord#target","DNS%.MXRecord#getTarget()").
after_accesses("DNS%.MXRecord#target","DNS%.MXRecord#rrToWire(DNS%.Compression)").
after_accesses("DNS%.MXRecord#target","DNS%.MXRecord#toString()").
after_accesses("DNS%.Message#header","DNS%.Message#<init>(DNS.utils%.CountedDataInputStream)").
after_accesses("DNS%.Message#header","DNS%.Message#<init>(int)").
after_accesses("DNS%.Message#header","DNS%.Message#addRecord(int,DNS%.Record)").
after_accesses("DNS%.Message#header","DNS%.Message#getHeader()").
after_accesses("DNS%.Message#header","DNS%.Message#getTSIG()").
after_accesses("DNS%.Message#header","DNS%.Message#removeRecord(int,DNS%.Record)").
after_accesses("DNS%.Message#header","DNS%.Message#setHeader(DNS%.Header)").
after_accesses("DNS%.Message#header","DNS%.Message#toWire(DNS.utils%.CountedDataOutputStream)").
after_accesses("DNS%.Message#header","DNS%.Message#toWireCanonical(DNS.utils%.CountedDataOutputStream)").
after_accesses("DNS%.Message#sections","DNS%.Message#<init>(DNS.utils%.CountedDataInputStream)").
after_accesses("DNS%.Message#sections","DNS%.Message#<init>(int)").
after_accesses("DNS%.Message#sections","DNS%.Message#addRecord(int,DNS%.Record)").
after_accesses("DNS%.Message#sections","DNS%.Message#getSection(int)").
after_accesses("DNS%.Message#sections","DNS%.Message#getTSIG()").
after_accesses("DNS%.Message#sections","DNS%.Message#removeRecord(int,DNS%.Record)").
after_accesses("DNS%.Message#sections","DNS%.Message#toWire(DNS.utils%.CountedDataOutputStream)").
after_accesses("DNS%.Message#sections","DNS%.Message#toWireCanonical(DNS.utils%.CountedDataOutputStream)").
after_accesses("DNS%.Message#size","DNS%.Message#<init>(DNS.utils%.CountedDataInputStream)").
after_accesses("DNS%.Message#size","DNS%.Message#numBytes()").
after_accesses("DNS%.MyStringTokenizer#current","DNS%.MyStringTokenizer#<init>(java.lang%.String,java.lang%.String,boolean)").
after_accesses("DNS%.MyStringTokenizer#current","DNS%.MyStringTokenizer#hasMoreDelimiters()").
after_accesses("DNS%.MyStringTokenizer#current","DNS%.MyStringTokenizer#hasMoreTokens()").
after_accesses("DNS%.MyStringTokenizer#current","DNS%.MyStringTokenizer#nextToken()").
after_accesses("DNS%.MyStringTokenizer#delim","DNS%.MyStringTokenizer#<init>(java.lang%.String,java.lang%.String,boolean)").
after_accesses("DNS%.MyStringTokenizer#delim","DNS%.MyStringTokenizer#isDelim(int)").
after_accesses("DNS%.MyStringTokenizer#putBack","DNS%.MyStringTokenizer#nextToken()").
after_accesses("DNS%.MyStringTokenizer#putBack","DNS%.MyStringTokenizer#putBackToken(java.lang%.String)").
after_accesses("DNS%.MyStringTokenizer#returnTokens","DNS%.MyStringTokenizer#<init>(java.lang%.String,java.lang%.String,boolean)").
after_accesses("DNS%.MyStringTokenizer#returnTokens","DNS%.MyStringTokenizer#hasMoreTokens()").
after_accesses("DNS%.MyStringTokenizer#returnTokens","DNS%.MyStringTokenizer#nextToken()").
after_accesses("DNS%.MyStringTokenizer#string","DNS%.MyStringTokenizer#<init>(java.lang%.String,java.lang%.String,boolean)").
after_accesses("DNS%.MyStringTokenizer#string","DNS%.MyStringTokenizer#hasMoreDelimiters()").
after_accesses("DNS%.MyStringTokenizer#string","DNS%.MyStringTokenizer#hasMoreTokens()").
after_accesses("DNS%.MyStringTokenizer#string","DNS%.MyStringTokenizer#isDelim(int)").
after_accesses("DNS%.MyStringTokenizer#string","DNS%.MyStringTokenizer#nextToken()").
after_accesses("DNS%.NS_CNAME_PTRRecord#target","DNS%.NS_CNAME_PTRRecord#<init>(DNS%.Name,short,short,int,DNS%.MyStringTokenizer,DNS%.Name)").
after_accesses("DNS%.NS_CNAME_PTRRecord#target","DNS%.NS_CNAME_PTRRecord#<init>(DNS%.Name,short,short,int,DNS%.Name)").
after_accesses("DNS%.NS_CNAME_PTRRecord#target","DNS%.NS_CNAME_PTRRecord#<init>(DNS%.Name,short,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)").
after_accesses("DNS%.NS_CNAME_PTRRecord#target","DNS%.NS_CNAME_PTRRecord#getTarget()").
after_accesses("DNS%.NS_CNAME_PTRRecord#target","DNS%.NS_CNAME_PTRRecord#rrToWire(DNS%.Compression)").
after_accesses("DNS%.NS_CNAME_PTRRecord#target","DNS%.NS_CNAME_PTRRecord#toString()").
after_accesses("DNS%.NXTRecord#bitmap","DNS%.NXTRecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)").
after_accesses("DNS%.NXTRecord#bitmap","DNS%.NXTRecord#<init>(DNS%.Name,short,int,DNS%.Name,java.util%.BitSet)").
after_accesses("DNS%.NXTRecord#bitmap","DNS%.NXTRecord#<init>(DNS%.Name,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)").
after_accesses("DNS%.NXTRecord#bitmap","DNS%.NXTRecord#getBitmap()").
after_accesses("DNS%.NXTRecord#bitmap","DNS%.NXTRecord#rrToWire(DNS%.Compression)").
after_accesses("DNS%.NXTRecord#bitmap","DNS%.NXTRecord#toString()").
after_accesses("DNS%.NXTRecord#next","DNS%.NXTRecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)").
after_accesses("DNS%.NXTRecord#next","DNS%.NXTRecord#<init>(DNS%.Name,short,int,DNS%.Name,java.util%.BitSet)").
after_accesses("DNS%.NXTRecord#next","DNS%.NXTRecord#<init>(DNS%.Name,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)").
after_accesses("DNS%.NXTRecord#next","DNS%.NXTRecord#getNext()").
after_accesses("DNS%.NXTRecord#next","DNS%.NXTRecord#rrToWire(DNS%.Compression)").
after_accesses("DNS%.NXTRecord#next","DNS%.NXTRecord#toString()").
after_accesses("DNS%.Name#MAXLABELS","DNS%.Name#<init>(DNS%.Name,int)").
after_accesses("DNS%.Name#MAXLABELS","DNS%.Name#<init>(DNS.utils%.CountedDataInputStream,DNS%.Compression)").
after_accesses("DNS%.Name#MAXLABELS","DNS%.Name#<init>(java.lang%.String,DNS%.Name)").
after_accesses("DNS%.Name#labels","DNS%.Name#<init>(DNS%.Name,int)").
after_accesses("DNS%.Name#labels","DNS%.Name#<init>(DNS.utils%.CountedDataInputStream,DNS%.Compression)").
after_accesses("DNS%.Name#labels","DNS%.Name#<init>(java.lang%.String,DNS%.Name)").
after_accesses("DNS%.Name#labels","DNS%.Name#append(DNS%.Name)").
after_accesses("DNS%.Name#labels","DNS%.Name#equals(java.lang%.Object)").
after_accesses("DNS%.Name#labels","DNS%.Name#hashCode()").
after_accesses("DNS%.Name#labels","DNS%.Name#labels()").
after_accesses("DNS%.Name#labels","DNS%.Name#length()").
after_accesses("DNS%.Name#labels","DNS%.Name#toString()").
after_accesses("DNS%.Name#labels","DNS%.Name#toWire(DNS.utils%.CountedDataOutputStream,DNS%.Compression)").
after_accesses("DNS%.Name#labels","DNS%.Name#toWireCanonical(DNS.utils%.CountedDataOutputStream)").
after_accesses("DNS%.Name#name","DNS%.Name#<init>(DNS%.Name,int)").
after_accesses("DNS%.Name#name","DNS%.Name#<init>(DNS.utils%.CountedDataInputStream,DNS%.Compression)").
after_accesses("DNS%.Name#name","DNS%.Name#<init>(java.lang%.String,DNS%.Name)").
after_accesses("DNS%.Name#name","DNS%.Name#append(DNS%.Name)").
after_accesses("DNS%.Name#name","DNS%.Name#equals(java.lang%.Object)").
after_accesses("DNS%.Name#name","DNS%.Name#hashCode()").
after_accesses("DNS%.Name#name","DNS%.Name#length()").
after_accesses("DNS%.Name#name","DNS%.Name#toString()").
after_accesses("DNS%.Name#name","DNS%.Name#toWire(DNS.utils%.CountedDataOutputStream,DNS%.Compression)").
after_accesses("DNS%.Name#name","DNS%.Name#toWireCanonical(DNS.utils%.CountedDataOutputStream)").
after_accesses("DNS%.Name#root","%.dnsServer#findBestZone(DNS%.Name)").
after_accesses("DNS%.Name#root","DNS%.EDNS#newOPT(int)").
after_accesses("DNS%.Name#root","DNS%.Zone#<init>(java.lang%.String,int)").
after_accesses("DNS%.RRset#name","DNS%.RRset#<init>(DNS%.Name,short)").
after_accesses("DNS%.RRset#rrs","DNS%.RRset#<init>(DNS%.Name,short)").
after_accesses("DNS%.RRset#rrs","DNS%.RRset#addRR(DNS%.Record)").
after_accesses("DNS%.RRset#rrs","DNS%.RRset#rrs()").
after_accesses("DNS%.RRset#type","DNS%.RRset#<init>(DNS%.Name,short)").
after_accesses("DNS%.Record#dclass","DNS%.Message#sectionToString(int)").
after_accesses("DNS%.Record#dclass","DNS%.OPTRecord#getPayloadSize()").
after_accesses("DNS%.Record#dclass","DNS%.Record#<init>(DNS%.Name,short,short,int)").
after_accesses("DNS%.Record#dclass","DNS%.Record#getDClass()").
after_accesses("DNS%.Record#dclass","DNS%.Record#toStringNoData()").
after_accesses("DNS%.Record#dclass","DNS%.Record#toWire(DNS.utils%.CountedDataOutputStream,int,DNS%.Compression)").
after_accesses("DNS%.Record#dclass","DNS%.Record#toWireCanonical(DNS.utils%.CountedDataOutputStream,int)").
after_accesses("DNS%.Record#dclass","DNS%.TSIG#verify(DNS%.Message,byte[],DNS%.TSIGRecord)").
after_accesses("DNS%.Record#name","DNS%.Message#sectionToString(int)").
after_accesses("DNS%.Record#name","DNS%.Record#<init>(DNS%.Name,short,short,int)").
after_accesses("DNS%.Record#name","DNS%.Record#getName()").
after_accesses("DNS%.Record#name","DNS%.Record#toStringNoData()").
after_accesses("DNS%.Record#name","DNS%.Record#toWire(DNS.utils%.CountedDataOutputStream,int,DNS%.Compression)").
after_accesses("DNS%.Record#name","DNS%.Record#toWireCanonical(DNS.utils%.CountedDataOutputStream,int)").
after_accesses("DNS%.Record#name","DNS%.SIGRecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)").
after_accesses("DNS%.Record#name","DNS%.SIGRecord#<init>(DNS%.Name,short,int,int,int,int,java.util%.Date,java.util%.Date,int,DNS%.Name,byte[])").
after_accesses("DNS%.Record#name","DNS%.Zone#<init>(java.lang%.String,int)").
after_accesses("DNS%.Record#name","DNS%.Zone#parseRR(DNS%.MyStringTokenizer,boolean,DNS%.Record,DNS%.Name)").
after_accesses("DNS%.Record#oLength","DNS%.Record#fromWire(DNS.utils%.CountedDataInputStream,int,DNS%.Compression)").
after_accesses("DNS%.Record#oLength","DNS%.Record#newRecord(DNS%.Name,short,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)").
after_accesses("DNS%.Record#oLength","DNS%.TSIG#verify(DNS%.Message,byte[],DNS%.TSIGRecord)").
after_accesses("DNS%.Record#oLength","DNS%.TSIG#verifyAXFR(DNS%.Message,byte[],DNS%.TSIGRecord,boolean,boolean)").
after_accesses("DNS%.Record#ttl","DNS%.OPTRecord#getExtendedRcode()").
after_accesses("DNS%.Record#ttl","DNS%.OPTRecord#getVersion()").
after_accesses("DNS%.Record#ttl","DNS%.Record#<init>(DNS%.Name,short,short,int)").
after_accesses("DNS%.Record#ttl","DNS%.Record#toStringNoData()").
after_accesses("DNS%.Record#ttl","DNS%.Record#toWire(DNS.utils%.CountedDataOutputStream,int,DNS%.Compression)").
after_accesses("DNS%.Record#ttl","DNS%.Record#toWireCanonical(DNS.utils%.CountedDataOutputStream,int)").
after_accesses("DNS%.Record#ttl","DNS%.TSIG#verify(DNS%.Message,byte[],DNS%.TSIGRecord)").
after_accesses("DNS%.Record#ttl","DNS%.Zone#parseRR(DNS%.MyStringTokenizer,boolean,DNS%.Record,DNS%.Name)").
after_accesses("DNS%.Record#type","DNS%.Message#getTSIG()").
after_accesses("DNS%.Record#type","DNS%.Message#sectionToString(int)").
after_accesses("DNS%.Record#type","DNS%.Record#<init>(DNS%.Name,short,short,int)").
after_accesses("DNS%.Record#type","DNS%.Record#getType()").
after_accesses("DNS%.Record#type","DNS%.Record#toStringNoData()").
after_accesses("DNS%.Record#type","DNS%.Record#toWire(DNS.utils%.CountedDataOutputStream,int,DNS%.Compression)").
after_accesses("DNS%.Record#type","DNS%.Record#toWireCanonical(DNS.utils%.CountedDataOutputStream,int)").
after_accesses("DNS%.Record#type","DNS%.UNKRecord#<init>(DNS%.Name,short,short,int,DNS%.MyStringTokenizer,DNS%.Name)").
after_accesses("DNS%.Record#type","DNS%.Zone#<init>(java.lang%.String,int)").
after_accesses("DNS%.Resolver#addr","DNS%.Resolver#<init>(java.lang%.String)").
after_accesses("DNS%.Resolver#addr","DNS%.Resolver#send(DNS%.Message)").
after_accesses("DNS%.Resolver#addr","DNS%.Resolver#sendAXFR(DNS%.Message)").
after_accesses("DNS%.Resolver#addr","DNS%.Resolver#sendTCP(DNS%.Message,byte[])").
after_accesses("DNS%.Resolver#defaultResolver","DNS%.Resolver#<init>(java.lang%.String)").
after_accesses("DNS%.Resolver#defaultResolver","DNS%.Resolver#setDefaultResolver(java.lang%.String)").
after_accesses("DNS%.Resolver#port","DNS%.Resolver#send(DNS%.Message)").
after_accesses("DNS%.Resolver#port","DNS%.Resolver#sendAXFR(DNS%.Message)").
after_accesses("DNS%.Resolver#port","DNS%.Resolver#sendTCP(DNS%.Message,byte[])").
after_accesses("DNS%.Resolver#port","DNS%.Resolver#setPort(int)").
after_accesses("DNS%.Resolver#timeoutValue","DNS%.Resolver#send(DNS%.Message)").
after_accesses("DNS%.Resolver#timeoutValue","DNS%.Resolver#sendAXFR(DNS%.Message)").
after_accesses("DNS%.Resolver#timeoutValue","DNS%.Resolver#sendTCP(DNS%.Message,byte[])").
after_accesses("DNS%.Resolver#tsig","DNS%.Resolver#send(DNS%.Message)").
after_accesses("DNS%.Resolver#tsig","DNS%.Resolver#sendAXFR(DNS%.Message)").
after_accesses("DNS%.Resolver#tsig","DNS%.Resolver#sendTCP(DNS%.Message,byte[])").
after_accesses("DNS%.Resolver#tsig","DNS%.Resolver#setTSIGKey(java.lang%.String,java.lang%.String)").
after_accesses("DNS%.Resolver#useEDNS","DNS%.Resolver#send(DNS%.Message)").
after_accesses("DNS%.Resolver#useEDNS","DNS%.Resolver#setEDNS(boolean)").
after_accesses("DNS%.Resolver#useTCP","DNS%.Resolver#send(DNS%.Message)").
after_accesses("DNS%.Resolver#useTCP","DNS%.Resolver#setTCP(boolean)").
after_accesses("DNS%.SIGRecord#alg","DNS%.SIGRecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)").
after_accesses("DNS%.SIGRecord#alg","DNS%.SIGRecord#<init>(DNS%.Name,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)").
after_accesses("DNS%.SIGRecord#alg","DNS%.SIGRecord#<init>(DNS%.Name,short,int,int,int,int,java.util%.Date,java.util%.Date,int,DNS%.Name,byte[])").
after_accesses("DNS%.SIGRecord#alg","DNS%.SIGRecord#rrToWire(DNS%.Compression)").
after_accesses("DNS%.SIGRecord#alg","DNS%.SIGRecord#toString()").
after_accesses("DNS%.SIGRecord#covered","DNS%.SIGRecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)").
after_accesses("DNS%.SIGRecord#covered","DNS%.SIGRecord#<init>(DNS%.Name,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)").
after_accesses("DNS%.SIGRecord#covered","DNS%.SIGRecord#<init>(DNS%.Name,short,int,int,int,int,java.util%.Date,java.util%.Date,int,DNS%.Name,byte[])").
after_accesses("DNS%.SIGRecord#covered","DNS%.SIGRecord#rrToWire(DNS%.Compression)").
after_accesses("DNS%.SIGRecord#covered","DNS%.SIGRecord#toString()").
after_accesses("DNS%.SIGRecord#expire","DNS%.SIGRecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)").
after_accesses("DNS%.SIGRecord#expire","DNS%.SIGRecord#<init>(DNS%.Name,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)").
after_accesses("DNS%.SIGRecord#expire","DNS%.SIGRecord#<init>(DNS%.Name,short,int,int,int,int,java.util%.Date,java.util%.Date,int,DNS%.Name,byte[])").
after_accesses("DNS%.SIGRecord#expire","DNS%.SIGRecord#rrToWire(DNS%.Compression)").
after_accesses("DNS%.SIGRecord#expire","DNS%.SIGRecord#toString()").
after_accesses("DNS%.SIGRecord#footprint","DNS%.SIGRecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)").
after_accesses("DNS%.SIGRecord#footprint","DNS%.SIGRecord#<init>(DNS%.Name,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)").
after_accesses("DNS%.SIGRecord#footprint","DNS%.SIGRecord#<init>(DNS%.Name,short,int,int,int,int,java.util%.Date,java.util%.Date,int,DNS%.Name,byte[])").
after_accesses("DNS%.SIGRecord#footprint","DNS%.SIGRecord#rrToWire(DNS%.Compression)").
after_accesses("DNS%.SIGRecord#footprint","DNS%.SIGRecord#toString()").
after_accesses("DNS%.SIGRecord#labels","DNS%.SIGRecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)").
after_accesses("DNS%.SIGRecord#labels","DNS%.SIGRecord#<init>(DNS%.Name,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)").
after_accesses("DNS%.SIGRecord#labels","DNS%.SIGRecord#<init>(DNS%.Name,short,int,int,int,int,java.util%.Date,java.util%.Date,int,DNS%.Name,byte[])").
after_accesses("DNS%.SIGRecord#labels","DNS%.SIGRecord#rrToWire(DNS%.Compression)").
after_accesses("DNS%.SIGRecord#origttl","DNS%.SIGRecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)").
after_accesses("DNS%.SIGRecord#origttl","DNS%.SIGRecord#<init>(DNS%.Name,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)").
after_accesses("DNS%.SIGRecord#origttl","DNS%.SIGRecord#<init>(DNS%.Name,short,int,int,int,int,java.util%.Date,java.util%.Date,int,DNS%.Name,byte[])").
after_accesses("DNS%.SIGRecord#origttl","DNS%.SIGRecord#rrToWire(DNS%.Compression)").
after_accesses("DNS%.SIGRecord#origttl","DNS%.SIGRecord#toString()").
after_accesses("DNS%.SIGRecord#signature","DNS%.SIGRecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)").
after_accesses("DNS%.SIGRecord#signature","DNS%.SIGRecord#<init>(DNS%.Name,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)").
after_accesses("DNS%.SIGRecord#signature","DNS%.SIGRecord#<init>(DNS%.Name,short,int,int,int,int,java.util%.Date,java.util%.Date,int,DNS%.Name,byte[])").
after_accesses("DNS%.SIGRecord#signature","DNS%.SIGRecord#rrToWire(DNS%.Compression)").
after_accesses("DNS%.SIGRecord#signature","DNS%.SIGRecord#toString()").
after_accesses("DNS%.SIGRecord#signer","DNS%.SIGRecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)").
after_accesses("DNS%.SIGRecord#signer","DNS%.SIGRecord#<init>(DNS%.Name,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)").
after_accesses("DNS%.SIGRecord#signer","DNS%.SIGRecord#<init>(DNS%.Name,short,int,int,int,int,java.util%.Date,java.util%.Date,int,DNS%.Name,byte[])").
after_accesses("DNS%.SIGRecord#signer","DNS%.SIGRecord#rrToWire(DNS%.Compression)").
after_accesses("DNS%.SIGRecord#signer","DNS%.SIGRecord#toString()").
after_accesses("DNS%.SIGRecord#timeSigned","DNS%.SIGRecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)").
after_accesses("DNS%.SIGRecord#timeSigned","DNS%.SIGRecord#<init>(DNS%.Name,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)").
after_accesses("DNS%.SIGRecord#timeSigned","DNS%.SIGRecord#<init>(DNS%.Name,short,int,int,int,int,java.util%.Date,java.util%.Date,int,DNS%.Name,byte[])").
after_accesses("DNS%.SIGRecord#timeSigned","DNS%.SIGRecord#rrToWire(DNS%.Compression)").
after_accesses("DNS%.SIGRecord#timeSigned","DNS%.SIGRecord#toString()").
after_accesses("DNS%.SOARecord#admin","DNS%.SOARecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)").
after_accesses("DNS%.SOARecord#admin","DNS%.SOARecord#<init>(DNS%.Name,short,int,DNS%.Name,DNS%.Name,int,int,int,int,int)").
after_accesses("DNS%.SOARecord#admin","DNS%.SOARecord#<init>(DNS%.Name,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)").
after_accesses("DNS%.SOARecord#admin","DNS%.SOARecord#getAdmin()").
after_accesses("DNS%.SOARecord#admin","DNS%.SOARecord#rrToWire(DNS%.Compression)").
after_accesses("DNS%.SOARecord#admin","DNS%.SOARecord#toString()").
after_accesses("DNS%.SOARecord#expire","DNS%.SOARecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)").
after_accesses("DNS%.SOARecord#expire","DNS%.SOARecord#<init>(DNS%.Name,short,int,DNS%.Name,DNS%.Name,int,int,int,int,int)").
after_accesses("DNS%.SOARecord#expire","DNS%.SOARecord#<init>(DNS%.Name,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)").
after_accesses("DNS%.SOARecord#expire","DNS%.SOARecord#getExpire()").
after_accesses("DNS%.SOARecord#expire","DNS%.SOARecord#rrToWire(DNS%.Compression)").
after_accesses("DNS%.SOARecord#expire","DNS%.SOARecord#toString()").
after_accesses("DNS%.SOARecord#host","DNS%.SOARecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)").
after_accesses("DNS%.SOARecord#host","DNS%.SOARecord#<init>(DNS%.Name,short,int,DNS%.Name,DNS%.Name,int,int,int,int,int)").
after_accesses("DNS%.SOARecord#host","DNS%.SOARecord#<init>(DNS%.Name,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)").
after_accesses("DNS%.SOARecord#host","DNS%.SOARecord#getHost()").
after_accesses("DNS%.SOARecord#host","DNS%.SOARecord#rrToWire(DNS%.Compression)").
after_accesses("DNS%.SOARecord#host","DNS%.SOARecord#toString()").
after_accesses("DNS%.SOARecord#minimum","DNS%.SOARecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)").
after_accesses("DNS%.SOARecord#minimum","DNS%.SOARecord#<init>(DNS%.Name,short,int,DNS%.Name,DNS%.Name,int,int,int,int,int)").
after_accesses("DNS%.SOARecord#minimum","DNS%.SOARecord#<init>(DNS%.Name,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)").
after_accesses("DNS%.SOARecord#minimum","DNS%.SOARecord#getMinimum()").
after_accesses("DNS%.SOARecord#minimum","DNS%.SOARecord#rrToWire(DNS%.Compression)").
after_accesses("DNS%.SOARecord#minimum","DNS%.SOARecord#toString()").
after_accesses("DNS%.SOARecord#refresh","DNS%.SOARecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)").
after_accesses("DNS%.SOARecord#refresh","DNS%.SOARecord#<init>(DNS%.Name,short,int,DNS%.Name,DNS%.Name,int,int,int,int,int)").
after_accesses("DNS%.SOARecord#refresh","DNS%.SOARecord#<init>(DNS%.Name,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)").
after_accesses("DNS%.SOARecord#refresh","DNS%.SOARecord#getRefresh()").
after_accesses("DNS%.SOARecord#refresh","DNS%.SOARecord#rrToWire(DNS%.Compression)").
after_accesses("DNS%.SOARecord#refresh","DNS%.SOARecord#toString()").
after_accesses("DNS%.SOARecord#retry","DNS%.SOARecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)").
after_accesses("DNS%.SOARecord#retry","DNS%.SOARecord#<init>(DNS%.Name,short,int,DNS%.Name,DNS%.Name,int,int,int,int,int)").
after_accesses("DNS%.SOARecord#retry","DNS%.SOARecord#<init>(DNS%.Name,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)").
after_accesses("DNS%.SOARecord#retry","DNS%.SOARecord#getRetry()").
after_accesses("DNS%.SOARecord#retry","DNS%.SOARecord#rrToWire(DNS%.Compression)").
after_accesses("DNS%.SOARecord#retry","DNS%.SOARecord#toString()").
after_accesses("DNS%.SOARecord#serial","DNS%.SOARecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)").
after_accesses("DNS%.SOARecord#serial","DNS%.SOARecord#<init>(DNS%.Name,short,int,DNS%.Name,DNS%.Name,int,int,int,int,int)").
after_accesses("DNS%.SOARecord#serial","DNS%.SOARecord#<init>(DNS%.Name,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)").
after_accesses("DNS%.SOARecord#serial","DNS%.SOARecord#getSerial()").
after_accesses("DNS%.SOARecord#serial","DNS%.SOARecord#rrToWire(DNS%.Compression)").
after_accesses("DNS%.SOARecord#serial","DNS%.SOARecord#toString()").
after_accesses("DNS%.SRVRecord#port","DNS%.SRVRecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)").
after_accesses("DNS%.SRVRecord#port","DNS%.SRVRecord#<init>(DNS%.Name,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)").
after_accesses("DNS%.SRVRecord#port","DNS%.SRVRecord#<init>(DNS%.Name,short,int,int,int,int,DNS%.Name)").
after_accesses("DNS%.SRVRecord#port","DNS%.SRVRecord#getPort()").
after_accesses("DNS%.SRVRecord#port","DNS%.SRVRecord#rrToWire(DNS%.Compression)").
after_accesses("DNS%.SRVRecord#port","DNS%.SRVRecord#toString()").
after_accesses("DNS%.SRVRecord#priority","DNS%.SRVRecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)").
after_accesses("DNS%.SRVRecord#priority","DNS%.SRVRecord#<init>(DNS%.Name,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)").
after_accesses("DNS%.SRVRecord#priority","DNS%.SRVRecord#<init>(DNS%.Name,short,int,int,int,int,DNS%.Name)").
after_accesses("DNS%.SRVRecord#priority","DNS%.SRVRecord#getPriority()").
after_accesses("DNS%.SRVRecord#priority","DNS%.SRVRecord#rrToWire(DNS%.Compression)").
after_accesses("DNS%.SRVRecord#priority","DNS%.SRVRecord#toString()").
after_accesses("DNS%.SRVRecord#target","DNS%.SRVRecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)").
after_accesses("DNS%.SRVRecord#target","DNS%.SRVRecord#<init>(DNS%.Name,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)").
after_accesses("DNS%.SRVRecord#target","DNS%.SRVRecord#<init>(DNS%.Name,short,int,int,int,int,DNS%.Name)").
after_accesses("DNS%.SRVRecord#target","DNS%.SRVRecord#getTarget()").
after_accesses("DNS%.SRVRecord#target","DNS%.SRVRecord#rrToWire(DNS%.Compression)").
after_accesses("DNS%.SRVRecord#target","DNS%.SRVRecord#toString()").
after_accesses("DNS%.SRVRecord#weight","DNS%.SRVRecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)").
after_accesses("DNS%.SRVRecord#weight","DNS%.SRVRecord#<init>(DNS%.Name,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)").
after_accesses("DNS%.SRVRecord#weight","DNS%.SRVRecord#<init>(DNS%.Name,short,int,int,int,int,DNS%.Name)").
after_accesses("DNS%.SRVRecord#weight","DNS%.SRVRecord#getWeight()").
after_accesses("DNS%.SRVRecord#weight","DNS%.SRVRecord#rrToWire(DNS%.Compression)").
after_accesses("DNS%.SRVRecord#weight","DNS%.SRVRecord#toString()").
after_accesses("DNS%.TSIG#axfrSigner","DNS%.TSIG#verify(DNS%.Message,byte[],DNS%.TSIGRecord)").
after_accesses("DNS%.TSIG#axfrSigner","DNS%.TSIG#verifyAXFR(DNS%.Message,byte[],DNS%.TSIGRecord,boolean,boolean)").
after_accesses("DNS%.TSIG#axfrSigner","DNS%.TSIG#verifyAXFRStart()").
after_accesses("DNS%.TSIG#key","DNS%.TSIG#<init>(java.lang%.String,byte[])").
after_accesses("DNS%.TSIG#key","DNS%.TSIG#apply(DNS%.Message)").
after_accesses("DNS%.TSIG#key","DNS%.TSIG#verify(DNS%.Message,byte[],DNS%.TSIGRecord)").
after_accesses("DNS%.TSIG#key","DNS%.TSIG#verifyAXFRStart()").
after_accesses("DNS%.TSIG#name","DNS%.TSIG#<init>(java.lang%.String,byte[])").
after_accesses("DNS%.TSIG#name","DNS%.TSIG#apply(DNS%.Message)").
after_accesses("DNS%.TSIGRecord#alg","DNS%.TSIGRecord#<init>(DNS%.Name,short,int,DNS%.Name,java.util%.Date,short,byte[],int,short,byte[])").
after_accesses("DNS%.TSIGRecord#alg","DNS%.TSIGRecord#<init>(DNS%.Name,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)").
after_accesses("DNS%.TSIGRecord#alg","DNS%.TSIGRecord#getAlg()").
after_accesses("DNS%.TSIGRecord#alg","DNS%.TSIGRecord#rrToWire(DNS%.Compression)").
after_accesses("DNS%.TSIGRecord#alg","DNS%.TSIGRecord#toString()").
after_accesses("DNS%.TSIGRecord#error","DNS%.TSIGRecord#<init>(DNS%.Name,short,int,DNS%.Name,java.util%.Date,short,byte[],int,short,byte[])").
after_accesses("DNS%.TSIGRecord#error","DNS%.TSIGRecord#<init>(DNS%.Name,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)").
after_accesses("DNS%.TSIGRecord#error","DNS%.TSIGRecord#getError()").
after_accesses("DNS%.TSIGRecord#error","DNS%.TSIGRecord#rrToWire(DNS%.Compression)").
after_accesses("DNS%.TSIGRecord#error","DNS%.TSIGRecord#toString()").
after_accesses("DNS%.TSIGRecord#fudge","DNS%.TSIGRecord#<init>(DNS%.Name,short,int,DNS%.Name,java.util%.Date,short,byte[],int,short,byte[])").
after_accesses("DNS%.TSIGRecord#fudge","DNS%.TSIGRecord#<init>(DNS%.Name,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)").
after_accesses("DNS%.TSIGRecord#fudge","DNS%.TSIGRecord#getFudge()").
after_accesses("DNS%.TSIGRecord#fudge","DNS%.TSIGRecord#rrToWire(DNS%.Compression)").
after_accesses("DNS%.TSIGRecord#originalID","DNS%.TSIGRecord#<init>(DNS%.Name,short,int,DNS%.Name,java.util%.Date,short,byte[],int,short,byte[])").
after_accesses("DNS%.TSIGRecord#originalID","DNS%.TSIGRecord#<init>(DNS%.Name,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)").
after_accesses("DNS%.TSIGRecord#originalID","DNS%.TSIGRecord#getOriginalID()").
after_accesses("DNS%.TSIGRecord#originalID","DNS%.TSIGRecord#rrToWire(DNS%.Compression)").
after_accesses("DNS%.TSIGRecord#other","DNS%.TSIGRecord#<init>(DNS%.Name,short,int,DNS%.Name,java.util%.Date,short,byte[],int,short,byte[])").
after_accesses("DNS%.TSIGRecord#other","DNS%.TSIGRecord#<init>(DNS%.Name,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)").
after_accesses("DNS%.TSIGRecord#other","DNS%.TSIGRecord#getOther()").
after_accesses("DNS%.TSIGRecord#other","DNS%.TSIGRecord#rrToWire(DNS%.Compression)").
after_accesses("DNS%.TSIGRecord#other","DNS%.TSIGRecord#toString()").
after_accesses("DNS%.TSIGRecord#signature","DNS%.TSIGRecord#<init>(DNS%.Name,short,int,DNS%.Name,java.util%.Date,short,byte[],int,short,byte[])").
after_accesses("DNS%.TSIGRecord#signature","DNS%.TSIGRecord#<init>(DNS%.Name,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)").
after_accesses("DNS%.TSIGRecord#signature","DNS%.TSIGRecord#getSignature()").
after_accesses("DNS%.TSIGRecord#signature","DNS%.TSIGRecord#rrToWire(DNS%.Compression)").
after_accesses("DNS%.TSIGRecord#signature","DNS%.TSIGRecord#toString()").
after_accesses("DNS%.TSIGRecord#timeSigned","DNS%.TSIGRecord#<init>(DNS%.Name,short,int,DNS%.Name,java.util%.Date,short,byte[],int,short,byte[])").
after_accesses("DNS%.TSIGRecord#timeSigned","DNS%.TSIGRecord#<init>(DNS%.Name,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)").
after_accesses("DNS%.TSIGRecord#timeSigned","DNS%.TSIGRecord#getTimeSigned()").
after_accesses("DNS%.TSIGRecord#timeSigned","DNS%.TSIGRecord#rrToWire(DNS%.Compression)").
after_accesses("DNS%.TSIGRecord#timeSigned","DNS%.TSIGRecord#toString()").
after_accesses("DNS%.TXTRecord#strings","DNS%.TXTRecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)").
after_accesses("DNS%.TXTRecord#strings","DNS%.TXTRecord#<init>(DNS%.Name,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)").
after_accesses("DNS%.TXTRecord#strings","DNS%.TXTRecord#<init>(DNS%.Name,short,int,java.lang%.String)").
after_accesses("DNS%.TXTRecord#strings","DNS%.TXTRecord#<init>(DNS%.Name,short,int,java.util%.Vector)").
after_accesses("DNS%.TXTRecord#strings","DNS%.TXTRecord#getStrings()").
after_accesses("DNS%.TXTRecord#strings","DNS%.TXTRecord#rrToWire(DNS%.Compression)").
after_accesses("DNS%.TXTRecord#strings","DNS%.TXTRecord#toString()").
after_accesses("DNS%.UNKRecord#data","DNS%.UNKRecord#<init>(DNS%.Name,short,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)").
after_accesses("DNS%.UNKRecord#data","DNS%.UNKRecord#rrToWire(DNS%.Compression)").
after_accesses("DNS%.UNKRecord#data","DNS%.UNKRecord#toString()").
after_accesses("DNS%.Zone#CACHE","%.dnsServer#main(java.lang%.String[])").
after_accesses("DNS%.Zone#CACHE","DNS%.Zone#<init>(java.lang%.String,int)").
after_accesses("DNS%.Zone#PRIMARY","%.dnsServer#main(java.lang%.String[])").
after_accesses("DNS%.Zone#data","DNS%.Zone#<init>(java.lang%.String,int)").
after_accesses("DNS%.Zone#data","DNS%.Zone#findName(DNS%.Name)").
after_accesses("DNS%.Zone#origin","DNS%.Zone#<init>(java.lang%.String,int)").
after_accesses("DNS%.Zone#origin","DNS%.Zone#getOrigin()").
after_accesses("DNS%.Zone#type","DNS%.Zone#<init>(java.lang%.String,int)").
after_accesses("DNS%.dns#A","%.dig#main(java.lang%.String[])").
after_accesses("DNS%.dns#A","DNS%.ARecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)").
after_accesses("DNS%.dns#A","DNS%.ARecord#<init>(DNS%.Name,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)").
after_accesses("DNS%.dns#A","DNS%.ARecord#<init>(DNS%.Name,short,int,java.net%.InetAddress)").
after_accesses("DNS%.dns#AA","%.dnsServer#generateReply(DNS%.Message)").
after_accesses("DNS%.dns#ADDITIONAL","%.dig#doAXFR(DNS%.Message,DNS%.Resolver)").
after_accesses("DNS%.dns#ADDITIONAL","DNS%.Message#getTSIG()").
after_accesses("DNS%.dns#ADDITIONAL","DNS%.Resolver#send(DNS%.Message)").
after_accesses("DNS%.dns#ADDITIONAL","DNS%.TSIG#apply(DNS%.Message)").
after_accesses("DNS%.dns#ADDITIONAL","DNS%.TSIG#verify(DNS%.Message,byte[],DNS%.TSIGRecord)").
after_accesses("DNS%.dns#ADDITIONAL","DNS%.TSIG#verifyAXFR(DNS%.Message,byte[],DNS%.TSIGRecord,boolean,boolean)").
after_accesses("DNS%.dns#ANSWER","%.dig#doAXFR(DNS%.Message,DNS%.Resolver)").
after_accesses("DNS%.dns#ANSWER","%.dnsServer#generateReply(DNS%.Message)").
after_accesses("DNS%.dns#ANSWER","DNS%.Resolver#sendAXFR(DNS%.Message)").
after_accesses("DNS%.dns#ANSWER","DNS%.dns#getRecords(DNS%.Resolver,java.lang%.String,short,short)").
after_accesses("DNS%.dns#ANY","%.update#doDelete(DNS%.MyStringTokenizer)").
after_accesses("DNS%.dns#ANY","%.update#doRequire(DNS%.MyStringTokenizer)").
after_accesses("DNS%.dns#ANY","%.update#parseName(DNS%.MyStringTokenizer,short)").
after_accesses("DNS%.dns#ANY","DNS%.TSIG#apply(DNS%.Message)").
after_accesses("DNS%.dns#ANY","DNS%.dns#matchType(short,short)").
after_accesses("DNS%.dns#AUTHORITY","DNS%.Resolver#sendAXFR(DNS%.Message)").
after_accesses("DNS%.dns#AXFR","%.dig#main(java.lang%.String[])").
after_accesses("DNS%.dns#AXFR","%.update#doQuery(DNS%.MyStringTokenizer)").
after_accesses("DNS%.dns#BADTIME","DNS%.TSIGRecord#toString()").
after_accesses("DNS%.dns#CERT","DNS%.CERTRecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)").
after_accesses("DNS%.dns#CERT","DNS%.CERTRecord#<init>(DNS%.Name,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)").
after_accesses("DNS%.dns#CERT","DNS%.CERTRecord#<init>(DNS%.Name,short,int,int,int,int,byte[])").
after_accesses("DNS%.dns#CNAME","DNS%.CNAMERecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)").
after_accesses("DNS%.dns#CNAME","DNS%.CNAMERecord#<init>(DNS%.Name,short,int,DNS%.Name)").
after_accesses("DNS%.dns#CNAME","DNS%.CNAMERecord#<init>(DNS%.Name,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)").
after_accesses("DNS%.dns#HINFO","DNS%.HINFORecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)").
after_accesses("DNS%.dns#HINFO","DNS%.HINFORecord#<init>(DNS%.Name,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)").
after_accesses("DNS%.dns#HINFO","DNS%.HINFORecord#<init>(DNS%.Name,short,int,java.lang%.String,java.lang%.String)").
after_accesses("DNS%.dns#HMAC","DNS%.TSIG#apply(DNS%.Message)").
after_accesses("DNS%.dns#IN","%.dig#main(java.lang%.String[])").
after_accesses("DNS%.dns#IN","DNS%.Record#toStringNoData()").
after_accesses("DNS%.dns#IN","DNS%.Zone#parseRR(DNS%.MyStringTokenizer,boolean,DNS%.Record,DNS%.Name)").
after_accesses("DNS%.dns#IN","DNS%.dns#getRecords(DNS%.Resolver,java.lang%.String,short)").
after_accesses("DNS%.dns#IN","DNS%.dns#getRecords(java.lang%.String,short)").
after_accesses("DNS%.dns#IN","DNS%.dns#getRecordsByAddress(DNS%.Resolver,java.lang%.String,short)").
after_accesses("DNS%.dns#KEY","DNS%.KEYRecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)").
after_accesses("DNS%.dns#KEY","DNS%.KEYRecord#<init>(DNS%.Name,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)").
after_accesses("DNS%.dns#KEY","DNS%.KEYRecord#<init>(DNS%.Name,short,int,int,int,int,byte[])").
after_accesses("DNS%.dns#MX","DNS%.MXRecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)").
after_accesses("DNS%.dns#MX","DNS%.MXRecord#<init>(DNS%.Name,short,int,int,DNS%.Name)").
after_accesses("DNS%.dns#MX","DNS%.MXRecord#<init>(DNS%.Name,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)").
after_accesses("DNS%.dns#NOERROR","DNS%.TSIG#apply(DNS%.Message)").
after_accesses("DNS%.dns#NOERROR","DNS%.TSIG#verify(DNS%.Message,byte[],DNS%.TSIGRecord)").
after_accesses("DNS%.dns#NOERROR","DNS%.dns#getRecords(DNS%.Resolver,java.lang%.String,short,short)").
after_accesses("DNS%.dns#NONE","%.update#doDelete(DNS%.MyStringTokenizer)").
after_accesses("DNS%.dns#NONE","%.update#doProhibit(DNS%.MyStringTokenizer)").
after_accesses("DNS%.dns#NS","DNS%.NSRecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)").
after_accesses("DNS%.dns#NS","DNS%.NSRecord#<init>(DNS%.Name,short,int,DNS%.Name)").
after_accesses("DNS%.dns#NS","DNS%.NSRecord#<init>(DNS%.Name,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)").
after_accesses("DNS%.dns#NXDOMAIN","%.dnsServer#generateReply(DNS%.Message)").
after_accesses("DNS%.dns#NXT","DNS%.NXTRecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)").
after_accesses("DNS%.dns#NXT","DNS%.NXTRecord#<init>(DNS%.Name,short,int,DNS%.Name,java.util%.BitSet)").
after_accesses("DNS%.dns#NXT","DNS%.NXTRecord#<init>(DNS%.Name,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)").
after_accesses("DNS%.dns#OPT","DNS%.OPTRecord#<init>(DNS%.Name,short,int)").
after_accesses("DNS%.dns#OPT","DNS%.OPTRecord#<init>(DNS%.Name,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)").
after_accesses("DNS%.dns#PTR","DNS%.PTRRecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)").
after_accesses("DNS%.dns#PTR","DNS%.PTRRecord#<init>(DNS%.Name,short,int,DNS%.Name)").
after_accesses("DNS%.dns#PTR","DNS%.PTRRecord#<init>(DNS%.Name,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)").
after_accesses("DNS%.dns#QR","%.dnsServer#generateReply(DNS%.Message)").
after_accesses("DNS%.dns#QUERY","%.dig#main(java.lang%.String[])").
after_accesses("DNS%.dns#QUERY","%.update#doQuery(DNS%.MyStringTokenizer)").
after_accesses("DNS%.dns#QUERY","DNS%.dns#getRecords(DNS%.Resolver,java.lang%.String,short,short)").
after_accesses("DNS%.dns#QUESTION","%.dig#main(java.lang%.String[])").
after_accesses("DNS%.dns#QUESTION","%.dnsServer#generateReply(DNS%.Message)").
after_accesses("DNS%.dns#QUESTION","%.update#doQuery(DNS%.MyStringTokenizer)").
after_accesses("DNS%.dns#QUESTION","DNS%.Message#sectionToString(int)").
after_accesses("DNS%.dns#QUESTION","DNS%.Record#fromWire(DNS.utils%.CountedDataInputStream,int,DNS%.Compression)").
after_accesses("DNS%.dns#QUESTION","DNS%.Record#toWire(DNS.utils%.CountedDataOutputStream,int,DNS%.Compression)").
after_accesses("DNS%.dns#QUESTION","DNS%.Record#toWireCanonical(DNS.utils%.CountedDataOutputStream,int)").
after_accesses("DNS%.dns#QUESTION","DNS%.Resolver#sendAXFR(DNS%.Message)").
after_accesses("DNS%.dns#QUESTION","DNS%.dns#getRecords(DNS%.Resolver,java.lang%.String,short,short)").
after_accesses("DNS%.dns#RD","%.dig#main(java.lang%.String[])").
after_accesses("DNS%.dns#RD","%.update#doQuery(DNS%.MyStringTokenizer)").
after_accesses("DNS%.dns#RD","DNS%.dns#getRecords(DNS%.Resolver,java.lang%.String,short,short)").
after_accesses("DNS%.dns#SERVFAIL","%.dnsServer#generateReply(DNS%.Message)").
after_accesses("DNS%.dns#SIG","DNS%.SIGRecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)").
after_accesses("DNS%.dns#SIG","DNS%.SIGRecord#<init>(DNS%.Name,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)").
after_accesses("DNS%.dns#SIG","DNS%.SIGRecord#<init>(DNS%.Name,short,int,int,int,int,java.util%.Date,java.util%.Date,int,DNS%.Name,byte[])").
after_accesses("DNS%.dns#SOA","%.update#sendUpdate()").
after_accesses("DNS%.dns#SOA","DNS%.SOARecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)").
after_accesses("DNS%.dns#SOA","DNS%.SOARecord#<init>(DNS%.Name,short,int,DNS%.Name,DNS%.Name,int,int,int,int,int)").
after_accesses("DNS%.dns#SOA","DNS%.SOARecord#<init>(DNS%.Name,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)").
after_accesses("DNS%.dns#SRV","DNS%.SRVRecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)").
after_accesses("DNS%.dns#SRV","DNS%.SRVRecord#<init>(DNS%.Name,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)").
after_accesses("DNS%.dns#SRV","DNS%.SRVRecord#<init>(DNS%.Name,short,int,int,int,int,DNS%.Name)").
after_accesses("DNS%.dns#TC","DNS%.Resolver#send(DNS%.Message)").
after_accesses("DNS%.dns#TSIG","DNS%.Message#getTSIG()").
after_accesses("DNS%.dns#TSIG","DNS%.TSIGRecord#<init>(DNS%.Name,short,int,DNS%.Name,java.util%.Date,short,byte[],int,short,byte[])").
after_accesses("DNS%.dns#TSIG","DNS%.TSIGRecord#<init>(DNS%.Name,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)").
after_accesses("DNS%.dns#TXT","DNS%.TXTRecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)").
after_accesses("DNS%.dns#TXT","DNS%.TXTRecord#<init>(DNS%.Name,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)").
after_accesses("DNS%.dns#TXT","DNS%.TXTRecord#<init>(DNS%.Name,short,int,java.lang%.String)").
after_accesses("DNS%.dns#TXT","DNS%.TXTRecord#<init>(DNS%.Name,short,int,java.util%.Vector)").
after_accesses("DNS%.dns#UPDATE","%.update#<init>(java.io%.InputStream)").
after_accesses("DNS%.dns#_res","DNS%.dns#getRecords(DNS%.Resolver,java.lang%.String,short,short)").
after_accesses("DNS%.dns#_res","DNS%.dns#getRecords(java.lang%.String,short)").
after_accesses("DNS%.dns#_res","DNS%.dns#getRecords(java.lang%.String,short,short)").
after_accesses("DNS%.dns#_res","DNS%.dns#getRecordsByAddress(java.lang%.String,short)").
after_accesses("DNS%.dns#classes","DNS%.dns#classString(int)").
after_accesses("DNS%.dns#classes","DNS%.dns#classValue(java.lang%.String)").
after_accesses("DNS%.dns#flags","DNS%.dns#flagString(int)").
after_accesses("DNS%.dns#longSections","DNS%.dns#longSectionString(int)").
after_accesses("DNS%.dns#opcodes","DNS%.dns#opcodeString(int)").
after_accesses("DNS%.dns#rcodes","DNS%.dns#rcodeString(int)").
after_accesses("DNS%.dns#rcodes","DNS%.dns#rcodeValue(java.lang%.String)").
after_accesses("DNS%.dns#sections","DNS%.dns#sectionString(int)").
after_accesses("DNS%.dns#sections","DNS%.dns#sectionValue(java.lang%.String)").
after_accesses("DNS%.dns#types","DNS%.dns#typeString(int)").
after_accesses("DNS%.dns#types","DNS%.dns#typeValue(java.lang%.String)").
after_accesses("DNS.utils%.CountedDataInputStream#counter","DNS.utils%.CountedDataInputStream#<init>(java.io%.InputStream)").
after_accesses("DNS.utils%.CountedDataInputStream#counter","DNS.utils%.CountedDataInputStream#getPos()").
after_accesses("DNS.utils%.CountedDataInputStream#counter","DNS.utils%.CountedDataInputStream#read(byte[])").
after_accesses("DNS.utils%.CountedDataInputStream#counter","DNS.utils%.CountedDataInputStream#readByte()").
after_accesses("DNS.utils%.CountedDataInputStream#counter","DNS.utils%.CountedDataInputStream#readInt()").
after_accesses("DNS.utils%.CountedDataInputStream#counter","DNS.utils%.CountedDataInputStream#readLong()").
after_accesses("DNS.utils%.CountedDataInputStream#counter","DNS.utils%.CountedDataInputStream#readShort()").
after_accesses("DNS.utils%.CountedDataInputStream#counter","DNS.utils%.CountedDataInputStream#readString()").
after_accesses("DNS.utils%.CountedDataInputStream#counter","DNS.utils%.CountedDataInputStream#readUnsignedByte()").
after_accesses("DNS.utils%.CountedDataInputStream#counter","DNS.utils%.CountedDataInputStream#readUnsignedShort()").
after_accesses("DNS.utils%.CountedDataInputStream#counter","DNS.utils%.CountedDataInputStream#skipBytes(int)").
after_accesses("DNS.utils%.CountedDataInputStream#in","DNS.utils%.CountedDataInputStream#<init>(java.io%.InputStream)").
after_accesses("DNS.utils%.CountedDataInputStream#in","DNS.utils%.CountedDataInputStream#read(byte[])").
after_accesses("DNS.utils%.CountedDataInputStream#in","DNS.utils%.CountedDataInputStream#readByte()").
after_accesses("DNS.utils%.CountedDataInputStream#in","DNS.utils%.CountedDataInputStream#readInt()").
after_accesses("DNS.utils%.CountedDataInputStream#in","DNS.utils%.CountedDataInputStream#readLong()").
after_accesses("DNS.utils%.CountedDataInputStream#in","DNS.utils%.CountedDataInputStream#readShort()").
after_accesses("DNS.utils%.CountedDataInputStream#in","DNS.utils%.CountedDataInputStream#readString()").
after_accesses("DNS.utils%.CountedDataInputStream#in","DNS.utils%.CountedDataInputStream#readUnsignedByte()").
after_accesses("DNS.utils%.CountedDataInputStream#in","DNS.utils%.CountedDataInputStream#readUnsignedShort()").
after_accesses("DNS.utils%.CountedDataInputStream#in","DNS.utils%.CountedDataInputStream#skipBytes(int)").
after_accesses("DNS.utils%.CountedDataOutputStream#counter","DNS.utils%.CountedDataOutputStream#<init>(java.io%.OutputStream)").
after_accesses("DNS.utils%.CountedDataOutputStream#counter","DNS.utils%.CountedDataOutputStream#getPos()").
after_accesses("DNS.utils%.CountedDataOutputStream#counter","DNS.utils%.CountedDataOutputStream#write(byte[])").
after_accesses("DNS.utils%.CountedDataOutputStream#counter","DNS.utils%.CountedDataOutputStream#writeByte(int)").
after_accesses("DNS.utils%.CountedDataOutputStream#counter","DNS.utils%.CountedDataOutputStream#writeInt(int)").
after_accesses("DNS.utils%.CountedDataOutputStream#counter","DNS.utils%.CountedDataOutputStream#writeLong(long)").
after_accesses("DNS.utils%.CountedDataOutputStream#counter","DNS.utils%.CountedDataOutputStream#writeShort(int)").
after_accesses("DNS.utils%.CountedDataOutputStream#counter","DNS.utils%.CountedDataOutputStream#writeString(java.lang%.String)").
after_accesses("DNS.utils%.CountedDataOutputStream#out","DNS.utils%.CountedDataOutputStream#<init>(java.io%.OutputStream)").
after_accesses("DNS.utils%.CountedDataOutputStream#out","DNS.utils%.CountedDataOutputStream#write(byte[])").
after_accesses("DNS.utils%.CountedDataOutputStream#out","DNS.utils%.CountedDataOutputStream#writeByte(int)").
after_accesses("DNS.utils%.CountedDataOutputStream#out","DNS.utils%.CountedDataOutputStream#writeInt(int)").
after_accesses("DNS.utils%.CountedDataOutputStream#out","DNS.utils%.CountedDataOutputStream#writeLong(long)").
after_accesses("DNS.utils%.CountedDataOutputStream#out","DNS.utils%.CountedDataOutputStream#writeShort(int)").
after_accesses("DNS.utils%.CountedDataOutputStream#out","DNS.utils%.CountedDataOutputStream#writeString(java.lang%.String)").
after_accesses("DNS.utils%.base16#Base16","DNS.utils%.base16#fromString(java.lang%.String)").
after_accesses("DNS.utils%.base16#Base16","DNS.utils%.base16#toString(byte[])").
after_accesses("DNS.utils%.base64#Base64","DNS.utils%.base64#fromString(java.lang%.String)").
after_accesses("DNS.utils%.base64#Base64","DNS.utils%.base64#toString(byte[])").
after_accesses("DNS.utils%.hmacSigner#IPAD","DNS.utils%.hmacSigner#<init>(byte[])").
after_accesses("DNS.utils%.hmacSigner#OPAD","DNS.utils%.hmacSigner#<init>(byte[])").
after_accesses("DNS.utils%.hmacSigner#PADLEN","DNS.utils%.hmacSigner#<init>(byte[])").
after_accesses("DNS.utils%.hmacSigner#bytes","DNS.utils%.hmacSigner#<init>(byte[])").
after_accesses("DNS.utils%.hmacSigner#bytes","DNS.utils%.hmacSigner#addData(byte[])").
after_accesses("DNS.utils%.hmacSigner#bytes","DNS.utils%.hmacSigner#addData(byte[],int,int)").
after_accesses("DNS.utils%.hmacSigner#bytes","DNS.utils%.hmacSigner#clear()").
after_accesses("DNS.utils%.hmacSigner#bytes","DNS.utils%.hmacSigner#sign()").
after_accesses("DNS.utils%.hmacSigner#ipad","DNS.utils%.hmacSigner#<init>(byte[])").
after_accesses("DNS.utils%.hmacSigner#ipad","DNS.utils%.hmacSigner#clear()").
after_accesses("DNS.utils%.hmacSigner#opad","DNS.utils%.hmacSigner#<init>(byte[])").
after_accesses("DNS.utils%.hmacSigner#opad","DNS.utils%.hmacSigner#sign()").
after_accesses("DNS.utils%.md5#S11","DNS.utils%.md5#digest(byte[],int,int,int[])").
after_accesses("DNS.utils%.md5#S12","DNS.utils%.md5#digest(byte[],int,int,int[])").
after_accesses("DNS.utils%.md5#S13","DNS.utils%.md5#digest(byte[],int,int,int[])").
after_accesses("DNS.utils%.md5#S14","DNS.utils%.md5#digest(byte[],int,int,int[])").
after_accesses("DNS.utils%.md5#S21","DNS.utils%.md5#digest(byte[],int,int,int[])").
after_accesses("DNS.utils%.md5#S22","DNS.utils%.md5#digest(byte[],int,int,int[])").
after_accesses("DNS.utils%.md5#S23","DNS.utils%.md5#digest(byte[],int,int,int[])").
after_accesses("DNS.utils%.md5#S24","DNS.utils%.md5#digest(byte[],int,int,int[])").
after_accesses("DNS.utils%.md5#S31","DNS.utils%.md5#digest(byte[],int,int,int[])").
after_accesses("DNS.utils%.md5#S32","DNS.utils%.md5#digest(byte[],int,int,int[])").
after_accesses("DNS.utils%.md5#S33","DNS.utils%.md5#digest(byte[],int,int,int[])").
after_accesses("DNS.utils%.md5#S34","DNS.utils%.md5#digest(byte[],int,int,int[])").
after_accesses("DNS.utils%.md5#S41","DNS.utils%.md5#digest(byte[],int,int,int[])").
after_accesses("DNS.utils%.md5#S42","DNS.utils%.md5#digest(byte[],int,int,int[])").
after_accesses("DNS.utils%.md5#S43","DNS.utils%.md5#digest(byte[],int,int,int[])").
after_accesses("DNS.utils%.md5#S44","DNS.utils%.md5#digest(byte[],int,int,int[])").
after_accesses("java.lang%.Integer#TYPE","DNS%.Record#fromString(DNS%.Name,short,short,int,DNS%.MyStringTokenizer,DNS%.Name)").
after_accesses("java.lang%.Integer#TYPE","DNS%.Record#newRecord(DNS%.Name,short,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)").
after_accesses("java.lang%.Short#TYPE","DNS%.Record#fromString(DNS%.Name,short,short,int,DNS%.MyStringTokenizer,DNS%.Name)").
after_accesses("java.lang%.Short#TYPE","DNS%.Record#newRecord(DNS%.Name,short,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)").
after_accesses("java.lang%.System#in","%.update#<init>(java.io%.InputStream)").
after_accesses("java.lang%.System#in","%.update#main(java.lang%.String[])").
after_accesses("java.lang%.System#in","DNS%.MyStringTokenizer#main(java.lang%.String[])").
after_accesses("java.lang%.System#out","%.dig#doAXFR(DNS%.Message,DNS%.Resolver)").
after_accesses("java.lang%.System#out","%.dig#doQuery(DNS%.Message,DNS%.Resolver)").
after_accesses("java.lang%.System#out","%.dig#main(java.lang%.String[])").
after_accesses("java.lang%.System#out","%.dig#usage()").
after_accesses("java.lang%.System#out","%.dnsServer#main(java.lang%.String[])").
after_accesses("java.lang%.System#out","%.dnsServer#serveTCP(short)").
after_accesses("java.lang%.System#out","%.dnsServer#serveUDP(short)").
after_accesses("java.lang%.System#out","%.update#<init>(java.io%.InputStream)").
after_accesses("java.lang%.System#out","%.update#doAdd(DNS%.MyStringTokenizer)").
after_accesses("java.lang%.System#out","%.update#doAssert(DNS%.MyStringTokenizer)").
after_accesses("java.lang%.System#out","%.update#doDelete(DNS%.MyStringTokenizer)").
after_accesses("java.lang%.System#out","%.update#doFile(DNS%.MyStringTokenizer,java.util%.Vector)").
after_accesses("java.lang%.System#out","%.update#doGlue(DNS%.MyStringTokenizer)").
after_accesses("java.lang%.System#out","%.update#doProhibit(DNS%.MyStringTokenizer)").
after_accesses("java.lang%.System#out","%.update#doQuery(DNS%.MyStringTokenizer)").
after_accesses("java.lang%.System#out","%.update#doRequire(DNS%.MyStringTokenizer)").
after_accesses("java.lang%.System#out","%.update#help(java.lang%.String)").
after_accesses("java.lang%.System#out","%.update#helpAttributes()").
after_accesses("java.lang%.System#out","%.update#helpData()").
after_accesses("java.lang%.System#out","%.update#helpOperations()").
after_accesses("java.lang%.System#out","%.update#helpResolver()").
after_accesses("java.lang%.System#out","%.update#main(java.lang%.String[])").
after_accesses("java.lang%.System#out","%.update#sendUpdate()").
after_accesses("java.lang%.System#out","DNS%.ARecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)").
after_accesses("java.lang%.System#out","DNS%.ARecord#<init>(DNS%.Name,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)").
after_accesses("java.lang%.System#out","DNS%.MyStringTokenizer#main(java.lang%.String[])").
after_accesses("java.lang%.System#out","DNS%.Name#<init>(java.lang%.String,DNS%.Name)").
after_accesses("java.lang%.System#out","DNS%.Record#fromString(DNS%.Name,short,short,int,DNS%.MyStringTokenizer,DNS%.Name)").
after_accesses("java.lang%.System#out","DNS%.Record#newRecord(DNS%.Name,short,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)").
after_accesses("java.lang%.System#out","DNS%.Resolver#send(DNS%.Message)").
after_accesses("java.lang%.System#out","DNS%.Resolver#sendAXFR(DNS%.Message)").
after_accesses("java.lang%.System#out","DNS%.Resolver#sendTCP(DNS%.Message,byte[])").
after_accesses("java.lang%.System#out","DNS%.Resolver#setTSIGKey(java.lang%.String)").
after_accesses("java.lang%.System#out","DNS%.Resolver#setTSIGKey(java.lang%.String,java.lang%.String)").
after_accesses("java.lang%.System#out","DNS%.UNKRecord#<init>(DNS%.Name,short,short,int,DNS%.MyStringTokenizer,DNS%.Name)").
after_accesses("java.lang%.System#out","DNS%.dns#getRecords(DNS%.Resolver,java.lang%.String,short,short)").
after_accesses("java.lang%.System#out","DNS.utils%.hmacSigner#printByteString(java.lang%.String,byte[],int,int)").
after_accesses("java.util%.Calendar#DAY_OF_MONTH","DNS%.SIGRecord#formatDate(java.util%.Date)").
after_accesses("java.util%.Calendar#HOUR_OF_DAY","DNS%.SIGRecord#formatDate(java.util%.Date)").
after_accesses("java.util%.Calendar#MINUTE","DNS%.SIGRecord#formatDate(java.util%.Date)").
after_accesses("java.util%.Calendar#MONTH","DNS%.SIGRecord#formatDate(java.util%.Date)").
after_accesses("java.util%.Calendar#SECOND","DNS%.SIGRecord#formatDate(java.util%.Date)").
after_accesses("java.util%.Calendar#YEAR","DNS%.SIGRecord#formatDate(java.util%.Date)").
after_calls("%.dig#doAXFR(DNS%.Message,DNS%.Resolver)","DNS%.Header#getCount(int)").
after_calls("%.dig#doAXFR(DNS%.Message,DNS%.Resolver)","DNS%.Message#getHeader()").
after_calls("%.dig#doAXFR(DNS%.Message,DNS%.Resolver)","DNS%.Message#getSection(int)").
after_calls("%.dig#doAXFR(DNS%.Message,DNS%.Resolver)","DNS%.Resolver#sendAXFR(DNS%.Message)").
after_calls("%.dig#doAXFR(DNS%.Message,DNS%.Resolver)","java.io%.PrintStream#print(int)").
after_calls("%.dig#doAXFR(DNS%.Message,DNS%.Resolver)","java.io%.PrintStream#print(java.lang%.String)").
after_calls("%.dig#doAXFR(DNS%.Message,DNS%.Resolver)","java.io%.PrintStream#println(java.lang%.Object)").
after_calls("%.dig#doAXFR(DNS%.Message,DNS%.Resolver)","java.io%.PrintStream#println(java.lang%.String)").
after_calls("%.dig#doAXFR(DNS%.Message,DNS%.Resolver)","java.util%.Enumeration#hasMoreElements()").
after_calls("%.dig#doAXFR(DNS%.Message,DNS%.Resolver)","java.util%.Enumeration#nextElement()").
after_calls("%.dig#doQuery(DNS%.Message,DNS%.Resolver)","DNS%.Resolver#send(DNS%.Message)").
after_calls("%.dig#doQuery(DNS%.Message,DNS%.Resolver)","java.io%.PrintStream#println(java.lang%.Object)").
after_calls("%.dig#doQuery(DNS%.Message,DNS%.Resolver)","java.io%.PrintStream#println(java.lang%.String)").
after_calls("%.dig#main(java.lang%.String[])","%.dig#doAXFR(DNS%.Message,DNS%.Resolver)").
after_calls("%.dig#main(java.lang%.String[])","%.dig#doQuery(DNS%.Message,DNS%.Resolver)").
after_calls("%.dig#main(java.lang%.String[])","%.dig#usage()").
after_calls("%.dig#main(java.lang%.String[])","DNS%.Header#setFlag(int)").
after_calls("%.dig#main(java.lang%.String[])","DNS%.Header#setOpcode(byte)").
after_calls("%.dig#main(java.lang%.String[])","DNS%.Message#<init>()").
after_calls("%.dig#main(java.lang%.String[])","DNS%.Message#addRecord(int,DNS%.Record)").
after_calls("%.dig#main(java.lang%.String[])","DNS%.Message#getHeader()").
after_calls("%.dig#main(java.lang%.String[])","DNS%.Name#<init>(java.lang%.String)").
after_calls("%.dig#main(java.lang%.String[])","DNS%.Record#newRecord(DNS%.Name,short,short)").
after_calls("%.dig#main(java.lang%.String[])","DNS%.Resolver#<init>()").
after_calls("%.dig#main(java.lang%.String[])","DNS%.Resolver#<init>(java.lang%.String)").
after_calls("%.dig#main(java.lang%.String[])","DNS%.Resolver#setEDNS(boolean)").
after_calls("%.dig#main(java.lang%.String[])","DNS%.Resolver#setPort(int)").
after_calls("%.dig#main(java.lang%.String[])","DNS%.Resolver#setTCP(boolean)").
after_calls("%.dig#main(java.lang%.String[])","DNS%.Resolver#setTSIGKey(java.lang%.String)").
after_calls("%.dig#main(java.lang%.String[])","DNS%.Resolver#setTSIGKey(java.lang%.String,java.lang%.String)").
after_calls("%.dig#main(java.lang%.String[])","DNS%.dns#classValue(java.lang%.String)").
after_calls("%.dig#main(java.lang%.String[])","DNS%.dns#typeValue(java.lang%.String)").
after_calls("%.dig#main(java.lang%.String[])","java.io%.PrintStream#print(java.lang%.String)").
after_calls("%.dig#main(java.lang%.String[])","java.io%.PrintStream#println(java.lang%.String)").
after_calls("%.dig#main(java.lang%.String[])","java.lang%.Integer#parseInt(java.lang%.String)").
after_calls("%.dig#main(java.lang%.String[])","java.lang%.String#charAt(int)").
after_calls("%.dig#main(java.lang%.String[])","java.lang%.String#indexOf(int)").
after_calls("%.dig#main(java.lang%.String[])","java.lang%.String#length()").
after_calls("%.dig#main(java.lang%.String[])","java.lang%.String#startsWith(java.lang%.String)").
after_calls("%.dig#main(java.lang%.String[])","java.lang%.String#substring(int)").
after_calls("%.dig#main(java.lang%.String[])","java.lang%.String#substring(int,int)").
after_calls("%.dig#usage()","java.io%.PrintStream#println(java.lang%.String)").
after_calls("%.dig#usage()","java.lang%.System#exit(int)").
after_calls("%.dnsServer#1#run()","%.dnsServer#serveUDP(short)").
after_calls("%.dnsServer#2#run()","%.dnsServer#serveTCP(short)").
after_calls("%.dnsServer#<init>()","java.util%.Hashtable#<init>()").
after_calls("%.dnsServer#addTCP(short)","%.dnsServer#1#<init>()").
after_calls("%.dnsServer#addTCP(short)","java.lang%.Thread#<init>(java.lang%.Runnable)").
after_calls("%.dnsServer#addTCP(short)","java.lang%.Thread#start()").
after_calls("%.dnsServer#addUDP(short)","%.dnsServer#2#<init>()").
after_calls("%.dnsServer#addUDP(short)","java.lang%.Thread#<init>(java.lang%.Runnable)").
after_calls("%.dnsServer#addUDP(short)","java.lang%.Thread#start()").
after_calls("%.dnsServer#addZone(java.lang%.String,int)","DNS%.Zone#<init>(java.lang%.String,int)").
after_calls("%.dnsServer#addZone(java.lang%.String,int)","DNS%.Zone#getOrigin()").
after_calls("%.dnsServer#addZone(java.lang%.String,int)","java.util%.Hashtable#put(java.lang%.Object,java.lang%.Object)").
after_calls("%.dnsServer#findBestZone(DNS%.Name)","DNS%.Name#<init>(DNS%.Name,int)").
after_calls("%.dnsServer#findBestZone(DNS%.Name)","DNS%.Name#equals(java.lang%.Object)").
after_calls("%.dnsServer#findBestZone(DNS%.Name)","java.util%.Hashtable#get(java.lang%.Object)").
after_calls("%.dnsServer#generateReply(DNS%.Message)","%.dnsServer#findBestZone(DNS%.Name)").
after_calls("%.dnsServer#generateReply(DNS%.Message)","DNS%.Header#getID()").
after_calls("%.dnsServer#generateReply(DNS%.Message)","DNS%.Header#setFlag(int)").
after_calls("%.dnsServer#generateReply(DNS%.Message)","DNS%.Header#setID(int)").
after_calls("%.dnsServer#generateReply(DNS%.Message)","DNS%.Header#setRcode(byte)").
after_calls("%.dnsServer#generateReply(DNS%.Message)","DNS%.Message#<init>()").
after_calls("%.dnsServer#generateReply(DNS%.Message)","DNS%.Message#addRecord(int,DNS%.Record)").
after_calls("%.dnsServer#generateReply(DNS%.Message)","DNS%.Message#getHeader()").
after_calls("%.dnsServer#generateReply(DNS%.Message)","DNS%.Message#getSection(int)").
after_calls("%.dnsServer#generateReply(DNS%.Message)","DNS%.RRset#rrs()").
after_calls("%.dnsServer#generateReply(DNS%.Message)","DNS%.Record#getName()").
after_calls("%.dnsServer#generateReply(DNS%.Message)","DNS%.Record#getType()").
after_calls("%.dnsServer#generateReply(DNS%.Message)","DNS%.Zone#findName(DNS%.Name)").
after_calls("%.dnsServer#generateReply(DNS%.Message)","java.lang%.Short#<init>(short)").
after_calls("%.dnsServer#generateReply(DNS%.Message)","java.util%.Enumeration#hasMoreElements()").
after_calls("%.dnsServer#generateReply(DNS%.Message)","java.util%.Enumeration#nextElement()").
after_calls("%.dnsServer#generateReply(DNS%.Message)","java.util%.Hashtable#get(java.lang%.Object)").
after_calls("%.dnsServer#main(java.lang%.String[])","%.dnsServer#<init>()").
after_calls("%.dnsServer#main(java.lang%.String[])","%.dnsServer#addTCP(short)").
after_calls("%.dnsServer#main(java.lang%.String[])","%.dnsServer#addUDP(short)").
after_calls("%.dnsServer#main(java.lang%.String[])","%.dnsServer#addZone(java.lang%.String,int)").
after_calls("%.dnsServer#main(java.lang%.String[])","java.io%.PrintStream#println(java.lang%.Object)").
after_calls("%.dnsServer#main(java.lang%.String[])","java.io%.PrintStream#println(java.lang%.String)").
after_calls("%.dnsServer#main(java.lang%.String[])","java.lang%.System#exit(int)").
after_calls("%.dnsServer#serveTCP(short)","%.dnsServer#generateReply(DNS%.Message)").
after_calls("%.dnsServer#serveTCP(short)","DNS%.Message#<init>(byte[])").
after_calls("%.dnsServer#serveTCP(short)","DNS%.Message#toWire()").
after_calls("%.dnsServer#serveTCP(short)","java.io%.DataInputStream#<init>(java.io%.InputStream)").
after_calls("%.dnsServer#serveTCP(short)","java.io%.DataInputStream#readFully(byte[])").
after_calls("%.dnsServer#serveTCP(short)","java.io%.DataInputStream#readUnsignedShort()").
after_calls("%.dnsServer#serveTCP(short)","java.io%.DataOutputStream#<init>(java.io%.OutputStream)").
after_calls("%.dnsServer#serveTCP(short)","java.io%.DataOutputStream#writeShort(int)").
after_calls("%.dnsServer#serveTCP(short)","java.io%.FilterOutputStream#write(byte[])").
after_calls("%.dnsServer#serveTCP(short)","java.io%.PrintStream#println(java.lang%.String)").
after_calls("%.dnsServer#serveTCP(short)","java.net%.ServerSocket#<init>(int)").
after_calls("%.dnsServer#serveTCP(short)","java.net%.ServerSocket#accept()").
after_calls("%.dnsServer#serveTCP(short)","java.net%.Socket#close()").
after_calls("%.dnsServer#serveTCP(short)","java.net%.Socket#getInputStream()").
after_calls("%.dnsServer#serveTCP(short)","java.net%.Socket#getOutputStream()").
after_calls("%.dnsServer#serveUDP(short)","%.dnsServer#generateReply(DNS%.Message)").
after_calls("%.dnsServer#serveUDP(short)","DNS%.Message#<init>(byte[])").
after_calls("%.dnsServer#serveUDP(short)","DNS%.Message#toWire()").
after_calls("%.dnsServer#serveUDP(short)","java.io%.PrintStream#println(java.lang%.String)").
after_calls("%.dnsServer#serveUDP(short)","java.lang%.System#arraycopy(java.lang%.Object,int,java.lang%.Object,int,int)").
after_calls("%.dnsServer#serveUDP(short)","java.net%.DatagramPacket#<init>(byte[],int)").
after_calls("%.dnsServer#serveUDP(short)","java.net%.DatagramPacket#<init>(byte[],int,java.net%.InetAddress,int)").
after_calls("%.dnsServer#serveUDP(short)","java.net%.DatagramPacket#getAddress()").
after_calls("%.dnsServer#serveUDP(short)","java.net%.DatagramPacket#getData()").
after_calls("%.dnsServer#serveUDP(short)","java.net%.DatagramPacket#getLength()").
after_calls("%.dnsServer#serveUDP(short)","java.net%.DatagramPacket#getPort()").
after_calls("%.dnsServer#serveUDP(short)","java.net%.DatagramSocket#<init>(int)").
after_calls("%.dnsServer#serveUDP(short)","java.net%.DatagramSocket#receive(java.net%.DatagramPacket)").
after_calls("%.dnsServer#serveUDP(short)","java.net%.DatagramSocket#send(java.net%.DatagramPacket)").
after_calls("%.update#<init>(java.io%.InputStream)","%.update#doAdd(DNS%.MyStringTokenizer)").
after_calls("%.update#<init>(java.io%.InputStream)","%.update#doAssert(DNS%.MyStringTokenizer)").
after_calls("%.update#<init>(java.io%.InputStream)","%.update#doDelete(DNS%.MyStringTokenizer)").
after_calls("%.update#<init>(java.io%.InputStream)","%.update#doFile(DNS%.MyStringTokenizer,java.util%.Vector)").
after_calls("%.update#<init>(java.io%.InputStream)","%.update#doGlue(DNS%.MyStringTokenizer)").
after_calls("%.update#<init>(java.io%.InputStream)","%.update#doProhibit(DNS%.MyStringTokenizer)").
after_calls("%.update#<init>(java.io%.InputStream)","%.update#doQuery(DNS%.MyStringTokenizer)").
after_calls("%.update#<init>(java.io%.InputStream)","%.update#doRequire(DNS%.MyStringTokenizer)").
after_calls("%.update#<init>(java.io%.InputStream)","%.update#help(java.lang%.String)").
after_calls("%.update#<init>(java.io%.InputStream)","%.update#sendUpdate()").
after_calls("%.update#<init>(java.io%.InputStream)","DNS%.Header#setOpcode(byte)").
after_calls("%.update#<init>(java.io%.InputStream)","DNS%.IO#readExtendedLine(java.io%.BufferedReader)").
after_calls("%.update#<init>(java.io%.InputStream)","DNS%.Message#<init>()").
after_calls("%.update#<init>(java.io%.InputStream)","DNS%.Message#getHeader()").
after_calls("%.update#<init>(java.io%.InputStream)","DNS%.MyStringTokenizer#<init>(java.lang%.String)").
after_calls("%.update#<init>(java.io%.InputStream)","DNS%.MyStringTokenizer#hasMoreTokens()").
after_calls("%.update#<init>(java.io%.InputStream)","DNS%.MyStringTokenizer#nextToken()").
after_calls("%.update#<init>(java.io%.InputStream)","DNS%.Name#<init>(java.lang%.String)").
after_calls("%.update#<init>(java.io%.InputStream)","DNS%.Resolver#<init>(java.lang%.String)").
after_calls("%.update#<init>(java.io%.InputStream)","DNS%.Resolver#setPort(int)").
after_calls("%.update#<init>(java.io%.InputStream)","DNS%.Resolver#setTCP(boolean)").
after_calls("%.update#<init>(java.io%.InputStream)","DNS%.Resolver#setTSIGKey(java.lang%.String,java.lang%.String)").
after_calls("%.update#<init>(java.io%.InputStream)","DNS%.dns#classValue(java.lang%.String)").
after_calls("%.update#<init>(java.io%.InputStream)","java.io%.BufferedReader#<init>(java.io%.Reader)").
after_calls("%.update#<init>(java.io%.InputStream)","java.io%.InputStreamReader#<init>(java.io%.InputStream)").
after_calls("%.update#<init>(java.io%.InputStream)","java.io%.PrintStream#print(java.lang%.String)").
after_calls("%.update#<init>(java.io%.InputStream)","java.io%.PrintStream#println(java.lang%.String)").
after_calls("%.update#<init>(java.io%.InputStream)","java.lang%.Integer#parseInt(java.lang%.String)").
after_calls("%.update#<init>(java.io%.InputStream)","java.lang%.Short#parseShort(java.lang%.String)").
after_calls("%.update#<init>(java.io%.InputStream)","java.lang%.String#equals(java.lang%.Object)").
after_calls("%.update#<init>(java.io%.InputStream)","java.lang%.System#exit(int)").
after_calls("%.update#<init>(java.io%.InputStream)","java.util%.Vector#<init>()").
after_calls("%.update#<init>(java.io%.InputStream)","java.util%.Vector#addElement(java.lang%.Object)").
after_calls("%.update#<init>(java.io%.InputStream)","java.util%.Vector#isEmpty()").
after_calls("%.update#<init>(java.io%.InputStream)","java.util%.Vector#lastElement()").
after_calls("%.update#<init>(java.io%.InputStream)","java.util%.Vector#removeElement(java.lang%.Object)").
after_calls("%.update#doAdd(DNS%.MyStringTokenizer)","%.update#parseRR(DNS%.MyStringTokenizer,short,int)").
after_calls("%.update#doAdd(DNS%.MyStringTokenizer)","DNS%.Message#addRecord(int,DNS%.Record)").
after_calls("%.update#doAdd(DNS%.MyStringTokenizer)","DNS%.MyStringTokenizer#nextToken()").
after_calls("%.update#doAdd(DNS%.MyStringTokenizer)","DNS%.MyStringTokenizer#putBackToken(java.lang%.String)").
after_calls("%.update#doAdd(DNS%.MyStringTokenizer)","java.io%.PrintStream#println(java.lang%.Object)").
after_calls("%.update#doAdd(DNS%.MyStringTokenizer)","java.io%.PrintStream#println(java.lang%.String)").
after_calls("%.update#doAdd(DNS%.MyStringTokenizer)","java.lang%.String#equals(java.lang%.Object)").
after_calls("%.update#doAdd(DNS%.MyStringTokenizer)","java.lang%.String#startsWith(java.lang%.String)").
after_calls("%.update#doAssert(DNS%.MyStringTokenizer)","DNS%.Header#getCount(int)").
after_calls("%.update#doAssert(DNS%.MyStringTokenizer)","DNS%.Header#getRcode()").
after_calls("%.update#doAssert(DNS%.MyStringTokenizer)","DNS%.Message#getHeader()").
after_calls("%.update#doAssert(DNS%.MyStringTokenizer)","DNS%.MyStringTokenizer#hasMoreTokens()").
after_calls("%.update#doAssert(DNS%.MyStringTokenizer)","DNS%.MyStringTokenizer#nextToken()").
after_calls("%.update#doAssert(DNS%.MyStringTokenizer)","DNS%.dns#rcodeString(int)").
after_calls("%.update#doAssert(DNS%.MyStringTokenizer)","DNS%.dns#rcodeValue(java.lang%.String)").
after_calls("%.update#doAssert(DNS%.MyStringTokenizer)","DNS%.dns#sectionValue(java.lang%.String)").
after_calls("%.update#doAssert(DNS%.MyStringTokenizer)","java.io%.PrintStream#println(java.lang%.String)").
after_calls("%.update#doAssert(DNS%.MyStringTokenizer)","java.lang%.Short#<init>(short)").
after_calls("%.update#doAssert(DNS%.MyStringTokenizer)","java.lang%.Short#parseShort(java.lang%.String)").
after_calls("%.update#doAssert(DNS%.MyStringTokenizer)","java.lang%.Short#toString()").
after_calls("%.update#doAssert(DNS%.MyStringTokenizer)","java.lang%.String#equalsIgnoreCase(java.lang%.String)").
after_calls("%.update#doDelete(DNS%.MyStringTokenizer)","%.update#parseName(DNS%.MyStringTokenizer,short)").
after_calls("%.update#doDelete(DNS%.MyStringTokenizer)","%.update#parseRR(DNS%.MyStringTokenizer,short,int)").
after_calls("%.update#doDelete(DNS%.MyStringTokenizer)","%.update#parseSet(DNS%.MyStringTokenizer,short)").
after_calls("%.update#doDelete(DNS%.MyStringTokenizer)","DNS%.Message#addRecord(int,DNS%.Record)").
after_calls("%.update#doDelete(DNS%.MyStringTokenizer)","DNS%.MyStringTokenizer#nextToken()").
after_calls("%.update#doDelete(DNS%.MyStringTokenizer)","java.io%.PrintStream#println(java.lang%.Object)").
after_calls("%.update#doDelete(DNS%.MyStringTokenizer)","java.io%.PrintStream#println(java.lang%.String)").
after_calls("%.update#doDelete(DNS%.MyStringTokenizer)","java.lang%.String#equals(java.lang%.Object)").
after_calls("%.update#doFile(DNS%.MyStringTokenizer,java.util%.Vector)","DNS%.MyStringTokenizer#nextToken()").
after_calls("%.update#doFile(DNS%.MyStringTokenizer,java.util%.Vector)","java.io%.BufferedReader#<init>(java.io%.Reader)").
after_calls("%.update#doFile(DNS%.MyStringTokenizer,java.util%.Vector)","java.io%.FileInputStream#<init>(java.lang%.String)").
after_calls("%.update#doFile(DNS%.MyStringTokenizer,java.util%.Vector)","java.io%.InputStreamReader#<init>(java.io%.InputStream)").
after_calls("%.update#doFile(DNS%.MyStringTokenizer,java.util%.Vector)","java.io%.PrintStream#println(java.lang%.String)").
after_calls("%.update#doFile(DNS%.MyStringTokenizer,java.util%.Vector)","java.util%.Vector#addElement(java.lang%.Object)").
after_calls("%.update#doGlue(DNS%.MyStringTokenizer)","%.update#parseRR(DNS%.MyStringTokenizer,short,int)").
after_calls("%.update#doGlue(DNS%.MyStringTokenizer)","DNS%.Message#addRecord(int,DNS%.Record)").
after_calls("%.update#doGlue(DNS%.MyStringTokenizer)","DNS%.MyStringTokenizer#nextToken()").
after_calls("%.update#doGlue(DNS%.MyStringTokenizer)","DNS%.MyStringTokenizer#putBackToken(java.lang%.String)").
after_calls("%.update#doGlue(DNS%.MyStringTokenizer)","java.io%.PrintStream#println(java.lang%.Object)").
after_calls("%.update#doGlue(DNS%.MyStringTokenizer)","java.io%.PrintStream#println(java.lang%.String)").
after_calls("%.update#doGlue(DNS%.MyStringTokenizer)","java.lang%.String#equals(java.lang%.Object)").
after_calls("%.update#doGlue(DNS%.MyStringTokenizer)","java.lang%.String#startsWith(java.lang%.String)").
after_calls("%.update#doProhibit(DNS%.MyStringTokenizer)","%.update#parseName(DNS%.MyStringTokenizer,short)").
after_calls("%.update#doProhibit(DNS%.MyStringTokenizer)","%.update#parseRR(DNS%.MyStringTokenizer,short,int)").
after_calls("%.update#doProhibit(DNS%.MyStringTokenizer)","%.update#parseSet(DNS%.MyStringTokenizer,short)").
after_calls("%.update#doProhibit(DNS%.MyStringTokenizer)","DNS%.Message#addRecord(int,DNS%.Record)").
after_calls("%.update#doProhibit(DNS%.MyStringTokenizer)","DNS%.MyStringTokenizer#nextToken()").
after_calls("%.update#doProhibit(DNS%.MyStringTokenizer)","java.io%.PrintStream#println(java.lang%.Object)").
after_calls("%.update#doProhibit(DNS%.MyStringTokenizer)","java.io%.PrintStream#println(java.lang%.String)").
after_calls("%.update#doProhibit(DNS%.MyStringTokenizer)","java.lang%.String#equals(java.lang%.Object)").
after_calls("%.update#doQuery(DNS%.MyStringTokenizer)","%.update#parseSet(DNS%.MyStringTokenizer,short)").
after_calls("%.update#doQuery(DNS%.MyStringTokenizer)","DNS%.Header#setFlag(int)").
after_calls("%.update#doQuery(DNS%.MyStringTokenizer)","DNS%.Header#setOpcode(byte)").
after_calls("%.update#doQuery(DNS%.MyStringTokenizer)","DNS%.Message#<init>()").
after_calls("%.update#doQuery(DNS%.MyStringTokenizer)","DNS%.Message#addRecord(int,DNS%.Record)").
after_calls("%.update#doQuery(DNS%.MyStringTokenizer)","DNS%.Message#getHeader()").
after_calls("%.update#doQuery(DNS%.MyStringTokenizer)","DNS%.Record#getType()").
after_calls("%.update#doQuery(DNS%.MyStringTokenizer)","DNS%.Resolver#<init>(java.lang%.String)").
after_calls("%.update#doQuery(DNS%.MyStringTokenizer)","DNS%.Resolver#send(DNS%.Message)").
after_calls("%.update#doQuery(DNS%.MyStringTokenizer)","DNS%.Resolver#sendAXFR(DNS%.Message)").
after_calls("%.update#doQuery(DNS%.MyStringTokenizer)","java.io%.PrintStream#println(java.lang%.Object)").
after_calls("%.update#doRequire(DNS%.MyStringTokenizer)","%.update#parseName(DNS%.MyStringTokenizer,short)").
after_calls("%.update#doRequire(DNS%.MyStringTokenizer)","%.update#parseRR(DNS%.MyStringTokenizer,short,int)").
after_calls("%.update#doRequire(DNS%.MyStringTokenizer)","%.update#parseSet(DNS%.MyStringTokenizer,short)").
after_calls("%.update#doRequire(DNS%.MyStringTokenizer)","DNS%.Message#addRecord(int,DNS%.Record)").
after_calls("%.update#doRequire(DNS%.MyStringTokenizer)","DNS%.MyStringTokenizer#nextToken()").
after_calls("%.update#doRequire(DNS%.MyStringTokenizer)","java.io%.PrintStream#println(java.lang%.Object)").
after_calls("%.update#doRequire(DNS%.MyStringTokenizer)","java.io%.PrintStream#println(java.lang%.String)").
after_calls("%.update#doRequire(DNS%.MyStringTokenizer)","java.lang%.String#equals(java.lang%.Object)").
after_calls("%.update#help(java.lang%.String)","%.update#helpAttributes()").
after_calls("%.update#help(java.lang%.String)","%.update#helpData()").
after_calls("%.update#help(java.lang%.String)","%.update#helpOperations()").
after_calls("%.update#help(java.lang%.String)","%.update#helpResolver()").
after_calls("%.update#help(java.lang%.String)","java.io%.PrintStream#println(java.lang%.String)").
after_calls("%.update#help(java.lang%.String)","java.lang%.String#equalsIgnoreCase(java.lang%.String)").
after_calls("%.update#helpAttributes()","java.io%.PrintStream#println(java.lang%.String)").
after_calls("%.update#helpData()","java.io%.PrintStream#println(java.lang%.String)").
after_calls("%.update#helpOperations()","java.io%.PrintStream#println(java.lang%.String)").
after_calls("%.update#helpResolver()","java.io%.PrintStream#println(java.lang%.String)").
after_calls("%.update#main(java.lang%.String[])","%.update#<init>(java.io%.InputStream)").
after_calls("%.update#main(java.lang%.String[])","java.io%.FileInputStream#<init>(java.lang%.String)").
after_calls("%.update#main(java.lang%.String[])","java.io%.PrintStream#println(java.lang%.String)").
after_calls("%.update#main(java.lang%.String[])","java.lang%.System#exit(int)").
after_calls("%.update#parseName(DNS%.MyStringTokenizer,short)","DNS%.MyStringTokenizer#nextToken()").
after_calls("%.update#parseName(DNS%.MyStringTokenizer,short)","DNS%.Name#<init>(java.lang%.String,DNS%.Name)").
after_calls("%.update#parseName(DNS%.MyStringTokenizer,short)","DNS%.Record#newRecord(DNS%.Name,short,short,int)").
after_calls("%.update#parseRR(DNS%.MyStringTokenizer,short,int)","DNS%.MyStringTokenizer#nextToken()").
after_calls("%.update#parseRR(DNS%.MyStringTokenizer,short,int)","DNS%.Name#<init>(java.lang%.String,DNS%.Name)").
after_calls("%.update#parseRR(DNS%.MyStringTokenizer,short,int)","DNS%.Record#fromString(DNS%.Name,short,short,int,DNS%.MyStringTokenizer,DNS%.Name)").
after_calls("%.update#parseRR(DNS%.MyStringTokenizer,short,int)","DNS%.dns#classValue(java.lang%.String)").
after_calls("%.update#parseRR(DNS%.MyStringTokenizer,short,int)","DNS%.dns#typeValue(java.lang%.String)").
after_calls("%.update#parseRR(DNS%.MyStringTokenizer,short,int)","java.io%.IOException#<init>(java.lang%.String)").
after_calls("%.update#parseRR(DNS%.MyStringTokenizer,short,int)","java.lang%.Integer#parseInt(java.lang%.String)").
after_calls("%.update#parseSet(DNS%.MyStringTokenizer,short)","DNS%.MyStringTokenizer#nextToken()").
after_calls("%.update#parseSet(DNS%.MyStringTokenizer,short)","DNS%.Name#<init>(java.lang%.String,DNS%.Name)").
after_calls("%.update#parseSet(DNS%.MyStringTokenizer,short)","DNS%.Record#newRecord(DNS%.Name,short,short,int)").
after_calls("%.update#parseSet(DNS%.MyStringTokenizer,short)","DNS%.dns#typeValue(java.lang%.String)").
after_calls("%.update#parseSet(DNS%.MyStringTokenizer,short)","java.io%.IOException#<init>(java.lang%.String)").
after_calls("%.update#sendUpdate()","DNS%.Header#getCount(int)").
after_calls("%.update#sendUpdate()","DNS%.Message#addRecord(int,DNS%.Record)").
after_calls("%.update#sendUpdate()","DNS%.Message#getHeader()").
after_calls("%.update#sendUpdate()","DNS%.Message#getSection(int)").
after_calls("%.update#sendUpdate()","DNS%.Name#<init>(DNS%.Name,int)").
after_calls("%.update#sendUpdate()","DNS%.Record#getDClass()").
after_calls("%.update#sendUpdate()","DNS%.Record#getName()").
after_calls("%.update#sendUpdate()","DNS%.Record#newRecord(DNS%.Name,short,short)").
after_calls("%.update#sendUpdate()","DNS%.Resolver#send(DNS%.Message)").
after_calls("%.update#sendUpdate()","java.io%.PrintStream#println(java.lang%.Object)").
after_calls("%.update#sendUpdate()","java.io%.PrintStream#println(java.lang%.String)").
after_calls("%.update#sendUpdate()","java.util%.Enumeration#nextElement()").
after_calls("DNS%.ARecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)","DNS%.MyStringTokenizer#nextToken()").
after_calls("DNS%.ARecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)","DNS%.Record#<init>(DNS%.Name,short,short,int)").
after_calls("DNS%.ARecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)","java.io%.PrintStream#println(java.lang%.String)").
after_calls("DNS%.ARecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)","java.lang%.String#equals(java.lang%.Object)").
after_calls("DNS%.ARecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)","java.lang%.System#exit(int)").
after_calls("DNS%.ARecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)","java.net%.InetAddress#equals(java.lang%.Object)").
after_calls("DNS%.ARecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)","java.net%.InetAddress#getByName(java.lang%.String)").
after_calls("DNS%.ARecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)","java.net%.InetAddress#getLocalHost()").
after_calls("DNS%.ARecord#<init>(DNS%.Name,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)","DNS%.Record#<init>(DNS%.Name,short,short,int)").
after_calls("DNS%.ARecord#<init>(DNS%.Name,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)","DNS.utils%.CountedDataInputStream#read(byte[])").
after_calls("DNS%.ARecord#<init>(DNS%.Name,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)","java.io%.PrintStream#println(java.lang%.String)").
after_calls("DNS%.ARecord#<init>(DNS%.Name,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)","java.lang%.String#<init>()").
after_calls("DNS%.ARecord#<init>(DNS%.Name,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)","java.net%.InetAddress#getByName(java.lang%.String)").
after_calls("DNS%.ARecord#<init>(DNS%.Name,short,int,java.net%.InetAddress)","DNS%.Record#<init>(DNS%.Name,short,short,int)").
after_calls("DNS%.ARecord#rrToWire(DNS%.Compression)","java.net%.InetAddress#getAddress()").
after_calls("DNS%.ARecord#toString()","DNS%.Record#toStringNoData()").
after_calls("DNS%.ARecord#toString()","java.lang%.StringBuffer#append(java.lang%.String)").
after_calls("DNS%.ARecord#toString()","java.lang%.StringBuffer#toString()").
after_calls("DNS%.ARecord#toString()","java.net%.InetAddress#getHostAddress()").
after_calls("DNS%.CERTRecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)","DNS%.MyStringTokenizer#nextToken()").
after_calls("DNS%.CERTRecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)","DNS%.Record#<init>(DNS%.Name,short,short,int)").
after_calls("DNS%.CERTRecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)","DNS.utils%.base64#fromString(java.lang%.String)").
after_calls("DNS%.CERTRecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)","java.lang%.Integer#parseInt(java.lang%.String)").
after_calls("DNS%.CERTRecord#<init>(DNS%.Name,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)","DNS%.Record#<init>(DNS%.Name,short,short,int)").
after_calls("DNS%.CERTRecord#<init>(DNS%.Name,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)","DNS.utils%.CountedDataInputStream#read(byte[])").
after_calls("DNS%.CERTRecord#<init>(DNS%.Name,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)","DNS.utils%.CountedDataInputStream#readByte()").
after_calls("DNS%.CERTRecord#<init>(DNS%.Name,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)","DNS.utils%.CountedDataInputStream#readShort()").
after_calls("DNS%.CERTRecord#<init>(DNS%.Name,short,int,int,int,int,byte[])","DNS%.Record#<init>(DNS%.Name,short,short,int)").
after_calls("DNS%.CERTRecord#rrToWire(DNS%.Compression)","DNS.utils%.CountedDataOutputStream#<init>(java.io%.OutputStream)").
after_calls("DNS%.CERTRecord#rrToWire(DNS%.Compression)","DNS.utils%.CountedDataOutputStream#write(byte[])").
after_calls("DNS%.CERTRecord#rrToWire(DNS%.Compression)","DNS.utils%.CountedDataOutputStream#writeByte(int)").
after_calls("DNS%.CERTRecord#rrToWire(DNS%.Compression)","DNS.utils%.CountedDataOutputStream#writeShort(int)").
after_calls("DNS%.CERTRecord#rrToWire(DNS%.Compression)","java.io%.ByteArrayOutputStream#<init>()").
after_calls("DNS%.CERTRecord#rrToWire(DNS%.Compression)","java.io%.ByteArrayOutputStream#toByteArray()").
after_calls("DNS%.CERTRecord#toString()","DNS%.IO#formatBase64String(java.lang%.String,int,java.lang%.String,boolean)").
after_calls("DNS%.CERTRecord#toString()","DNS%.Record#toStringNoData()").
after_calls("DNS%.CERTRecord#toString()","DNS.utils%.base64#toString(byte[])").
after_calls("DNS%.CERTRecord#toString()","java.lang%.StringBuffer#append(int)").
after_calls("DNS%.CERTRecord#toString()","java.lang%.StringBuffer#append(java.lang%.String)").
after_calls("DNS%.CERTRecord#toString()","java.lang%.StringBuffer#toString()").
after_calls("DNS%.CNAMERecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)","DNS%.NS_CNAME_PTRRecord#<init>(DNS%.Name,short,short,int,DNS%.MyStringTokenizer,DNS%.Name)").
after_calls("DNS%.CNAMERecord#<init>(DNS%.Name,short,int,DNS%.Name)","DNS%.NS_CNAME_PTRRecord#<init>(DNS%.Name,short,short,int,DNS%.Name)").
after_calls("DNS%.CNAMERecord#<init>(DNS%.Name,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)","DNS%.NS_CNAME_PTRRecord#<init>(DNS%.Name,short,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)").
after_calls("DNS%.Compression#<init>()","java.util%.Hashtable#<init>()").
after_calls("DNS%.Compression#add(int,DNS%.Name)","java.lang%.Integer#<init>(int)").
after_calls("DNS%.Compression#add(int,DNS%.Name)","java.util%.Hashtable#put(java.lang%.Object,java.lang%.Object)").
after_calls("DNS%.Compression#get(DNS%.Name)","java.lang%.Integer#intValue()").
after_calls("DNS%.Compression#get(DNS%.Name)","java.util%.Hashtable#get(java.lang%.Object)").
after_calls("DNS%.Compression#get(int)","java.lang%.Integer#<init>(int)").
after_calls("DNS%.Compression#get(int)","java.util%.Hashtable#get(java.lang%.Object)").
after_calls("DNS%.EDNS#newOPT(int)","DNS%.OPTRecord#<init>(DNS%.Name,short,int)").
after_calls("DNS%.FindResolver#find()","DNS%.FindResolver#findProperty()").
after_calls("DNS%.FindResolver#find()","DNS%.FindResolver#findUnix()").
after_calls("DNS%.FindResolver#findProperty()","java.lang%.System#getProperty(java.lang%.String)").
after_calls("DNS%.FindResolver#findUnix()","java.io%.BufferedReader#<init>(java.io%.Reader)").
after_calls("DNS%.FindResolver#findUnix()","java.io%.BufferedReader#readLine()").
after_calls("DNS%.FindResolver#findUnix()","java.io%.FileInputStream#<init>(java.lang%.String)").
after_calls("DNS%.FindResolver#findUnix()","java.io%.InputStreamReader#<init>(java.io%.InputStream)").
after_calls("DNS%.FindResolver#findUnix()","java.lang%.String#startsWith(java.lang%.String)").
after_calls("DNS%.FindResolver#findUnix()","java.util%.StringTokenizer#<init>(java.lang%.String)").
after_calls("DNS%.FindResolver#findUnix()","java.util%.StringTokenizer#nextToken()").
after_calls("DNS%.HINFORecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)","DNS%.MyStringTokenizer#nextToken()").
after_calls("DNS%.HINFORecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)","DNS%.Record#<init>(DNS%.Name,short,short,int)").
after_calls("DNS%.HINFORecord#<init>(DNS%.Name,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)","DNS%.Record#<init>(DNS%.Name,short,short,int)").
after_calls("DNS%.HINFORecord#<init>(DNS%.Name,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)","DNS.utils%.CountedDataInputStream#readString()").
after_calls("DNS%.HINFORecord#<init>(DNS%.Name,short,int,java.lang%.String,java.lang%.String)","DNS%.Record#<init>(DNS%.Name,short,short,int)").
after_calls("DNS%.HINFORecord#rrToWire(DNS%.Compression)","DNS.utils%.CountedDataOutputStream#<init>(java.io%.OutputStream)").
after_calls("DNS%.HINFORecord#rrToWire(DNS%.Compression)","DNS.utils%.CountedDataOutputStream#writeString(java.lang%.String)").
after_calls("DNS%.HINFORecord#rrToWire(DNS%.Compression)","java.io%.ByteArrayOutputStream#<init>()").
after_calls("DNS%.HINFORecord#rrToWire(DNS%.Compression)","java.io%.ByteArrayOutputStream#toByteArray()").
after_calls("DNS%.HINFORecord#toString()","DNS%.Record#toStringNoData()").
after_calls("DNS%.HINFORecord#toString()","java.lang%.StringBuffer#append(java.lang%.String)").
after_calls("DNS%.HINFORecord#toString()","java.lang%.StringBuffer#toString()").
after_calls("DNS%.Header#<init>(DNS.utils%.CountedDataInputStream)","DNS%.Header#<init>(int)").
after_calls("DNS%.Header#<init>(DNS.utils%.CountedDataInputStream)","DNS%.Header#readFlags(DNS.utils%.CountedDataInputStream)").
after_calls("DNS%.Header#<init>(DNS.utils%.CountedDataInputStream)","DNS.utils%.CountedDataInputStream#readShort()").
after_calls("DNS%.Header#<init>(DNS.utils%.CountedDataInputStream)","DNS.utils%.CountedDataInputStream#readUnsignedShort()").
after_calls("DNS%.Header#printFlags()","DNS%.Header#getFlag(int)").
after_calls("DNS%.Header#printFlags()","DNS%.dns#flagString(int)").
after_calls("DNS%.Header#printFlags()","java.lang%.StringBuffer#<init>()").
after_calls("DNS%.Header#printFlags()","java.lang%.StringBuffer#append(java.lang%.String)").
after_calls("DNS%.Header#printFlags()","java.lang%.StringBuffer#toString()").
after_calls("DNS%.Header#randomID()","java.util%.Random#<init>()").
after_calls("DNS%.Header#randomID()","java.util%.Random#nextInt()").
after_calls("DNS%.Header#readFlags(DNS.utils%.CountedDataInputStream)","DNS.utils%.CountedDataInputStream#readUnsignedByte()").
after_calls("DNS%.Header#toString()","DNS%.Header#getCount(int)").
after_calls("DNS%.Header#toString()","DNS%.Header#getID()").
after_calls("DNS%.Header#toString()","DNS%.Header#getOpcode()").
after_calls("DNS%.Header#toString()","DNS%.Header#getRcode()").
after_calls("DNS%.Header#toString()","DNS%.Header#printFlags()").
after_calls("DNS%.Header#toString()","DNS%.dns#opcodeString(int)").
after_calls("DNS%.Header#toString()","DNS%.dns#rcodeString(int)").
after_calls("DNS%.Header#toString()","DNS%.dns#sectionString(int)").
after_calls("DNS%.Header#toString()","java.lang%.StringBuffer#<init>()").
after_calls("DNS%.Header#toString()","java.lang%.StringBuffer#append(java.lang%.String)").
after_calls("DNS%.Header#toString()","java.lang%.StringBuffer#toString()").
after_calls("DNS%.Header#toWire()","DNS%.Header#toWire(DNS.utils%.CountedDataOutputStream)").
after_calls("DNS%.Header#toWire()","DNS.utils%.CountedDataOutputStream#<init>(java.io%.OutputStream)").
after_calls("DNS%.Header#toWire()","java.io%.ByteArrayOutputStream#<init>()").
after_calls("DNS%.Header#toWire()","java.io%.ByteArrayOutputStream#toByteArray()").
after_calls("DNS%.Header#toWire(DNS.utils%.CountedDataOutputStream)","DNS%.Header#writeFlags(DNS.utils%.CountedDataOutputStream)").
after_calls("DNS%.Header#toWire(DNS.utils%.CountedDataOutputStream)","DNS.utils%.CountedDataOutputStream#writeShort(int)").
after_calls("DNS%.Header#writeFlags(DNS.utils%.CountedDataOutputStream)","DNS.utils%.CountedDataOutputStream#writeByte(int)").
after_calls("DNS%.IO#formatBase64String(java.lang%.String,int,java.lang%.String,boolean)","java.lang%.String#length()").
after_calls("DNS%.IO#formatBase64String(java.lang%.String,int,java.lang%.String,boolean)","java.lang%.String#substring(int)").
after_calls("DNS%.IO#formatBase64String(java.lang%.String,int,java.lang%.String,boolean)","java.lang%.String#substring(int,int)").
after_calls("DNS%.IO#formatBase64String(java.lang%.String,int,java.lang%.String,boolean)","java.lang%.StringBuffer#<init>()").
after_calls("DNS%.IO#formatBase64String(java.lang%.String,int,java.lang%.String,boolean)","java.lang%.StringBuffer#append(java.lang%.String)").
after_calls("DNS%.IO#formatBase64String(java.lang%.String,int,java.lang%.String,boolean)","java.lang%.StringBuffer#toString()").
after_calls("DNS%.IO#readExtendedLine(java.io%.BufferedReader)","DNS%.IO#stripTrailing(java.lang%.String)").
after_calls("DNS%.IO#readExtendedLine(java.io%.BufferedReader)","java.io%.BufferedReader#readLine()").
after_calls("DNS%.IO#readExtendedLine(java.io%.BufferedReader)","java.lang%.String#endsWith(java.lang%.String)").
after_calls("DNS%.IO#readExtendedLine(java.io%.BufferedReader)","java.lang%.String#length()").
after_calls("DNS%.IO#readExtendedLine(java.io%.BufferedReader)","java.lang%.String#substring(int,int)").
after_calls("DNS%.IO#readExtendedLine(java.io%.BufferedReader)","java.lang%.StringBuffer#<init>(java.lang%.String)").
after_calls("DNS%.IO#readExtendedLine(java.io%.BufferedReader)","java.lang%.StringBuffer#append(java.lang%.String)").
after_calls("DNS%.IO#readExtendedLine(java.io%.BufferedReader)","java.lang%.StringBuffer#toString()").
after_calls("DNS%.IO#stripTrailing(java.lang%.String)","java.lang%.Character#isWhitespace(char)").
after_calls("DNS%.IO#stripTrailing(java.lang%.String)","java.lang%.String#charAt(int)").
after_calls("DNS%.IO#stripTrailing(java.lang%.String)","java.lang%.String#lastIndexOf(int)").
after_calls("DNS%.IO#stripTrailing(java.lang%.String)","java.lang%.String#length()").
after_calls("DNS%.IO#stripTrailing(java.lang%.String)","java.lang%.String#substring(int,int)").
after_calls("DNS%.KEYRecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)","DNS%.MyStringTokenizer#nextToken()").
after_calls("DNS%.KEYRecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)","DNS%.Record#<init>(DNS%.Name,short,short,int)").
after_calls("DNS%.KEYRecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)","DNS.utils%.base64#fromString(java.lang%.String)").
after_calls("DNS%.KEYRecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)","java.lang%.Integer#decode(java.lang%.String)").
after_calls("DNS%.KEYRecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)","java.lang%.Integer#intValue()").
after_calls("DNS%.KEYRecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)","java.lang%.Integer#parseInt(java.lang%.String)").
after_calls("DNS%.KEYRecord#<init>(DNS%.Name,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)","DNS%.Record#<init>(DNS%.Name,short,short,int)").
after_calls("DNS%.KEYRecord#<init>(DNS%.Name,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)","DNS.utils%.CountedDataInputStream#read(byte[])").
after_calls("DNS%.KEYRecord#<init>(DNS%.Name,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)","DNS.utils%.CountedDataInputStream#readByte()").
after_calls("DNS%.KEYRecord#<init>(DNS%.Name,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)","DNS.utils%.CountedDataInputStream#readShort()").
after_calls("DNS%.KEYRecord#<init>(DNS%.Name,short,int,int,int,int,byte[])","DNS%.Record#<init>(DNS%.Name,short,short,int)").
after_calls("DNS%.KEYRecord#rrToWire(DNS%.Compression)","DNS.utils%.CountedDataOutputStream#<init>(java.io%.OutputStream)").
after_calls("DNS%.KEYRecord#rrToWire(DNS%.Compression)","DNS.utils%.CountedDataOutputStream#write(byte[])").
after_calls("DNS%.KEYRecord#rrToWire(DNS%.Compression)","DNS.utils%.CountedDataOutputStream#writeByte(int)").
after_calls("DNS%.KEYRecord#rrToWire(DNS%.Compression)","DNS.utils%.CountedDataOutputStream#writeShort(int)").
after_calls("DNS%.KEYRecord#rrToWire(DNS%.Compression)","java.io%.ByteArrayOutputStream#<init>()").
after_calls("DNS%.KEYRecord#rrToWire(DNS%.Compression)","java.io%.ByteArrayOutputStream#toByteArray()").
after_calls("DNS%.KEYRecord#toString()","DNS%.IO#formatBase64String(java.lang%.String,int,java.lang%.String,boolean)").
after_calls("DNS%.KEYRecord#toString()","DNS%.Record#toStringNoData()").
after_calls("DNS%.KEYRecord#toString()","DNS.utils%.base64#toString(byte[])").
after_calls("DNS%.KEYRecord#toString()","java.lang%.Integer#toHexString(int)").
after_calls("DNS%.KEYRecord#toString()","java.lang%.StringBuffer#append(int)").
after_calls("DNS%.KEYRecord#toString()","java.lang%.StringBuffer#append(java.lang%.String)").
after_calls("DNS%.KEYRecord#toString()","java.lang%.StringBuffer#toString()").
after_calls("DNS%.MXRecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)","DNS%.MyStringTokenizer#nextToken()").
after_calls("DNS%.MXRecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)","DNS%.Name#<init>(java.lang%.String,DNS%.Name)").
after_calls("DNS%.MXRecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)","DNS%.Record#<init>(DNS%.Name,short,short,int)").
after_calls("DNS%.MXRecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)","java.lang%.Short#parseShort(java.lang%.String)").
after_calls("DNS%.MXRecord#<init>(DNS%.Name,short,int,int,DNS%.Name)","DNS%.Record#<init>(DNS%.Name,short,short,int)").
after_calls("DNS%.MXRecord#<init>(DNS%.Name,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)","DNS%.Name#<init>(DNS.utils%.CountedDataInputStream,DNS%.Compression)").
after_calls("DNS%.MXRecord#<init>(DNS%.Name,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)","DNS%.Record#<init>(DNS%.Name,short,short,int)").
after_calls("DNS%.MXRecord#<init>(DNS%.Name,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)","DNS.utils%.CountedDataInputStream#readUnsignedShort()").
after_calls("DNS%.MXRecord#rrToWire(DNS%.Compression)","DNS%.Name#toWire(DNS.utils%.CountedDataOutputStream,DNS%.Compression)").
after_calls("DNS%.MXRecord#rrToWire(DNS%.Compression)","DNS.utils%.CountedDataOutputStream#<init>(java.io%.OutputStream)").
after_calls("DNS%.MXRecord#rrToWire(DNS%.Compression)","DNS.utils%.CountedDataOutputStream#writeShort(int)").
after_calls("DNS%.MXRecord#rrToWire(DNS%.Compression)","java.io%.ByteArrayOutputStream#<init>()").
after_calls("DNS%.MXRecord#rrToWire(DNS%.Compression)","java.io%.ByteArrayOutputStream#toByteArray()").
after_calls("DNS%.MXRecord#toString()","DNS%.Record#toStringNoData()").
after_calls("DNS%.MXRecord#toString()","java.lang%.StringBuffer#append(int)").
after_calls("DNS%.MXRecord#toString()","java.lang%.StringBuffer#append(java.lang%.Object)").
after_calls("DNS%.MXRecord#toString()","java.lang%.StringBuffer#append(java.lang%.String)").
after_calls("DNS%.MXRecord#toString()","java.lang%.StringBuffer#toString()").
after_calls("DNS%.Message#<init>()","DNS%.Header#randomID()").
after_calls("DNS%.Message#<init>()","DNS%.Message#<init>(int)").
after_calls("DNS%.Message#<init>(DNS.utils%.CountedDataInputStream)","DNS%.Compression#<init>()").
after_calls("DNS%.Message#<init>(DNS.utils%.CountedDataInputStream)","DNS%.Header#<init>(DNS.utils%.CountedDataInputStream)").
after_calls("DNS%.Message#<init>(DNS.utils%.CountedDataInputStream)","DNS%.Header#getCount(int)").
after_calls("DNS%.Message#<init>(DNS.utils%.CountedDataInputStream)","DNS%.Message#<init>()").
after_calls("DNS%.Message#<init>(DNS.utils%.CountedDataInputStream)","DNS%.Record#fromWire(DNS.utils%.CountedDataInputStream,int,DNS%.Compression)").
after_calls("DNS%.Message#<init>(DNS.utils%.CountedDataInputStream)","DNS.utils%.CountedDataInputStream#getPos()").
after_calls("DNS%.Message#<init>(DNS.utils%.CountedDataInputStream)","java.util%.Vector#addElement(java.lang%.Object)").
after_calls("DNS%.Message#<init>(byte[])","DNS%.Message#<init>(DNS.utils%.CountedDataInputStream)").
after_calls("DNS%.Message#<init>(byte[])","DNS.utils%.CountedDataInputStream#<init>(java.io%.InputStream)").
after_calls("DNS%.Message#<init>(byte[])","java.io%.ByteArrayInputStream#<init>(byte[])").
after_calls("DNS%.Message#<init>(int)","DNS%.Header#<init>(int)").
after_calls("DNS%.Message#<init>(int)","java.util%.Vector#<init>()").
after_calls("DNS%.Message#addRecord(int,DNS%.Record)","DNS%.Header#incCount(int)").
after_calls("DNS%.Message#addRecord(int,DNS%.Record)","java.util%.Vector#addElement(java.lang%.Object)").
after_calls("DNS%.Message#getSection(int)","java.util%.Vector#elements()").
after_calls("DNS%.Message#getTSIG()","DNS%.Header#getCount(int)").
after_calls("DNS%.Message#getTSIG()","java.util%.Vector#elementAt(int)").
after_calls("DNS%.Message#removeRecord(int,DNS%.Record)","DNS%.Header#decCount(int)").
after_calls("DNS%.Message#removeRecord(int,DNS%.Record)","java.util%.Vector#removeElement(java.lang%.Object)").
after_calls("DNS%.Message#sectionToString(int)","DNS%.Message#getSection(int)").
after_calls("DNS%.Message#sectionToString(int)","DNS%.dns#classString(int)").
after_calls("DNS%.Message#sectionToString(int)","DNS%.dns#longSectionString(int)").
after_calls("DNS%.Message#sectionToString(int)","DNS%.dns#typeString(int)").
after_calls("DNS%.Message#sectionToString(int)","java.lang%.StringBuffer#<init>()").
after_calls("DNS%.Message#sectionToString(int)","java.lang%.StringBuffer#append(java.lang%.Object)").
after_calls("DNS%.Message#sectionToString(int)","java.lang%.StringBuffer#append(java.lang%.String)").
after_calls("DNS%.Message#sectionToString(int)","java.lang%.StringBuffer#toString()").
after_calls("DNS%.Message#sectionToString(int)","java.util%.Enumeration#hasMoreElements()").
after_calls("DNS%.Message#sectionToString(int)","java.util%.Enumeration#nextElement()").
after_calls("DNS%.Message#toString()","DNS%.Message#getHeader()").
after_calls("DNS%.Message#toString()","DNS%.Message#numBytes()").
after_calls("DNS%.Message#toString()","DNS%.Message#sectionToString(int)").
after_calls("DNS%.Message#toString()","java.lang%.StringBuffer#<init>()").
after_calls("DNS%.Message#toString()","java.lang%.StringBuffer#append(java.lang%.String)").
after_calls("DNS%.Message#toString()","java.lang%.StringBuffer#toString()").
after_calls("DNS%.Message#toWire()","DNS%.Message#toWire(DNS.utils%.CountedDataOutputStream)").
after_calls("DNS%.Message#toWire()","DNS.utils%.CountedDataOutputStream#<init>(java.io%.OutputStream)").
after_calls("DNS%.Message#toWire()","java.io%.ByteArrayOutputStream#<init>()").
after_calls("DNS%.Message#toWire()","java.io%.ByteArrayOutputStream#toByteArray()").
after_calls("DNS%.Message#toWire(DNS.utils%.CountedDataOutputStream)","DNS%.Compression#<init>()").
after_calls("DNS%.Message#toWire(DNS.utils%.CountedDataOutputStream)","DNS%.Header#toWire(DNS.utils%.CountedDataOutputStream)").
after_calls("DNS%.Message#toWire(DNS.utils%.CountedDataOutputStream)","DNS%.Record#toWire(DNS.utils%.CountedDataOutputStream,int,DNS%.Compression)").
after_calls("DNS%.Message#toWire(DNS.utils%.CountedDataOutputStream)","java.util%.Vector#elementAt(int)").
after_calls("DNS%.Message#toWire(DNS.utils%.CountedDataOutputStream)","java.util%.Vector#size()").
after_calls("DNS%.Message#toWireCanonical(DNS.utils%.CountedDataOutputStream)","DNS%.Header#toWire(DNS.utils%.CountedDataOutputStream)").
after_calls("DNS%.Message#toWireCanonical(DNS.utils%.CountedDataOutputStream)","DNS%.Record#toWireCanonical(DNS.utils%.CountedDataOutputStream,int)").
after_calls("DNS%.Message#toWireCanonical(DNS.utils%.CountedDataOutputStream)","java.util%.Vector#elementAt(int)").
after_calls("DNS%.Message#toWireCanonical(DNS.utils%.CountedDataOutputStream)","java.util%.Vector#size()").
after_calls("DNS%.MyStringTokenizer#<init>(java.lang%.String)","DNS%.MyStringTokenizer#<init>(java.lang%.String,java.lang%.String,boolean)").
after_calls("DNS%.MyStringTokenizer#<init>(java.lang%.String,java.lang%.String)","DNS%.MyStringTokenizer#<init>(java.lang%.String,java.lang%.String,boolean)").
after_calls("DNS%.MyStringTokenizer#<init>(java.lang%.String,java.lang%.String,boolean)","java.lang%.String#getChars(int,int,char[],int)").
after_calls("DNS%.MyStringTokenizer#<init>(java.lang%.String,java.lang%.String,boolean)","java.lang%.String#length()").
after_calls("DNS%.MyStringTokenizer#hasMoreElements()","DNS%.MyStringTokenizer#hasMoreTokens()").
after_calls("DNS%.MyStringTokenizer#hasMoreTokens()","DNS%.MyStringTokenizer#isDelim(int)").
after_calls("DNS%.MyStringTokenizer#isDelim(int)","java.lang%.String#indexOf(int)").
after_calls("DNS%.MyStringTokenizer#main(java.lang%.String[])","DNS%.MyStringTokenizer#<init>(java.lang%.String)").
after_calls("DNS%.MyStringTokenizer#main(java.lang%.String[])","DNS%.MyStringTokenizer#hasMoreTokens()").
after_calls("DNS%.MyStringTokenizer#main(java.lang%.String[])","DNS%.MyStringTokenizer#nextToken()").
after_calls("DNS%.MyStringTokenizer#main(java.lang%.String[])","java.io%.BufferedReader#<init>(java.io%.Reader)").
after_calls("DNS%.MyStringTokenizer#main(java.lang%.String[])","java.io%.BufferedReader#readLine()").
after_calls("DNS%.MyStringTokenizer#main(java.lang%.String[])","java.io%.InputStreamReader#<init>(java.io%.InputStream)").
after_calls("DNS%.MyStringTokenizer#main(java.lang%.String[])","java.io%.PrintStream#println(java.lang%.String)").
after_calls("DNS%.MyStringTokenizer#nextElement()","DNS%.MyStringTokenizer#nextToken()").
after_calls("DNS%.MyStringTokenizer#nextToken()","DNS%.MyStringTokenizer#isDelim(int)").
after_calls("DNS%.MyStringTokenizer#nextToken()","java.lang%.Character#digit(char,int)").
after_calls("DNS%.MyStringTokenizer#nextToken()","java.lang%.Integer#parseInt(java.lang%.String)").
after_calls("DNS%.MyStringTokenizer#nextToken()","java.lang%.String#<init>(char[],int,int)").
after_calls("DNS%.MyStringTokenizer#nextToken()","java.lang%.StringBuffer#<init>()").
after_calls("DNS%.MyStringTokenizer#nextToken()","java.lang%.StringBuffer#append(char)").
after_calls("DNS%.MyStringTokenizer#nextToken()","java.lang%.StringBuffer#toString()").
after_calls("DNS%.NSRecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)","DNS%.NS_CNAME_PTRRecord#<init>(DNS%.Name,short,short,int,DNS%.MyStringTokenizer,DNS%.Name)").
after_calls("DNS%.NSRecord#<init>(DNS%.Name,short,int,DNS%.Name)","DNS%.NS_CNAME_PTRRecord#<init>(DNS%.Name,short,short,int,DNS%.Name)").
after_calls("DNS%.NSRecord#<init>(DNS%.Name,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)","DNS%.NS_CNAME_PTRRecord#<init>(DNS%.Name,short,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)").
after_calls("DNS%.NS_CNAME_PTRRecord#<init>(DNS%.Name,short,short,int,DNS%.MyStringTokenizer,DNS%.Name)","DNS%.MyStringTokenizer#nextToken()").
after_calls("DNS%.NS_CNAME_PTRRecord#<init>(DNS%.Name,short,short,int,DNS%.MyStringTokenizer,DNS%.Name)","DNS%.Name#<init>(java.lang%.String,DNS%.Name)").
after_calls("DNS%.NS_CNAME_PTRRecord#<init>(DNS%.Name,short,short,int,DNS%.MyStringTokenizer,DNS%.Name)","DNS%.Record#<init>(DNS%.Name,short,short,int)").
after_calls("DNS%.NS_CNAME_PTRRecord#<init>(DNS%.Name,short,short,int,DNS%.Name)","DNS%.Record#<init>(DNS%.Name,short,short,int)").
after_calls("DNS%.NS_CNAME_PTRRecord#<init>(DNS%.Name,short,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)","DNS%.Name#<init>(DNS.utils%.CountedDataInputStream,DNS%.Compression)").
after_calls("DNS%.NS_CNAME_PTRRecord#<init>(DNS%.Name,short,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)","DNS%.Record#<init>(DNS%.Name,short,short,int)").
after_calls("DNS%.NS_CNAME_PTRRecord#rrToWire(DNS%.Compression)","DNS%.Name#toWire(DNS.utils%.CountedDataOutputStream,DNS%.Compression)").
after_calls("DNS%.NS_CNAME_PTRRecord#rrToWire(DNS%.Compression)","DNS.utils%.CountedDataOutputStream#<init>(java.io%.OutputStream)").
after_calls("DNS%.NS_CNAME_PTRRecord#rrToWire(DNS%.Compression)","java.io%.ByteArrayOutputStream#<init>()").
after_calls("DNS%.NS_CNAME_PTRRecord#rrToWire(DNS%.Compression)","java.io%.ByteArrayOutputStream#toByteArray()").
after_calls("DNS%.NS_CNAME_PTRRecord#toString()","DNS%.Record#toStringNoData()").
after_calls("DNS%.NS_CNAME_PTRRecord#toString()","java.lang%.StringBuffer#append(java.lang%.Object)").
after_calls("DNS%.NS_CNAME_PTRRecord#toString()","java.lang%.StringBuffer#toString()").
after_calls("DNS%.NXTRecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)","DNS%.MyStringTokenizer#hasMoreTokens()").
after_calls("DNS%.NXTRecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)","DNS%.MyStringTokenizer#nextToken()").
after_calls("DNS%.NXTRecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)","DNS%.Name#<init>(java.lang%.String,DNS%.Name)").
after_calls("DNS%.NXTRecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)","DNS%.Record#<init>(DNS%.Name,short,short,int)").
after_calls("DNS%.NXTRecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)","DNS%.dns#typeValue(java.lang%.String)").
after_calls("DNS%.NXTRecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)","java.util%.BitSet#<init>()").
after_calls("DNS%.NXTRecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)","java.util%.BitSet#set(int)").
after_calls("DNS%.NXTRecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)","java.util%.Vector#<init>()").
after_calls("DNS%.NXTRecord#<init>(DNS%.Name,short,int,DNS%.Name,java.util%.BitSet)","DNS%.Record#<init>(DNS%.Name,short,short,int)").
after_calls("DNS%.NXTRecord#<init>(DNS%.Name,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)","DNS%.Name#<init>(DNS.utils%.CountedDataInputStream,DNS%.Compression)").
after_calls("DNS%.NXTRecord#<init>(DNS%.Name,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)","DNS%.Record#<init>(DNS%.Name,short,short,int)").
after_calls("DNS%.NXTRecord#<init>(DNS%.Name,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)","DNS.utils%.CountedDataInputStream#getPos()").
after_calls("DNS%.NXTRecord#<init>(DNS%.Name,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)","DNS.utils%.CountedDataInputStream#readUnsignedByte()").
after_calls("DNS%.NXTRecord#<init>(DNS%.Name,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)","java.util%.BitSet#<init>()").
after_calls("DNS%.NXTRecord#<init>(DNS%.Name,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)","java.util%.BitSet#set(int)").
after_calls("DNS%.NXTRecord#rrToWire(DNS%.Compression)","DNS%.Name#toWire(DNS.utils%.CountedDataOutputStream,DNS%.Compression)").
after_calls("DNS%.NXTRecord#rrToWire(DNS%.Compression)","DNS.utils%.CountedDataOutputStream#<init>(java.io%.OutputStream)").
after_calls("DNS%.NXTRecord#rrToWire(DNS%.Compression)","DNS.utils%.CountedDataOutputStream#writeByte(int)").
after_calls("DNS%.NXTRecord#rrToWire(DNS%.Compression)","java.io%.ByteArrayOutputStream#<init>()").
after_calls("DNS%.NXTRecord#rrToWire(DNS%.Compression)","java.io%.ByteArrayOutputStream#toByteArray()").
after_calls("DNS%.NXTRecord#rrToWire(DNS%.Compression)","java.util%.BitSet#get(int)").
after_calls("DNS%.NXTRecord#rrToWire(DNS%.Compression)","java.util%.BitSet#size()").
after_calls("DNS%.NXTRecord#toString()","DNS%.Record#toStringNoData()").
after_calls("DNS%.NXTRecord#toString()","DNS%.dns#typeString(int)").
after_calls("DNS%.NXTRecord#toString()","java.lang%.StringBuffer#append(java.lang%.Object)").
after_calls("DNS%.NXTRecord#toString()","java.lang%.StringBuffer#append(java.lang%.String)").
after_calls("DNS%.NXTRecord#toString()","java.lang%.StringBuffer#toString()").
after_calls("DNS%.NXTRecord#toString()","java.util%.BitSet#get(int)").
after_calls("DNS%.NXTRecord#toString()","java.util%.BitSet#size()").
after_calls("DNS%.Name#<init>(DNS%.Name,int)","java.lang%.System#arraycopy(java.lang%.Object,int,java.lang%.Object,int,int)").
after_calls("DNS%.Name#<init>(DNS.utils%.CountedDataInputStream,DNS%.Compression)","DNS%.Compression#add(int,DNS%.Name)").
after_calls("DNS%.Name#<init>(DNS.utils%.CountedDataInputStream,DNS%.Compression)","DNS%.Compression#get(int)").
after_calls("DNS%.Name#<init>(DNS.utils%.CountedDataInputStream,DNS%.Compression)","DNS%.Name#<init>(DNS%.Name,int)").
after_calls("DNS%.Name#<init>(DNS.utils%.CountedDataInputStream,DNS%.Compression)","DNS.utils%.CountedDataInputStream#getPos()").
after_calls("DNS%.Name#<init>(DNS.utils%.CountedDataInputStream,DNS%.Compression)","DNS.utils%.CountedDataInputStream#read(byte[])").
after_calls("DNS%.Name#<init>(DNS.utils%.CountedDataInputStream,DNS%.Compression)","DNS.utils%.CountedDataInputStream#readUnsignedByte()").
after_calls("DNS%.Name#<init>(DNS.utils%.CountedDataInputStream,DNS%.Compression)","java.lang%.String#<init>(byte[])").
after_calls("DNS%.Name#<init>(DNS.utils%.CountedDataInputStream,DNS%.Compression)","java.lang%.String#<init>(java.lang%.String)").
after_calls("DNS%.Name#<init>(DNS.utils%.CountedDataInputStream,DNS%.Compression)","java.lang%.String#length()").
after_calls("DNS%.Name#<init>(DNS.utils%.CountedDataInputStream,DNS%.Compression)","java.lang%.System#arraycopy(java.lang%.Object,int,java.lang%.Object,int,int)").
after_calls("DNS%.Name#<init>(java.lang%.String)","DNS%.Name#<init>(java.lang%.String,DNS%.Name)").
after_calls("DNS%.Name#<init>(java.lang%.String,DNS%.Name)","DNS%.MyStringTokenizer#<init>(java.lang%.String,java.lang%.String)").
after_calls("DNS%.Name#<init>(java.lang%.String,DNS%.Name)","DNS%.MyStringTokenizer#hasMoreDelimiters()").
after_calls("DNS%.Name#<init>(java.lang%.String,DNS%.Name)","DNS%.MyStringTokenizer#hasMoreTokens()").
after_calls("DNS%.Name#<init>(java.lang%.String,DNS%.Name)","DNS%.MyStringTokenizer#nextToken()").
after_calls("DNS%.Name#<init>(java.lang%.String,DNS%.Name)","DNS%.Name#append(DNS%.Name)").
after_calls("DNS%.Name#<init>(java.lang%.String,DNS%.Name)","java.io%.PrintStream#println(java.lang%.String)").
after_calls("DNS%.Name#<init>(java.lang%.String,DNS%.Name)","java.lang%.String#equals(java.lang%.Object)").
after_calls("DNS%.Name#<init>(java.lang%.String,DNS%.Name)","java.lang%.StringBuffer#<init>()").
after_calls("DNS%.Name#<init>(java.lang%.String,DNS%.Name)","java.lang%.StringBuffer#append(java.lang%.Object)").
after_calls("DNS%.Name#<init>(java.lang%.String,DNS%.Name)","java.lang%.StringBuffer#append(java.lang%.String)").
after_calls("DNS%.Name#<init>(java.lang%.String,DNS%.Name)","java.lang%.StringBuffer#toString()").
after_calls("DNS%.Name#append(DNS%.Name)","java.lang%.System#arraycopy(java.lang%.Object,int,java.lang%.Object,int,int)").
after_calls("DNS%.Name#equals(java.lang%.Object)","java.lang%.String#equalsIgnoreCase(java.lang%.String)").
after_calls("DNS%.Name#hashCode()","java.lang%.String#charAt(int)").
after_calls("DNS%.Name#hashCode()","java.lang%.String#length()").
after_calls("DNS%.Name#length()","java.lang%.String#length()").
after_calls("DNS%.Name#toString()","java.lang%.StringBuffer#<init>()").
after_calls("DNS%.Name#toString()","java.lang%.StringBuffer#append(java.lang%.String)").
after_calls("DNS%.Name#toString()","java.lang%.StringBuffer#toString()").
after_calls("DNS%.Name#toWire(DNS.utils%.CountedDataOutputStream,DNS%.Compression)","DNS%.Compression#add(int,DNS%.Name)").
after_calls("DNS%.Name#toWire(DNS.utils%.CountedDataOutputStream,DNS%.Compression)","DNS%.Compression#get(DNS%.Name)").
after_calls("DNS%.Name#toWire(DNS.utils%.CountedDataOutputStream,DNS%.Compression)","DNS%.Name#<init>(DNS%.Name,int)").
after_calls("DNS%.Name#toWire(DNS.utils%.CountedDataOutputStream,DNS%.Compression)","DNS.utils%.CountedDataOutputStream#getPos()").
after_calls("DNS%.Name#toWire(DNS.utils%.CountedDataOutputStream,DNS%.Compression)","DNS.utils%.CountedDataOutputStream#writeByte(int)").
after_calls("DNS%.Name#toWire(DNS.utils%.CountedDataOutputStream,DNS%.Compression)","DNS.utils%.CountedDataOutputStream#writeShort(int)").
after_calls("DNS%.Name#toWire(DNS.utils%.CountedDataOutputStream,DNS%.Compression)","DNS.utils%.CountedDataOutputStream#writeString(java.lang%.String)").
after_calls("DNS%.Name#toWireCanonical(DNS.utils%.CountedDataOutputStream)","DNS.utils%.CountedDataOutputStream#writeByte(int)").
after_calls("DNS%.Name#toWireCanonical(DNS.utils%.CountedDataOutputStream)","java.lang%.Character#toLowerCase(char)").
after_calls("DNS%.Name#toWireCanonical(DNS.utils%.CountedDataOutputStream)","java.lang%.String#charAt(int)").
after_calls("DNS%.Name#toWireCanonical(DNS.utils%.CountedDataOutputStream)","java.lang%.String#length()").
after_calls("DNS%.OPTRecord#<init>(DNS%.Name,short,int)","DNS%.Record#<init>(DNS%.Name,short,short,int)").
after_calls("DNS%.OPTRecord#<init>(DNS%.Name,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)","DNS%.Record#<init>(DNS%.Name,short,short,int)").
after_calls("DNS%.OPTRecord#rrToWire(DNS%.Compression)","DNS.utils%.CountedDataOutputStream#<init>(java.io%.OutputStream)").
after_calls("DNS%.OPTRecord#rrToWire(DNS%.Compression)","java.io%.ByteArrayOutputStream#<init>()").
after_calls("DNS%.OPTRecord#rrToWire(DNS%.Compression)","java.io%.ByteArrayOutputStream#toByteArray()").
after_calls("DNS%.OPTRecord#toString()","DNS%.Record#toStringNoData()").
after_calls("DNS%.OPTRecord#toString()","java.lang%.StringBuffer#toString()").
after_calls("DNS%.PTRRecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)","DNS%.NS_CNAME_PTRRecord#<init>(DNS%.Name,short,short,int,DNS%.MyStringTokenizer,DNS%.Name)").
after_calls("DNS%.PTRRecord#<init>(DNS%.Name,short,int,DNS%.Name)","DNS%.NS_CNAME_PTRRecord#<init>(DNS%.Name,short,short,int,DNS%.Name)").
after_calls("DNS%.PTRRecord#<init>(DNS%.Name,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)","DNS%.NS_CNAME_PTRRecord#<init>(DNS%.Name,short,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)").
after_calls("DNS%.RRset#<init>(DNS%.Name,short)","java.util%.Vector#<init>()").
after_calls("DNS%.RRset#addRR(DNS%.Record)","java.util%.Vector#addElement(java.lang%.Object)").
after_calls("DNS%.RRset#rrs()","java.util%.Vector#elements()").
after_calls("DNS%.Record#fromString(DNS%.Name,short,short,int,DNS%.MyStringTokenizer,DNS%.Name)","DNS%.UNKRecord#<init>(DNS%.Name,short,short,int,DNS%.MyStringTokenizer,DNS%.Name)").
after_calls("DNS%.Record#fromString(DNS%.Name,short,short,int,DNS%.MyStringTokenizer,DNS%.Name)","DNS%.dns#typeString(int)").
after_calls("DNS%.Record#fromString(DNS%.Name,short,short,int,DNS%.MyStringTokenizer,DNS%.Name)","java.io%.PrintStream#println(java.lang%.Object)").
after_calls("DNS%.Record#fromString(DNS%.Name,short,short,int,DNS%.MyStringTokenizer,DNS%.Name)","java.io%.PrintStream#println(java.lang%.String)").
after_calls("DNS%.Record#fromString(DNS%.Name,short,short,int,DNS%.MyStringTokenizer,DNS%.Name)","java.lang%.Class#forName(java.lang%.String)").
after_calls("DNS%.Record#fromString(DNS%.Name,short,short,int,DNS%.MyStringTokenizer,DNS%.Name)","java.lang%.Class#getConstructor(java.lang%.Class[])").
after_calls("DNS%.Record#fromString(DNS%.Name,short,short,int,DNS%.MyStringTokenizer,DNS%.Name)","java.lang%.Integer#<init>(int)").
after_calls("DNS%.Record#fromString(DNS%.Name,short,short,int,DNS%.MyStringTokenizer,DNS%.Name)","java.lang%.Short#<init>(short)").
after_calls("DNS%.Record#fromString(DNS%.Name,short,short,int,DNS%.MyStringTokenizer,DNS%.Name)","java.lang.reflect%.Constructor#newInstance(java.lang%.Object[])").
after_calls("DNS%.Record#fromString(DNS%.Name,short,short,int,DNS%.MyStringTokenizer,DNS%.Name)","java.lang.reflect%.InvocationTargetException#getTargetException()").
after_calls("DNS%.Record#fromWire(DNS.utils%.CountedDataInputStream,int,DNS%.Compression)","DNS%.Name#<init>(DNS.utils%.CountedDataInputStream,DNS%.Compression)").
after_calls("DNS%.Record#fromWire(DNS.utils%.CountedDataInputStream,int,DNS%.Compression)","DNS%.Record#newRecord(DNS%.Name,short,short)").
after_calls("DNS%.Record#fromWire(DNS.utils%.CountedDataInputStream,int,DNS%.Compression)","DNS%.Record#newRecord(DNS%.Name,short,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)").
after_calls("DNS%.Record#fromWire(DNS.utils%.CountedDataInputStream,int,DNS%.Compression)","DNS.utils%.CountedDataInputStream#getPos()").
after_calls("DNS%.Record#fromWire(DNS.utils%.CountedDataInputStream,int,DNS%.Compression)","DNS.utils%.CountedDataInputStream#readInt()").
after_calls("DNS%.Record#fromWire(DNS.utils%.CountedDataInputStream,int,DNS%.Compression)","DNS.utils%.CountedDataInputStream#readShort()").
after_calls("DNS%.Record#newRecord(DNS%.Name,short,short)","DNS%.Record#newRecord(DNS%.Name,short,short,int,int,byte[])").
after_calls("DNS%.Record#newRecord(DNS%.Name,short,short,int)","DNS%.Record#newRecord(DNS%.Name,short,short,int,int,byte[])").
after_calls("DNS%.Record#newRecord(DNS%.Name,short,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)","DNS%.UNKRecord#<init>(DNS%.Name,short,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)").
after_calls("DNS%.Record#newRecord(DNS%.Name,short,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)","DNS%.dns#typeString(int)").
after_calls("DNS%.Record#newRecord(DNS%.Name,short,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)","java.io%.PrintStream#println(java.lang%.Object)").
after_calls("DNS%.Record#newRecord(DNS%.Name,short,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)","java.io%.PrintStream#println(java.lang%.String)").
after_calls("DNS%.Record#newRecord(DNS%.Name,short,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)","java.lang%.Class#forName(java.lang%.String)").
after_calls("DNS%.Record#newRecord(DNS%.Name,short,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)","java.lang%.Class#getConstructor(java.lang%.Class[])").
after_calls("DNS%.Record#newRecord(DNS%.Name,short,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)","java.lang%.Integer#<init>(int)").
after_calls("DNS%.Record#newRecord(DNS%.Name,short,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)","java.lang%.Short#<init>(short)").
after_calls("DNS%.Record#newRecord(DNS%.Name,short,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)","java.lang.reflect%.Constructor#newInstance(java.lang%.Object[])").
after_calls("DNS%.Record#newRecord(DNS%.Name,short,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)","java.lang.reflect%.InvocationTargetException#getTargetException()").
after_calls("DNS%.Record#newRecord(DNS%.Name,short,short,int,int,byte[])","DNS%.Record#newRecord(DNS%.Name,short,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)").
after_calls("DNS%.Record#newRecord(DNS%.Name,short,short,int,int,byte[])","DNS.utils%.CountedDataInputStream#<init>(java.io%.InputStream)").
after_calls("DNS%.Record#newRecord(DNS%.Name,short,short,int,int,byte[])","java.io%.ByteArrayInputStream#<init>(byte[])").
after_calls("DNS%.Record#rrToWireCanonical()","DNS%.Record#rrToWire(DNS%.Compression)").
after_calls("DNS%.Record#toString()","DNS%.Record#toStringNoData()").
after_calls("DNS%.Record#toString()","java.lang%.StringBuffer#append(java.lang%.String)").
after_calls("DNS%.Record#toString()","java.lang%.StringBuffer#toString()").
after_calls("DNS%.Record#toStringNoData()","DNS%.dns#classString(int)").
after_calls("DNS%.Record#toStringNoData()","DNS%.dns#typeString(int)").
after_calls("DNS%.Record#toStringNoData()","java.lang%.StringBuffer#<init>()").
after_calls("DNS%.Record#toStringNoData()","java.lang%.StringBuffer#append(int)").
after_calls("DNS%.Record#toStringNoData()","java.lang%.StringBuffer#append(java.lang%.Object)").
after_calls("DNS%.Record#toStringNoData()","java.lang%.StringBuffer#append(java.lang%.String)").
after_calls("DNS%.Record#toWire(DNS.utils%.CountedDataOutputStream,int,DNS%.Compression)","DNS%.Name#toWire(DNS.utils%.CountedDataOutputStream,DNS%.Compression)").
after_calls("DNS%.Record#toWire(DNS.utils%.CountedDataOutputStream,int,DNS%.Compression)","DNS%.Record#rrToWire(DNS%.Compression)").
after_calls("DNS%.Record#toWire(DNS.utils%.CountedDataOutputStream,int,DNS%.Compression)","DNS.utils%.CountedDataOutputStream#write(byte[])").
after_calls("DNS%.Record#toWire(DNS.utils%.CountedDataOutputStream,int,DNS%.Compression)","DNS.utils%.CountedDataOutputStream#writeInt(int)").
after_calls("DNS%.Record#toWire(DNS.utils%.CountedDataOutputStream,int,DNS%.Compression)","DNS.utils%.CountedDataOutputStream#writeShort(int)").
after_calls("DNS%.Record#toWire(int)","DNS%.Record#toWire(DNS.utils%.CountedDataOutputStream,int,DNS%.Compression)").
after_calls("DNS%.Record#toWire(int)","DNS.utils%.CountedDataOutputStream#<init>(java.io%.OutputStream)").
after_calls("DNS%.Record#toWire(int)","java.io%.ByteArrayOutputStream#<init>()").
after_calls("DNS%.Record#toWire(int)","java.io%.ByteArrayOutputStream#toByteArray()").
after_calls("DNS%.Record#toWireCanonical(DNS.utils%.CountedDataOutputStream,int)","DNS%.Name#toWireCanonical(DNS.utils%.CountedDataOutputStream)").
after_calls("DNS%.Record#toWireCanonical(DNS.utils%.CountedDataOutputStream,int)","DNS%.Record#rrToWireCanonical()").
after_calls("DNS%.Record#toWireCanonical(DNS.utils%.CountedDataOutputStream,int)","DNS.utils%.CountedDataOutputStream#write(byte[])").
after_calls("DNS%.Record#toWireCanonical(DNS.utils%.CountedDataOutputStream,int)","DNS.utils%.CountedDataOutputStream#writeInt(int)").
after_calls("DNS%.Record#toWireCanonical(DNS.utils%.CountedDataOutputStream,int)","DNS.utils%.CountedDataOutputStream#writeShort(int)").
after_calls("DNS%.Resolver#<init>()","DNS%.FindResolver#find()").
after_calls("DNS%.Resolver#<init>()","DNS%.Resolver#<init>(java.lang%.String)").
after_calls("DNS%.Resolver#<init>(java.lang%.String)","java.net%.InetAddress#getByName(java.lang%.String)").
after_calls("DNS%.Resolver#send(DNS%.Message)","DNS%.EDNS#newOPT(int)").
after_calls("DNS%.Resolver#send(DNS%.Message)","DNS%.Header#getFlag(int)").
after_calls("DNS%.Resolver#send(DNS%.Message)","DNS%.Message#<init>(byte[])").
after_calls("DNS%.Resolver#send(DNS%.Message)","DNS%.Message#addRecord(int,DNS%.Record)").
after_calls("DNS%.Resolver#send(DNS%.Message)","DNS%.Message#getHeader()").
after_calls("DNS%.Resolver#send(DNS%.Message)","DNS%.Message#getTSIG()").
after_calls("DNS%.Resolver#send(DNS%.Message)","DNS%.Message#toWire()").
after_calls("DNS%.Resolver#send(DNS%.Message)","DNS%.Resolver#sendTCP(DNS%.Message,byte[])").
after_calls("DNS%.Resolver#send(DNS%.Message)","DNS%.TSIG#apply(DNS%.Message)").
after_calls("DNS%.Resolver#send(DNS%.Message)","DNS%.TSIG#verify(DNS%.Message,byte[],DNS%.TSIGRecord)").
after_calls("DNS%.Resolver#send(DNS%.Message)","java.io%.PrintStream#println(java.lang%.Object)").
after_calls("DNS%.Resolver#send(DNS%.Message)","java.io%.PrintStream#println(java.lang%.String)").
after_calls("DNS%.Resolver#send(DNS%.Message)","java.lang%.System#arraycopy(java.lang%.Object,int,java.lang%.Object,int,int)").
after_calls("DNS%.Resolver#send(DNS%.Message)","java.net%.DatagramPacket#<init>(byte[],int)").
after_calls("DNS%.Resolver#send(DNS%.Message)","java.net%.DatagramPacket#<init>(byte[],int,java.net%.InetAddress,int)").
after_calls("DNS%.Resolver#send(DNS%.Message)","java.net%.DatagramPacket#getData()").
after_calls("DNS%.Resolver#send(DNS%.Message)","java.net%.DatagramPacket#getLength()").
after_calls("DNS%.Resolver#send(DNS%.Message)","java.net%.DatagramSocket#<init>()").
after_calls("DNS%.Resolver#send(DNS%.Message)","java.net%.DatagramSocket#close()").
after_calls("DNS%.Resolver#send(DNS%.Message)","java.net%.DatagramSocket#receive(java.net%.DatagramPacket)").
after_calls("DNS%.Resolver#send(DNS%.Message)","java.net%.DatagramSocket#send(java.net%.DatagramPacket)").
after_calls("DNS%.Resolver#send(DNS%.Message)","java.net%.DatagramSocket#setSoTimeout(int)").
after_calls("DNS%.Resolver#sendAXFR(DNS%.Message)","DNS%.Header#getCount(int)").
after_calls("DNS%.Resolver#sendAXFR(DNS%.Message)","DNS%.Header#getID()").
after_calls("DNS%.Resolver#sendAXFR(DNS%.Message)","DNS%.Header#setID(int)").
after_calls("DNS%.Resolver#sendAXFR(DNS%.Message)","DNS%.Message#<init>()").
after_calls("DNS%.Resolver#sendAXFR(DNS%.Message)","DNS%.Message#<init>(byte[])").
after_calls("DNS%.Resolver#sendAXFR(DNS%.Message)","DNS%.Message#addRecord(int,DNS%.Record)").
after_calls("DNS%.Resolver#sendAXFR(DNS%.Message)","DNS%.Message#getHeader()").
after_calls("DNS%.Resolver#sendAXFR(DNS%.Message)","DNS%.Message#getSection(int)").
after_calls("DNS%.Resolver#sendAXFR(DNS%.Message)","DNS%.Message#getTSIG()").
after_calls("DNS%.Resolver#sendAXFR(DNS%.Message)","DNS%.Message#toWire()").
after_calls("DNS%.Resolver#sendAXFR(DNS%.Message)","DNS%.TSIG#apply(DNS%.Message)").
after_calls("DNS%.Resolver#sendAXFR(DNS%.Message)","DNS%.TSIG#verifyAXFR(DNS%.Message,byte[],DNS%.TSIGRecord,boolean,boolean)").
after_calls("DNS%.Resolver#sendAXFR(DNS%.Message)","DNS%.TSIG#verifyAXFRStart()").
after_calls("DNS%.Resolver#sendAXFR(DNS%.Message)","java.io%.DataInputStream#<init>(java.io%.InputStream)").
after_calls("DNS%.Resolver#sendAXFR(DNS%.Message)","java.io%.DataInputStream#readFully(byte[])").
after_calls("DNS%.Resolver#sendAXFR(DNS%.Message)","java.io%.DataInputStream#readUnsignedShort()").
after_calls("DNS%.Resolver#sendAXFR(DNS%.Message)","java.io%.DataOutputStream#<init>(java.io%.OutputStream)").
after_calls("DNS%.Resolver#sendAXFR(DNS%.Message)","java.io%.DataOutputStream#writeShort(int)").
after_calls("DNS%.Resolver#sendAXFR(DNS%.Message)","java.io%.OutputStream#write(byte[])").
after_calls("DNS%.Resolver#sendAXFR(DNS%.Message)","java.io%.PrintStream#println()").
after_calls("DNS%.Resolver#sendAXFR(DNS%.Message)","java.io%.PrintStream#println(java.lang%.Object)").
after_calls("DNS%.Resolver#sendAXFR(DNS%.Message)","java.io%.PrintStream#println(java.lang%.String)").
after_calls("DNS%.Resolver#sendAXFR(DNS%.Message)","java.lang%.StringBuffer#<init>()").
after_calls("DNS%.Resolver#sendAXFR(DNS%.Message)","java.lang%.StringBuffer#append(java.lang%.String)").
after_calls("DNS%.Resolver#sendAXFR(DNS%.Message)","java.lang%.StringBuffer#toString()").
after_calls("DNS%.Resolver#sendAXFR(DNS%.Message)","java.net%.Socket#<init>(java.net%.InetAddress,int)").
after_calls("DNS%.Resolver#sendAXFR(DNS%.Message)","java.net%.Socket#close()").
after_calls("DNS%.Resolver#sendAXFR(DNS%.Message)","java.net%.Socket#getInputStream()").
after_calls("DNS%.Resolver#sendAXFR(DNS%.Message)","java.net%.Socket#getOutputStream()").
after_calls("DNS%.Resolver#sendAXFR(DNS%.Message)","java.net%.Socket#setSoTimeout(int)").
after_calls("DNS%.Resolver#sendAXFR(DNS%.Message)","java.util%.Enumeration#hasMoreElements()").
after_calls("DNS%.Resolver#sendAXFR(DNS%.Message)","java.util%.Enumeration#nextElement()").
after_calls("DNS%.Resolver#sendTCP(DNS%.Message,byte[])","DNS%.Message#<init>(byte[])").
after_calls("DNS%.Resolver#sendTCP(DNS%.Message,byte[])","DNS%.Message#getTSIG()").
after_calls("DNS%.Resolver#sendTCP(DNS%.Message,byte[])","DNS%.TSIG#verify(DNS%.Message,byte[],DNS%.TSIGRecord)").
after_calls("DNS%.Resolver#sendTCP(DNS%.Message,byte[])","java.io%.DataInputStream#<init>(java.io%.InputStream)").
after_calls("DNS%.Resolver#sendTCP(DNS%.Message,byte[])","java.io%.DataInputStream#readFully(byte[])").
after_calls("DNS%.Resolver#sendTCP(DNS%.Message,byte[])","java.io%.DataInputStream#readUnsignedShort()").
after_calls("DNS%.Resolver#sendTCP(DNS%.Message,byte[])","java.io%.DataOutputStream#<init>(java.io%.OutputStream)").
after_calls("DNS%.Resolver#sendTCP(DNS%.Message,byte[])","java.io%.DataOutputStream#writeShort(int)").
after_calls("DNS%.Resolver#sendTCP(DNS%.Message,byte[])","java.io%.OutputStream#write(byte[])").
after_calls("DNS%.Resolver#sendTCP(DNS%.Message,byte[])","java.io%.PrintStream#println(java.lang%.Object)").
after_calls("DNS%.Resolver#sendTCP(DNS%.Message,byte[])","java.io%.PrintStream#println(java.lang%.String)").
after_calls("DNS%.Resolver#sendTCP(DNS%.Message,byte[])","java.net%.Socket#<init>(java.net%.InetAddress,int)").
after_calls("DNS%.Resolver#sendTCP(DNS%.Message,byte[])","java.net%.Socket#close()").
after_calls("DNS%.Resolver#sendTCP(DNS%.Message,byte[])","java.net%.Socket#getInputStream()").
after_calls("DNS%.Resolver#sendTCP(DNS%.Message,byte[])","java.net%.Socket#getOutputStream()").
after_calls("DNS%.Resolver#sendTCP(DNS%.Message,byte[])","java.net%.Socket#setSoTimeout(int)").
after_calls("DNS%.Resolver#setTSIGKey(java.lang%.String)","DNS%.Resolver#setTSIGKey(java.lang%.String,java.lang%.String)").
after_calls("DNS%.Resolver#setTSIGKey(java.lang%.String)","java.io%.PrintStream#println(java.lang%.String)").
after_calls("DNS%.Resolver#setTSIGKey(java.lang%.String)","java.net%.InetAddress#getHostName()").
after_calls("DNS%.Resolver#setTSIGKey(java.lang%.String)","java.net%.InetAddress#getLocalHost()").
after_calls("DNS%.Resolver#setTSIGKey(java.lang%.String,java.lang%.String)","DNS%.TSIG#<init>(java.lang%.String,byte[])").
after_calls("DNS%.Resolver#setTSIGKey(java.lang%.String,java.lang%.String)","DNS.utils%.base64#fromString(java.lang%.String)").
after_calls("DNS%.Resolver#setTSIGKey(java.lang%.String,java.lang%.String)","java.io%.PrintStream#println(java.lang%.String)").
after_calls("DNS%.SIGRecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)","DNS%.MyStringTokenizer#hasMoreTokens()").
after_calls("DNS%.SIGRecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)","DNS%.MyStringTokenizer#nextToken()").
after_calls("DNS%.SIGRecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)","DNS%.Name#<init>(java.lang%.String,DNS%.Name)").
after_calls("DNS%.SIGRecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)","DNS%.Name#labels()").
after_calls("DNS%.SIGRecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)","DNS%.Record#<init>(DNS%.Name,short,short,int)").
after_calls("DNS%.SIGRecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)","DNS%.SIGRecord#parseDate(java.lang%.String)").
after_calls("DNS%.SIGRecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)","DNS%.dns#typeValue(java.lang%.String)").
after_calls("DNS%.SIGRecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)","DNS.utils%.base64#fromString(java.lang%.String)").
after_calls("DNS%.SIGRecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)","java.lang%.Byte#parseByte(java.lang%.String)").
after_calls("DNS%.SIGRecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)","java.lang%.Integer#parseInt(java.lang%.String)").
after_calls("DNS%.SIGRecord#<init>(DNS%.Name,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)","DNS%.Name#<init>(DNS.utils%.CountedDataInputStream,DNS%.Compression)").
after_calls("DNS%.SIGRecord#<init>(DNS%.Name,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)","DNS%.Record#<init>(DNS%.Name,short,short,int)").
after_calls("DNS%.SIGRecord#<init>(DNS%.Name,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)","DNS.utils%.CountedDataInputStream#getPos()").
after_calls("DNS%.SIGRecord#<init>(DNS%.Name,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)","DNS.utils%.CountedDataInputStream#read(byte[])").
after_calls("DNS%.SIGRecord#<init>(DNS%.Name,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)","DNS.utils%.CountedDataInputStream#readByte()").
after_calls("DNS%.SIGRecord#<init>(DNS%.Name,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)","DNS.utils%.CountedDataInputStream#readInt()").
after_calls("DNS%.SIGRecord#<init>(DNS%.Name,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)","DNS.utils%.CountedDataInputStream#readShort()").
after_calls("DNS%.SIGRecord#<init>(DNS%.Name,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)","java.util%.Date#<init>(long)").
after_calls("DNS%.SIGRecord#<init>(DNS%.Name,short,int,int,int,int,java.util%.Date,java.util%.Date,int,DNS%.Name,byte[])","DNS%.Name#labels()").
after_calls("DNS%.SIGRecord#<init>(DNS%.Name,short,int,int,int,int,java.util%.Date,java.util%.Date,int,DNS%.Name,byte[])","DNS%.Record#<init>(DNS%.Name,short,short,int)").
after_calls("DNS%.SIGRecord#formatDate(java.util%.Date)","java.lang%.StringBuffer#<init>()").
after_calls("DNS%.SIGRecord#formatDate(java.util%.Date)","java.lang%.StringBuffer#append(java.lang%.String)").
after_calls("DNS%.SIGRecord#formatDate(java.util%.Date)","java.lang%.StringBuffer#toString()").
after_calls("DNS%.SIGRecord#formatDate(java.util%.Date)","java.text%.DecimalFormat#<init>()").
after_calls("DNS%.SIGRecord#formatDate(java.util%.Date)","java.text%.NumberFormat#format(long)").
after_calls("DNS%.SIGRecord#formatDate(java.util%.Date)","java.text%.NumberFormat#setGroupingUsed(boolean)").
after_calls("DNS%.SIGRecord#formatDate(java.util%.Date)","java.text%.NumberFormat#setMinimumIntegerDigits(int)").
after_calls("DNS%.SIGRecord#formatDate(java.util%.Date)","java.util%.Calendar#get(int)").
after_calls("DNS%.SIGRecord#formatDate(java.util%.Date)","java.util%.Calendar#setTime(java.util%.Date)").
after_calls("DNS%.SIGRecord#formatDate(java.util%.Date)","java.util%.GregorianCalendar#<init>(java.util%.TimeZone)").
after_calls("DNS%.SIGRecord#formatDate(java.util%.Date)","java.util%.TimeZone#getTimeZone(java.lang%.String)").
after_calls("DNS%.SIGRecord#parseDate(java.lang%.String)","java.lang%.Integer#parseInt(java.lang%.String)").
after_calls("DNS%.SIGRecord#parseDate(java.lang%.String)","java.lang%.String#substring(int,int)").
after_calls("DNS%.SIGRecord#parseDate(java.lang%.String)","java.util%.Calendar#getTime()").
after_calls("DNS%.SIGRecord#parseDate(java.lang%.String)","java.util%.Calendar#set(int,int,int,int,int,int)").
after_calls("DNS%.SIGRecord#parseDate(java.lang%.String)","java.util%.GregorianCalendar#<init>(java.util%.TimeZone)").
after_calls("DNS%.SIGRecord#parseDate(java.lang%.String)","java.util%.TimeZone#getTimeZone(java.lang%.String)").
after_calls("DNS%.SIGRecord#rrToWire(DNS%.Compression)","DNS%.Name#toWire(DNS.utils%.CountedDataOutputStream,DNS%.Compression)").
after_calls("DNS%.SIGRecord#rrToWire(DNS%.Compression)","DNS.utils%.CountedDataOutputStream#<init>(java.io%.OutputStream)").
after_calls("DNS%.SIGRecord#rrToWire(DNS%.Compression)","DNS.utils%.CountedDataOutputStream#write(byte[])").
after_calls("DNS%.SIGRecord#rrToWire(DNS%.Compression)","DNS.utils%.CountedDataOutputStream#writeByte(int)").
after_calls("DNS%.SIGRecord#rrToWire(DNS%.Compression)","DNS.utils%.CountedDataOutputStream#writeInt(int)").
after_calls("DNS%.SIGRecord#rrToWire(DNS%.Compression)","DNS.utils%.CountedDataOutputStream#writeShort(int)").
after_calls("DNS%.SIGRecord#rrToWire(DNS%.Compression)","java.io%.ByteArrayOutputStream#<init>()").
after_calls("DNS%.SIGRecord#rrToWire(DNS%.Compression)","java.io%.ByteArrayOutputStream#toByteArray()").
after_calls("DNS%.SIGRecord#rrToWire(DNS%.Compression)","java.util%.Date#getTime()").
after_calls("DNS%.SIGRecord#toString()","DNS%.IO#formatBase64String(java.lang%.String,int,java.lang%.String,boolean)").
after_calls("DNS%.SIGRecord#toString()","DNS%.Record#toStringNoData()").
after_calls("DNS%.SIGRecord#toString()","DNS%.SIGRecord#formatDate(java.util%.Date)").
after_calls("DNS%.SIGRecord#toString()","DNS%.dns#typeString(int)").
after_calls("DNS%.SIGRecord#toString()","DNS.utils%.base64#toString(byte[])").
after_calls("DNS%.SIGRecord#toString()","java.lang%.StringBuffer#append(int)").
after_calls("DNS%.SIGRecord#toString()","java.lang%.StringBuffer#append(java.lang%.Object)").
after_calls("DNS%.SIGRecord#toString()","java.lang%.StringBuffer#append(java.lang%.String)").
after_calls("DNS%.SIGRecord#toString()","java.lang%.StringBuffer#toString()").
after_calls("DNS%.SOARecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)","DNS%.MyStringTokenizer#nextToken()").
after_calls("DNS%.SOARecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)","DNS%.Name#<init>(java.lang%.String,DNS%.Name)").
after_calls("DNS%.SOARecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)","DNS%.Record#<init>(DNS%.Name,short,short,int)").
after_calls("DNS%.SOARecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)","java.lang%.Integer#parseInt(java.lang%.String)").
after_calls("DNS%.SOARecord#<init>(DNS%.Name,short,int,DNS%.Name,DNS%.Name,int,int,int,int,int)","DNS%.Record#<init>(DNS%.Name,short,short,int)").
after_calls("DNS%.SOARecord#<init>(DNS%.Name,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)","DNS%.Name#<init>(DNS.utils%.CountedDataInputStream,DNS%.Compression)").
after_calls("DNS%.SOARecord#<init>(DNS%.Name,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)","DNS%.Record#<init>(DNS%.Name,short,short,int)").
after_calls("DNS%.SOARecord#<init>(DNS%.Name,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)","DNS.utils%.CountedDataInputStream#readInt()").
after_calls("DNS%.SOARecord#rrToWire(DNS%.Compression)","DNS%.Name#toWire(DNS.utils%.CountedDataOutputStream,DNS%.Compression)").
after_calls("DNS%.SOARecord#rrToWire(DNS%.Compression)","DNS.utils%.CountedDataOutputStream#<init>(java.io%.OutputStream)").
after_calls("DNS%.SOARecord#rrToWire(DNS%.Compression)","DNS.utils%.CountedDataOutputStream#writeInt(int)").
after_calls("DNS%.SOARecord#rrToWire(DNS%.Compression)","java.io%.ByteArrayOutputStream#<init>()").
after_calls("DNS%.SOARecord#rrToWire(DNS%.Compression)","java.io%.ByteArrayOutputStream#toByteArray()").
after_calls("DNS%.SOARecord#toString()","DNS%.Record#toStringNoData()").
after_calls("DNS%.SOARecord#toString()","java.lang%.StringBuffer#append(int)").
after_calls("DNS%.SOARecord#toString()","java.lang%.StringBuffer#append(java.lang%.Object)").
after_calls("DNS%.SOARecord#toString()","java.lang%.StringBuffer#append(java.lang%.String)").
after_calls("DNS%.SOARecord#toString()","java.lang%.StringBuffer#toString()").
after_calls("DNS%.SRVRecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)","DNS%.MyStringTokenizer#nextToken()").
after_calls("DNS%.SRVRecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)","DNS%.Name#<init>(java.lang%.String,DNS%.Name)").
after_calls("DNS%.SRVRecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)","DNS%.Record#<init>(DNS%.Name,short,short,int)").
after_calls("DNS%.SRVRecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)","java.lang%.Short#parseShort(java.lang%.String)").
after_calls("DNS%.SRVRecord#<init>(DNS%.Name,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)","DNS%.Name#<init>(DNS.utils%.CountedDataInputStream,DNS%.Compression)").
after_calls("DNS%.SRVRecord#<init>(DNS%.Name,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)","DNS%.Record#<init>(DNS%.Name,short,short,int)").
after_calls("DNS%.SRVRecord#<init>(DNS%.Name,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)","DNS.utils%.CountedDataInputStream#readUnsignedShort()").
after_calls("DNS%.SRVRecord#<init>(DNS%.Name,short,int,int,int,int,DNS%.Name)","DNS%.Record#<init>(DNS%.Name,short,short,int)").
after_calls("DNS%.SRVRecord#rrToWire(DNS%.Compression)","DNS%.Name#toWire(DNS.utils%.CountedDataOutputStream,DNS%.Compression)").
after_calls("DNS%.SRVRecord#rrToWire(DNS%.Compression)","DNS.utils%.CountedDataOutputStream#<init>(java.io%.OutputStream)").
after_calls("DNS%.SRVRecord#rrToWire(DNS%.Compression)","DNS.utils%.CountedDataOutputStream#writeShort(int)").
after_calls("DNS%.SRVRecord#rrToWire(DNS%.Compression)","java.io%.ByteArrayOutputStream#<init>()").
after_calls("DNS%.SRVRecord#rrToWire(DNS%.Compression)","java.io%.ByteArrayOutputStream#toByteArray()").
after_calls("DNS%.SRVRecord#toString()","DNS%.Record#toStringNoData()").
after_calls("DNS%.SRVRecord#toString()","java.lang%.StringBuffer#append(int)").
after_calls("DNS%.SRVRecord#toString()","java.lang%.StringBuffer#append(java.lang%.Object)").
after_calls("DNS%.SRVRecord#toString()","java.lang%.StringBuffer#append(java.lang%.String)").
after_calls("DNS%.SRVRecord#toString()","java.lang%.StringBuffer#toString()").
after_calls("DNS%.TSIG#<init>(java.lang%.String,byte[])","DNS%.Name#<init>(java.lang%.String)").
after_calls("DNS%.TSIG#apply(DNS%.Message)","DNS%.Header#getID()").
after_calls("DNS%.TSIG#apply(DNS%.Message)","DNS%.Message#addRecord(int,DNS%.Record)").
after_calls("DNS%.TSIG#apply(DNS%.Message)","DNS%.Message#getHeader()").
after_calls("DNS%.TSIG#apply(DNS%.Message)","DNS%.Message#toWire()").
after_calls("DNS%.TSIG#apply(DNS%.Message)","DNS%.Name#<init>(java.lang%.String)").
after_calls("DNS%.TSIG#apply(DNS%.Message)","DNS%.Name#toWireCanonical(DNS.utils%.CountedDataOutputStream)").
after_calls("DNS%.TSIG#apply(DNS%.Message)","DNS%.TSIGRecord#<init>(DNS%.Name,short,int,DNS%.Name,java.util%.Date,short,byte[],int,short,byte[])").
after_calls("DNS%.TSIG#apply(DNS%.Message)","DNS.utils%.CountedDataOutputStream#<init>(java.io%.OutputStream)").
after_calls("DNS%.TSIG#apply(DNS%.Message)","DNS.utils%.CountedDataOutputStream#writeInt(int)").
after_calls("DNS%.TSIG#apply(DNS%.Message)","DNS.utils%.CountedDataOutputStream#writeShort(int)").
after_calls("DNS%.TSIG#apply(DNS%.Message)","DNS.utils%.hmacSigner#<init>(byte[])").
after_calls("DNS%.TSIG#apply(DNS%.Message)","DNS.utils%.hmacSigner#addData(byte[])").
after_calls("DNS%.TSIG#apply(DNS%.Message)","DNS.utils%.hmacSigner#sign()").
after_calls("DNS%.TSIG#apply(DNS%.Message)","java.io%.ByteArrayOutputStream#<init>()").
after_calls("DNS%.TSIG#apply(DNS%.Message)","java.io%.ByteArrayOutputStream#toByteArray()").
after_calls("DNS%.TSIG#apply(DNS%.Message)","java.util%.Date#<init>()").
after_calls("DNS%.TSIG#apply(DNS%.Message)","java.util%.Date#getTime()").
after_calls("DNS%.TSIG#verify(DNS%.Message,byte[],DNS%.TSIGRecord)","DNS%.Header#decCount(int)").
after_calls("DNS%.TSIG#verify(DNS%.Message,byte[],DNS%.TSIGRecord)","DNS%.Header#incCount(int)").
after_calls("DNS%.TSIG#verify(DNS%.Message,byte[],DNS%.TSIGRecord)","DNS%.Header#toWire()").
after_calls("DNS%.TSIG#verify(DNS%.Message,byte[],DNS%.TSIGRecord)","DNS%.Message#getHeader()").
after_calls("DNS%.TSIG#verify(DNS%.Message,byte[],DNS%.TSIGRecord)","DNS%.Message#getTSIG()").
after_calls("DNS%.TSIG#verify(DNS%.Message,byte[],DNS%.TSIGRecord)","DNS%.Name#toWireCanonical(DNS.utils%.CountedDataOutputStream)").
after_calls("DNS%.TSIG#verify(DNS%.Message,byte[],DNS%.TSIGRecord)","DNS%.Record#getName()").
after_calls("DNS%.TSIG#verify(DNS%.Message,byte[],DNS%.TSIGRecord)","DNS%.TSIGRecord#getAlg()").
after_calls("DNS%.TSIG#verify(DNS%.Message,byte[],DNS%.TSIGRecord)","DNS%.TSIGRecord#getError()").
after_calls("DNS%.TSIG#verify(DNS%.Message,byte[],DNS%.TSIGRecord)","DNS%.TSIGRecord#getFudge()").
after_calls("DNS%.TSIG#verify(DNS%.Message,byte[],DNS%.TSIGRecord)","DNS%.TSIGRecord#getOther()").
after_calls("DNS%.TSIG#verify(DNS%.Message,byte[],DNS%.TSIGRecord)","DNS%.TSIGRecord#getSignature()").
after_calls("DNS%.TSIG#verify(DNS%.Message,byte[],DNS%.TSIGRecord)","DNS%.TSIGRecord#getTimeSigned()").
after_calls("DNS%.TSIG#verify(DNS%.Message,byte[],DNS%.TSIGRecord)","DNS.utils%.CountedDataOutputStream#<init>(java.io%.OutputStream)").
after_calls("DNS%.TSIG#verify(DNS%.Message,byte[],DNS%.TSIGRecord)","DNS.utils%.CountedDataOutputStream#write(byte[])").
after_calls("DNS%.TSIG#verify(DNS%.Message,byte[],DNS%.TSIGRecord)","DNS.utils%.CountedDataOutputStream#writeInt(int)").
after_calls("DNS%.TSIG#verify(DNS%.Message,byte[],DNS%.TSIGRecord)","DNS.utils%.CountedDataOutputStream#writeShort(int)").
after_calls("DNS%.TSIG#verify(DNS%.Message,byte[],DNS%.TSIGRecord)","DNS.utils%.hmacSigner#<init>(byte[])").
after_calls("DNS%.TSIG#verify(DNS%.Message,byte[],DNS%.TSIGRecord)","DNS.utils%.hmacSigner#addData(byte[])").
after_calls("DNS%.TSIG#verify(DNS%.Message,byte[],DNS%.TSIGRecord)","DNS.utils%.hmacSigner#addData(byte[],int,int)").
after_calls("DNS%.TSIG#verify(DNS%.Message,byte[],DNS%.TSIGRecord)","DNS.utils%.hmacSigner#verify(byte[])").
after_calls("DNS%.TSIG#verify(DNS%.Message,byte[],DNS%.TSIGRecord)","java.io%.ByteArrayOutputStream#<init>()").
after_calls("DNS%.TSIG#verify(DNS%.Message,byte[],DNS%.TSIGRecord)","java.io%.ByteArrayOutputStream#toByteArray()").
after_calls("DNS%.TSIG#verify(DNS%.Message,byte[],DNS%.TSIGRecord)","java.util%.Date#getTime()").
after_calls("DNS%.TSIG#verifyAXFR(DNS%.Message,byte[],DNS%.TSIGRecord,boolean,boolean)","DNS%.Header#decCount(int)").
after_calls("DNS%.TSIG#verifyAXFR(DNS%.Message,byte[],DNS%.TSIGRecord,boolean,boolean)","DNS%.Header#incCount(int)").
after_calls("DNS%.TSIG#verifyAXFR(DNS%.Message,byte[],DNS%.TSIGRecord,boolean,boolean)","DNS%.Header#toWire()").
after_calls("DNS%.TSIG#verifyAXFR(DNS%.Message,byte[],DNS%.TSIGRecord,boolean,boolean)","DNS%.Message#getHeader()").
after_calls("DNS%.TSIG#verifyAXFR(DNS%.Message,byte[],DNS%.TSIGRecord,boolean,boolean)","DNS%.Message#getTSIG()").
after_calls("DNS%.TSIG#verifyAXFR(DNS%.Message,byte[],DNS%.TSIGRecord,boolean,boolean)","DNS%.TSIG#verify(DNS%.Message,byte[],DNS%.TSIGRecord)").
after_calls("DNS%.TSIG#verifyAXFR(DNS%.Message,byte[],DNS%.TSIGRecord,boolean,boolean)","DNS%.TSIGRecord#getFudge()").
after_calls("DNS%.TSIG#verifyAXFR(DNS%.Message,byte[],DNS%.TSIGRecord,boolean,boolean)","DNS%.TSIGRecord#getSignature()").
after_calls("DNS%.TSIG#verifyAXFR(DNS%.Message,byte[],DNS%.TSIGRecord,boolean,boolean)","DNS%.TSIGRecord#getTimeSigned()").
after_calls("DNS%.TSIG#verifyAXFR(DNS%.Message,byte[],DNS%.TSIGRecord,boolean,boolean)","DNS.utils%.CountedDataOutputStream#<init>(java.io%.OutputStream)").
after_calls("DNS%.TSIG#verifyAXFR(DNS%.Message,byte[],DNS%.TSIGRecord,boolean,boolean)","DNS.utils%.CountedDataOutputStream#writeInt(int)").
after_calls("DNS%.TSIG#verifyAXFR(DNS%.Message,byte[],DNS%.TSIGRecord,boolean,boolean)","DNS.utils%.CountedDataOutputStream#writeShort(int)").
after_calls("DNS%.TSIG#verifyAXFR(DNS%.Message,byte[],DNS%.TSIGRecord,boolean,boolean)","DNS.utils%.hmacSigner#addData(byte[])").
after_calls("DNS%.TSIG#verifyAXFR(DNS%.Message,byte[],DNS%.TSIGRecord,boolean,boolean)","DNS.utils%.hmacSigner#addData(byte[],int,int)").
after_calls("DNS%.TSIG#verifyAXFR(DNS%.Message,byte[],DNS%.TSIGRecord,boolean,boolean)","DNS.utils%.hmacSigner#clear()").
after_calls("DNS%.TSIG#verifyAXFR(DNS%.Message,byte[],DNS%.TSIGRecord,boolean,boolean)","DNS.utils%.hmacSigner#verify(byte[])").
after_calls("DNS%.TSIG#verifyAXFR(DNS%.Message,byte[],DNS%.TSIGRecord,boolean,boolean)","java.io%.ByteArrayOutputStream#<init>()").
after_calls("DNS%.TSIG#verifyAXFR(DNS%.Message,byte[],DNS%.TSIGRecord,boolean,boolean)","java.io%.ByteArrayOutputStream#toByteArray()").
after_calls("DNS%.TSIG#verifyAXFR(DNS%.Message,byte[],DNS%.TSIGRecord,boolean,boolean)","java.util%.Date#getTime()").
after_calls("DNS%.TSIG#verifyAXFRStart()","DNS.utils%.hmacSigner#<init>(byte[])").
after_calls("DNS%.TSIGRecord#<init>(DNS%.Name,short,int,DNS%.Name,java.util%.Date,short,byte[],int,short,byte[])","DNS%.Record#<init>(DNS%.Name,short,short,int)").
after_calls("DNS%.TSIGRecord#<init>(DNS%.Name,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)","DNS%.Name#<init>(DNS.utils%.CountedDataInputStream,DNS%.Compression)").
after_calls("DNS%.TSIGRecord#<init>(DNS%.Name,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)","DNS%.Record#<init>(DNS%.Name,short,short,int)").
after_calls("DNS%.TSIGRecord#<init>(DNS%.Name,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)","DNS.utils%.CountedDataInputStream#read(byte[])").
after_calls("DNS%.TSIGRecord#<init>(DNS%.Name,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)","DNS.utils%.CountedDataInputStream#readInt()").
after_calls("DNS%.TSIGRecord#<init>(DNS%.Name,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)","DNS.utils%.CountedDataInputStream#readShort()").
after_calls("DNS%.TSIGRecord#<init>(DNS%.Name,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)","DNS.utils%.CountedDataInputStream#readUnsignedShort()").
after_calls("DNS%.TSIGRecord#<init>(DNS%.Name,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)","java.util%.Date#<init>(long)").
after_calls("DNS%.TSIGRecord#rrToWire(DNS%.Compression)","DNS%.Name#toWire(DNS.utils%.CountedDataOutputStream,DNS%.Compression)").
after_calls("DNS%.TSIGRecord#rrToWire(DNS%.Compression)","DNS.utils%.CountedDataOutputStream#<init>(java.io%.OutputStream)").
after_calls("DNS%.TSIGRecord#rrToWire(DNS%.Compression)","DNS.utils%.CountedDataOutputStream#write(byte[])").
after_calls("DNS%.TSIGRecord#rrToWire(DNS%.Compression)","DNS.utils%.CountedDataOutputStream#writeInt(int)").
after_calls("DNS%.TSIGRecord#rrToWire(DNS%.Compression)","DNS.utils%.CountedDataOutputStream#writeShort(int)").
after_calls("DNS%.TSIGRecord#rrToWire(DNS%.Compression)","java.io%.ByteArrayOutputStream#<init>()").
after_calls("DNS%.TSIGRecord#rrToWire(DNS%.Compression)","java.io%.ByteArrayOutputStream#toByteArray()").
after_calls("DNS%.TSIGRecord#rrToWire(DNS%.Compression)","java.util%.Date#getTime()").
after_calls("DNS%.TSIGRecord#toString()","DNS%.IO#formatBase64String(java.lang%.String,int,java.lang%.String,boolean)").
after_calls("DNS%.TSIGRecord#toString()","DNS%.Record#toStringNoData()").
after_calls("DNS%.TSIGRecord#toString()","DNS%.dns#rcodeString(int)").
after_calls("DNS%.TSIGRecord#toString()","DNS.utils%.base64#toString(byte[])").
after_calls("DNS%.TSIGRecord#toString()","java.io%.ByteArrayInputStream#<init>(byte[])").
after_calls("DNS%.TSIGRecord#toString()","java.io%.DataInputStream#<init>(java.io%.InputStream)").
after_calls("DNS%.TSIGRecord#toString()","java.io%.DataInputStream#readInt()").
after_calls("DNS%.TSIGRecord#toString()","java.io%.DataInputStream#readUnsignedShort()").
after_calls("DNS%.TSIGRecord#toString()","java.lang%.StringBuffer#append(java.lang%.Object)").
after_calls("DNS%.TSIGRecord#toString()","java.lang%.StringBuffer#append(java.lang%.String)").
after_calls("DNS%.TSIGRecord#toString()","java.lang%.StringBuffer#append(long)").
after_calls("DNS%.TSIGRecord#toString()","java.lang%.StringBuffer#toString()").
after_calls("DNS%.TSIGRecord#toString()","java.util%.Date#<init>(long)").
after_calls("DNS%.TSIGRecord#toString()","java.util%.Date#getTime()").
after_calls("DNS%.TXTRecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)","DNS%.MyStringTokenizer#hasMoreTokens()").
after_calls("DNS%.TXTRecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)","DNS%.MyStringTokenizer#nextToken()").
after_calls("DNS%.TXTRecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)","DNS%.Record#<init>(DNS%.Name,short,short,int)").
after_calls("DNS%.TXTRecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)","java.util%.Vector#<init>()").
after_calls("DNS%.TXTRecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)","java.util%.Vector#addElement(java.lang%.Object)").
after_calls("DNS%.TXTRecord#<init>(DNS%.Name,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)","DNS%.Record#<init>(DNS%.Name,short,short,int)").
after_calls("DNS%.TXTRecord#<init>(DNS%.Name,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)","DNS.utils%.CountedDataInputStream#read(byte[])").
after_calls("DNS%.TXTRecord#<init>(DNS%.Name,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)","DNS.utils%.CountedDataInputStream#readByte()").
after_calls("DNS%.TXTRecord#<init>(DNS%.Name,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)","java.lang%.String#<init>(byte[])").
after_calls("DNS%.TXTRecord#<init>(DNS%.Name,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)","java.util%.Vector#<init>()").
after_calls("DNS%.TXTRecord#<init>(DNS%.Name,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)","java.util%.Vector#addElement(java.lang%.Object)").
after_calls("DNS%.TXTRecord#<init>(DNS%.Name,short,int,java.lang%.String)","DNS%.Record#<init>(DNS%.Name,short,short,int)").
after_calls("DNS%.TXTRecord#<init>(DNS%.Name,short,int,java.lang%.String)","java.util%.Vector#<init>()").
after_calls("DNS%.TXTRecord#<init>(DNS%.Name,short,int,java.lang%.String)","java.util%.Vector#addElement(java.lang%.Object)").
after_calls("DNS%.TXTRecord#<init>(DNS%.Name,short,int,java.util%.Vector)","DNS%.Record#<init>(DNS%.Name,short,short,int)").
after_calls("DNS%.TXTRecord#rrToWire(DNS%.Compression)","DNS.utils%.CountedDataOutputStream#<init>(java.io%.OutputStream)").
after_calls("DNS%.TXTRecord#rrToWire(DNS%.Compression)","DNS.utils%.CountedDataOutputStream#writeString(java.lang%.String)").
after_calls("DNS%.TXTRecord#rrToWire(DNS%.Compression)","java.io%.ByteArrayOutputStream#<init>()").
after_calls("DNS%.TXTRecord#rrToWire(DNS%.Compression)","java.io%.ByteArrayOutputStream#toByteArray()").
after_calls("DNS%.TXTRecord#rrToWire(DNS%.Compression)","java.util%.Enumeration#hasMoreElements()").
after_calls("DNS%.TXTRecord#rrToWire(DNS%.Compression)","java.util%.Enumeration#nextElement()").
after_calls("DNS%.TXTRecord#rrToWire(DNS%.Compression)","java.util%.Vector#elements()").
after_calls("DNS%.TXTRecord#toString()","DNS%.Record#toStringNoData()").
after_calls("DNS%.TXTRecord#toString()","java.lang%.StringBuffer#append(java.lang%.String)").
after_calls("DNS%.TXTRecord#toString()","java.lang%.StringBuffer#toString()").
after_calls("DNS%.TXTRecord#toString()","java.util%.Enumeration#hasMoreElements()").
after_calls("DNS%.TXTRecord#toString()","java.util%.Enumeration#nextElement()").
after_calls("DNS%.TXTRecord#toString()","java.util%.Vector#elements()").
after_calls("DNS%.UNKRecord#<init>(DNS%.Name,short,short,int,DNS%.MyStringTokenizer,DNS%.Name)","DNS%.Record#<init>(DNS%.Name,short,short,int)").
after_calls("DNS%.UNKRecord#<init>(DNS%.Name,short,short,int,DNS%.MyStringTokenizer,DNS%.Name)","java.io%.PrintStream#println(java.lang%.String)").
after_calls("DNS%.UNKRecord#<init>(DNS%.Name,short,short,int,DNS%.MyStringTokenizer,DNS%.Name)","java.lang%.System#exit(int)").
after_calls("DNS%.UNKRecord#<init>(DNS%.Name,short,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)","DNS%.Record#<init>(DNS%.Name,short,short,int)").
after_calls("DNS%.UNKRecord#<init>(DNS%.Name,short,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)","DNS.utils%.CountedDataInputStream#read(byte[])").
after_calls("DNS%.UNKRecord#toString()","DNS%.Record#toStringNoData()").
after_calls("DNS%.UNKRecord#toString()","java.lang%.StringBuffer#append(java.lang%.String)").
after_calls("DNS%.UNKRecord#toString()","java.lang%.StringBuffer#toString()").
after_calls("DNS%.Zone#<init>(java.lang%.String,int)","DNS%.IO#readExtendedLine(java.io%.BufferedReader)").
after_calls("DNS%.Zone#<init>(java.lang%.String,int)","DNS%.MyStringTokenizer#<init>(java.lang%.String)").
after_calls("DNS%.Zone#<init>(java.lang%.String,int)","DNS%.MyStringTokenizer#nextToken()").
after_calls("DNS%.Zone#<init>(java.lang%.String,int)","DNS%.MyStringTokenizer#putBackToken(java.lang%.String)").
after_calls("DNS%.Zone#<init>(java.lang%.String,int)","DNS%.RRset#<init>(DNS%.Name,short)").
after_calls("DNS%.Zone#<init>(java.lang%.String,int)","DNS%.RRset#addRR(DNS%.Record)").
after_calls("DNS%.Zone#<init>(java.lang%.String,int)","DNS%.Zone#parseOrigin(DNS%.MyStringTokenizer)").
after_calls("DNS%.Zone#<init>(java.lang%.String,int)","DNS%.Zone#parseRR(DNS%.MyStringTokenizer,boolean,DNS%.Record,DNS%.Name)").
after_calls("DNS%.Zone#<init>(java.lang%.String,int)","java.io%.BufferedReader#<init>(java.io%.Reader)").
after_calls("DNS%.Zone#<init>(java.lang%.String,int)","java.io%.FileInputStream#<init>(java.lang%.String)").
after_calls("DNS%.Zone#<init>(java.lang%.String,int)","java.io%.IOException#<init>(java.lang%.String)").
after_calls("DNS%.Zone#<init>(java.lang%.String,int)","java.io%.InputStreamReader#<init>(java.io%.InputStream)").
after_calls("DNS%.Zone#<init>(java.lang%.String,int)","java.lang%.Short#<init>(short)").
after_calls("DNS%.Zone#<init>(java.lang%.String,int)","java.lang%.String#equals(java.lang%.Object)").
after_calls("DNS%.Zone#<init>(java.lang%.String,int)","java.lang%.String#length()").
after_calls("DNS%.Zone#<init>(java.lang%.String,int)","java.lang%.String#startsWith(java.lang%.String)").
after_calls("DNS%.Zone#<init>(java.lang%.String,int)","java.lang%.Throwable#toString()").
after_calls("DNS%.Zone#<init>(java.lang%.String,int)","java.util%.Hashtable#<init>()").
after_calls("DNS%.Zone#<init>(java.lang%.String,int)","java.util%.Hashtable#get(java.lang%.Object)").
after_calls("DNS%.Zone#<init>(java.lang%.String,int)","java.util%.Hashtable#put(java.lang%.Object,java.lang%.Object)").
after_calls("DNS%.Zone#findName(DNS%.Name)","java.util%.Hashtable#get(java.lang%.Object)").
after_calls("DNS%.Zone#parseOrigin(DNS%.MyStringTokenizer)","DNS%.MyStringTokenizer#nextToken()").
after_calls("DNS%.Zone#parseOrigin(DNS%.MyStringTokenizer)","DNS%.Name#<init>(java.lang%.String)").
after_calls("DNS%.Zone#parseRR(DNS%.MyStringTokenizer,boolean,DNS%.Record,DNS%.Name)","DNS%.MyStringTokenizer#nextToken()").
after_calls("DNS%.Zone#parseRR(DNS%.MyStringTokenizer,boolean,DNS%.Record,DNS%.Name)","DNS%.Name#<init>(java.lang%.String,DNS%.Name)").
after_calls("DNS%.Zone#parseRR(DNS%.MyStringTokenizer,boolean,DNS%.Record,DNS%.Name)","DNS%.Record#fromString(DNS%.Name,short,short,int,DNS%.MyStringTokenizer,DNS%.Name)").
after_calls("DNS%.Zone#parseRR(DNS%.MyStringTokenizer,boolean,DNS%.Record,DNS%.Name)","DNS%.dns#classValue(java.lang%.String)").
after_calls("DNS%.Zone#parseRR(DNS%.MyStringTokenizer,boolean,DNS%.Record,DNS%.Name)","DNS%.dns#typeValue(java.lang%.String)").
after_calls("DNS%.Zone#parseRR(DNS%.MyStringTokenizer,boolean,DNS%.Record,DNS%.Name)","java.io%.IOException#<init>(java.lang%.String)").
after_calls("DNS%.Zone#parseRR(DNS%.MyStringTokenizer,boolean,DNS%.Record,DNS%.Name)","java.lang%.Integer#parseInt(java.lang%.String)").
after_calls("DNS%.dns#classString(int)","java.lang%.Integer#<init>(int)").
after_calls("DNS%.dns#classString(int)","java.lang%.Integer#toString()").
after_calls("DNS%.dns#classString(int)","java.lang%.Short#<init>(short)").
after_calls("DNS%.dns#classString(int)","java.util%.Hashtable#get(java.lang%.Object)").
after_calls("DNS%.dns#classValue(java.lang%.String)","java.lang%.Short#parseShort(java.lang%.String)").
after_calls("DNS%.dns#classValue(java.lang%.String)","java.lang%.Short#shortValue()").
after_calls("DNS%.dns#classValue(java.lang%.String)","java.lang%.String#toUpperCase()").
after_calls("DNS%.dns#classValue(java.lang%.String)","java.util%.Hashtable#get(java.lang%.Object)").
after_calls("DNS%.dns#flagString(int)","java.lang%.Byte#<init>(byte)").
after_calls("DNS%.dns#flagString(int)","java.lang%.Integer#<init>(int)").
after_calls("DNS%.dns#flagString(int)","java.lang%.Integer#toString()").
after_calls("DNS%.dns#flagString(int)","java.util%.Hashtable#get(java.lang%.Object)").
after_calls("DNS%.dns#getRecords(DNS%.Resolver,java.lang%.String,short)","DNS%.dns#getRecords(DNS%.Resolver,java.lang%.String,short,short)").
after_calls("DNS%.dns#getRecords(DNS%.Resolver,java.lang%.String,short,short)","DNS%.Header#getRcode()").
after_calls("DNS%.dns#getRecords(DNS%.Resolver,java.lang%.String,short,short)","DNS%.Header#setFlag(int)").
after_calls("DNS%.dns#getRecords(DNS%.Resolver,java.lang%.String,short,short)","DNS%.Header#setOpcode(byte)").
after_calls("DNS%.dns#getRecords(DNS%.Resolver,java.lang%.String,short,short)","DNS%.Message#<init>()").
after_calls("DNS%.dns#getRecords(DNS%.Resolver,java.lang%.String,short,short)","DNS%.Message#addRecord(int,DNS%.Record)").
after_calls("DNS%.dns#getRecords(DNS%.Resolver,java.lang%.String,short,short)","DNS%.Message#getHeader()").
after_calls("DNS%.dns#getRecords(DNS%.Resolver,java.lang%.String,short,short)","DNS%.Message#getSection(int)").
after_calls("DNS%.dns#getRecords(DNS%.Resolver,java.lang%.String,short,short)","DNS%.Name#<init>(java.lang%.String)").
after_calls("DNS%.dns#getRecords(DNS%.Resolver,java.lang%.String,short,short)","DNS%.Record#getType()").
after_calls("DNS%.dns#getRecords(DNS%.Resolver,java.lang%.String,short,short)","DNS%.Record#newRecord(DNS%.Name,short,short)").
after_calls("DNS%.dns#getRecords(DNS%.Resolver,java.lang%.String,short,short)","DNS%.Resolver#<init>()").
after_calls("DNS%.dns#getRecords(DNS%.Resolver,java.lang%.String,short,short)","DNS%.Resolver#send(DNS%.Message)").
after_calls("DNS%.dns#getRecords(DNS%.Resolver,java.lang%.String,short,short)","DNS%.dns#matchType(short,short)").
after_calls("DNS%.dns#getRecords(DNS%.Resolver,java.lang%.String,short,short)","java.io%.PrintStream#println(java.lang%.String)").
after_calls("DNS%.dns#getRecords(DNS%.Resolver,java.lang%.String,short,short)","java.lang%.System#exit(int)").
after_calls("DNS%.dns#getRecords(DNS%.Resolver,java.lang%.String,short,short)","java.util%.Enumeration#hasMoreElements()").
after_calls("DNS%.dns#getRecords(DNS%.Resolver,java.lang%.String,short,short)","java.util%.Enumeration#nextElement()").
after_calls("DNS%.dns#getRecords(java.lang%.String,short)","DNS%.dns#getRecords(DNS%.Resolver,java.lang%.String,short,short)").
after_calls("DNS%.dns#getRecords(java.lang%.String,short,short)","DNS%.dns#getRecords(DNS%.Resolver,java.lang%.String,short,short)").
after_calls("DNS%.dns#getRecordsByAddress(DNS%.Resolver,java.lang%.String,short)","DNS%.dns#getRecords(DNS%.Resolver,java.lang%.String,short,short)").
after_calls("DNS%.dns#getRecordsByAddress(DNS%.Resolver,java.lang%.String,short)","java.lang%.StringBuffer#<init>()").
after_calls("DNS%.dns#getRecordsByAddress(DNS%.Resolver,java.lang%.String,short)","java.lang%.StringBuffer#append(int)").
after_calls("DNS%.dns#getRecordsByAddress(DNS%.Resolver,java.lang%.String,short)","java.lang%.StringBuffer#append(java.lang%.String)").
after_calls("DNS%.dns#getRecordsByAddress(DNS%.Resolver,java.lang%.String,short)","java.lang%.StringBuffer#toString()").
after_calls("DNS%.dns#getRecordsByAddress(DNS%.Resolver,java.lang%.String,short)","java.net%.InetAddress#getAddress()").
after_calls("DNS%.dns#getRecordsByAddress(DNS%.Resolver,java.lang%.String,short)","java.net%.InetAddress#getByName(java.lang%.String)").
after_calls("DNS%.dns#getRecordsByAddress(java.lang%.String,short)","DNS%.dns#getRecordsByAddress(DNS%.Resolver,java.lang%.String,short)").
after_calls("DNS%.dns#init(java.lang%.String)","DNS%.Resolver#setDefaultResolver(java.lang%.String)").
after_calls("DNS%.dns#longSectionString(int)","java.lang%.Byte#<init>(byte)").
after_calls("DNS%.dns#longSectionString(int)","java.lang%.Integer#<init>(int)").
after_calls("DNS%.dns#longSectionString(int)","java.lang%.Integer#toString()").
after_calls("DNS%.dns#longSectionString(int)","java.util%.Hashtable#get(java.lang%.Object)").
after_calls("DNS%.dns#opcodeString(int)","java.lang%.Byte#<init>(byte)").
after_calls("DNS%.dns#opcodeString(int)","java.lang%.Integer#<init>(int)").
after_calls("DNS%.dns#opcodeString(int)","java.lang%.Integer#toString()").
after_calls("DNS%.dns#opcodeString(int)","java.util%.Hashtable#get(java.lang%.Object)").
after_calls("DNS%.dns#put2(java.util%.Hashtable,java.lang%.Object,java.lang%.Object)","java.util%.Hashtable#put(java.lang%.Object,java.lang%.Object)").
after_calls("DNS%.dns#rcodeString(int)","java.lang%.Byte#<init>(byte)").
after_calls("DNS%.dns#rcodeString(int)","java.lang%.Integer#<init>(int)").
after_calls("DNS%.dns#rcodeString(int)","java.lang%.Integer#toString()").
after_calls("DNS%.dns#rcodeString(int)","java.util%.Hashtable#get(java.lang%.Object)").
after_calls("DNS%.dns#rcodeValue(java.lang%.String)","java.lang%.Byte#byteValue()").
after_calls("DNS%.dns#rcodeValue(java.lang%.String)","java.lang%.Byte#parseByte(java.lang%.String)").
after_calls("DNS%.dns#rcodeValue(java.lang%.String)","java.lang%.String#toUpperCase()").
after_calls("DNS%.dns#rcodeValue(java.lang%.String)","java.util%.Hashtable#get(java.lang%.Object)").
after_calls("DNS%.dns#sectionString(int)","java.lang%.Byte#<init>(byte)").
after_calls("DNS%.dns#sectionString(int)","java.lang%.Integer#<init>(int)").
after_calls("DNS%.dns#sectionString(int)","java.lang%.Integer#toString()").
after_calls("DNS%.dns#sectionString(int)","java.util%.Hashtable#get(java.lang%.Object)").
after_calls("DNS%.dns#sectionValue(java.lang%.String)","java.lang%.Byte#byteValue()").
after_calls("DNS%.dns#sectionValue(java.lang%.String)","java.lang%.Byte#parseByte(java.lang%.String)").
after_calls("DNS%.dns#sectionValue(java.lang%.String)","java.lang%.String#toLowerCase()").
after_calls("DNS%.dns#sectionValue(java.lang%.String)","java.util%.Hashtable#get(java.lang%.Object)").
after_calls("DNS%.dns#typeString(int)","java.lang%.Integer#<init>(int)").
after_calls("DNS%.dns#typeString(int)","java.lang%.Integer#toString()").
after_calls("DNS%.dns#typeString(int)","java.lang%.Short#<init>(short)").
after_calls("DNS%.dns#typeString(int)","java.util%.Hashtable#get(java.lang%.Object)").
after_calls("DNS%.dns#typeValue(java.lang%.String)","java.lang%.Short#parseShort(java.lang%.String)").
after_calls("DNS%.dns#typeValue(java.lang%.String)","java.lang%.Short#shortValue()").
after_calls("DNS%.dns#typeValue(java.lang%.String)","java.lang%.String#toUpperCase()").
after_calls("DNS%.dns#typeValue(java.lang%.String)","java.util%.Hashtable#get(java.lang%.Object)").
after_calls("DNS.utils%.CountedDataInputStream#<init>(java.io%.InputStream)","java.io%.DataInputStream#<init>(java.io%.InputStream)").
after_calls("DNS.utils%.CountedDataInputStream#read(byte[])","java.io%.DataInputStream#readFully(byte[])").
after_calls("DNS.utils%.CountedDataInputStream#readByte()","java.io%.DataInputStream#readByte()").
after_calls("DNS.utils%.CountedDataInputStream#readInt()","java.io%.DataInputStream#readInt()").
after_calls("DNS.utils%.CountedDataInputStream#readLong()","java.io%.DataInputStream#readLong()").
after_calls("DNS.utils%.CountedDataInputStream#readShort()","java.io%.DataInputStream#readShort()").
after_calls("DNS.utils%.CountedDataInputStream#readString()","java.io%.DataInputStream#readByte()").
after_calls("DNS.utils%.CountedDataInputStream#readString()","java.io%.DataInputStream#readFully(byte[])").
after_calls("DNS.utils%.CountedDataInputStream#readString()","java.lang%.String#<init>(byte[])").
after_calls("DNS.utils%.CountedDataInputStream#readUnsignedByte()","java.io%.DataInputStream#readUnsignedByte()").
after_calls("DNS.utils%.CountedDataInputStream#readUnsignedShort()","java.io%.DataInputStream#readUnsignedShort()").
after_calls("DNS.utils%.CountedDataInputStream#skipBytes(int)","java.io%.DataInputStream#skipBytes(int)").
after_calls("DNS.utils%.CountedDataOutputStream#<init>(java.io%.OutputStream)","java.io%.DataOutputStream#<init>(java.io%.OutputStream)").
after_calls("DNS.utils%.CountedDataOutputStream#write(byte[])","java.io%.FilterOutputStream#write(byte[])").
after_calls("DNS.utils%.CountedDataOutputStream#writeByte(int)","java.io%.DataOutputStream#writeByte(int)").
after_calls("DNS.utils%.CountedDataOutputStream#writeInt(int)","java.io%.DataOutputStream#writeInt(int)").
after_calls("DNS.utils%.CountedDataOutputStream#writeLong(long)","java.io%.DataOutputStream#writeLong(long)").
after_calls("DNS.utils%.CountedDataOutputStream#writeShort(int)","java.io%.DataOutputStream#writeShort(int)").
after_calls("DNS.utils%.CountedDataOutputStream#writeString(java.lang%.String)","java.io%.DataOutputStream#writeByte(int)").
after_calls("DNS.utils%.CountedDataOutputStream#writeString(java.lang%.String)","java.io%.FilterOutputStream#write(byte[])").
after_calls("DNS.utils%.CountedDataOutputStream#writeString(java.lang%.String)","java.lang%.String#getBytes()").
after_calls("DNS.utils%.base16#fromString(java.lang%.String)","java.io%.ByteArrayOutputStream#<init>()").
after_calls("DNS.utils%.base16#fromString(java.lang%.String)","java.io%.ByteArrayOutputStream#toByteArray()").
after_calls("DNS.utils%.base16#fromString(java.lang%.String)","java.io%.DataOutputStream#<init>(java.io%.OutputStream)").
after_calls("DNS.utils%.base16#fromString(java.lang%.String)","java.io%.DataOutputStream#writeByte(int)").
after_calls("DNS.utils%.base16#fromString(java.lang%.String)","java.lang%.Character#toUpperCase(char)").
after_calls("DNS.utils%.base16#fromString(java.lang%.String)","java.lang%.String#charAt(int)").
after_calls("DNS.utils%.base16#fromString(java.lang%.String)","java.lang%.String#indexOf(int)").
after_calls("DNS.utils%.base16#fromString(java.lang%.String)","java.lang%.String#length()").
after_calls("DNS.utils%.base16#toString(byte[])","java.io%.ByteArrayOutputStream#<init>()").
after_calls("DNS.utils%.base16#toString(byte[])","java.io%.ByteArrayOutputStream#toByteArray()").
after_calls("DNS.utils%.base16#toString(byte[])","java.io%.ByteArrayOutputStream#write(int)").
after_calls("DNS.utils%.base16#toString(byte[])","java.lang%.String#<init>(byte[])").
after_calls("DNS.utils%.base16#toString(byte[])","java.lang%.String#charAt(int)").
after_calls("DNS.utils%.base64#fromString(java.lang%.String)","java.io%.ByteArrayOutputStream#<init>()").
after_calls("DNS.utils%.base64#fromString(java.lang%.String)","java.io%.ByteArrayOutputStream#toByteArray()").
after_calls("DNS.utils%.base64#fromString(java.lang%.String)","java.io%.DataOutputStream#<init>(java.io%.OutputStream)").
after_calls("DNS.utils%.base64#fromString(java.lang%.String)","java.io%.DataOutputStream#writeByte(int)").
after_calls("DNS.utils%.base64#fromString(java.lang%.String)","java.lang%.String#charAt(int)").
after_calls("DNS.utils%.base64#fromString(java.lang%.String)","java.lang%.String#indexOf(int)").
after_calls("DNS.utils%.base64#fromString(java.lang%.String)","java.lang%.String#length()").
after_calls("DNS.utils%.base64#toString(byte[])","java.io%.ByteArrayOutputStream#<init>()").
after_calls("DNS.utils%.base64#toString(byte[])","java.io%.ByteArrayOutputStream#toByteArray()").
after_calls("DNS.utils%.base64#toString(byte[])","java.io%.ByteArrayOutputStream#write(int)").
after_calls("DNS.utils%.base64#toString(byte[])","java.lang%.String#<init>(byte[])").
after_calls("DNS.utils%.base64#toString(byte[])","java.lang%.String#charAt(int)").
after_calls("DNS.utils%.hmacSigner#<init>(byte[])","DNS.utils%.md5#compute(byte[])").
after_calls("DNS.utils%.hmacSigner#<init>(byte[])","java.io%.ByteArrayOutputStream#<init>()").
after_calls("DNS.utils%.hmacSigner#<init>(byte[])","java.io%.OutputStream#write(byte[])").
after_calls("DNS.utils%.hmacSigner#addData(byte[])","java.io%.OutputStream#write(byte[])").
after_calls("DNS.utils%.hmacSigner#addData(byte[],int,int)","java.io%.ByteArrayOutputStream#write(byte[],int,int)").
after_calls("DNS.utils%.hmacSigner#clear()","java.io%.ByteArrayOutputStream#<init>()").
after_calls("DNS.utils%.hmacSigner#clear()","java.io%.OutputStream#write(byte[])").
after_calls("DNS.utils%.hmacSigner#printByteString(java.lang%.String,byte[],int,int)","java.io%.PrintStream#print(java.lang%.String)").
after_calls("DNS.utils%.hmacSigner#printByteString(java.lang%.String,byte[],int,int)","java.io%.PrintStream#println()").
after_calls("DNS.utils%.hmacSigner#printByteString(java.lang%.String,byte[],int,int)","java.lang%.Integer#toHexString(int)").
after_calls("DNS.utils%.hmacSigner#sign()","DNS.utils%.md5#compute(byte[])").
after_calls("DNS.utils%.hmacSigner#sign()","java.io%.ByteArrayOutputStream#<init>()").
after_calls("DNS.utils%.hmacSigner#sign()","java.io%.ByteArrayOutputStream#toByteArray()").
after_calls("DNS.utils%.hmacSigner#sign()","java.io%.OutputStream#write(byte[])").
after_calls("DNS.utils%.hmacSigner#verify(byte[])","DNS.utils%.hmacSigner#byteArrayCompare(byte[],byte[])").
after_calls("DNS.utils%.hmacSigner#verify(byte[])","DNS.utils%.hmacSigner#sign()").
after_calls("DNS.utils%.md5#FF(int,int,int,int,int,int,int)","DNS.utils%.md5#F(int,int,int)").
after_calls("DNS.utils%.md5#FF(int,int,int,int,int,int,int)","DNS.utils%.md5#ROTATE_LEFT(int,int)").
after_calls("DNS.utils%.md5#GG(int,int,int,int,int,int,int)","DNS.utils%.md5#G(int,int,int)").
after_calls("DNS.utils%.md5#GG(int,int,int,int,int,int,int)","DNS.utils%.md5#ROTATE_LEFT(int,int)").
after_calls("DNS.utils%.md5#HH(int,int,int,int,int,int,int)","DNS.utils%.md5#H(int,int,int)").
after_calls("DNS.utils%.md5#HH(int,int,int,int,int,int,int)","DNS.utils%.md5#ROTATE_LEFT(int,int)").
after_calls("DNS.utils%.md5#II(int,int,int,int,int,int,int)","DNS.utils%.md5#I(int,int,int)").
after_calls("DNS.utils%.md5#II(int,int,int,int,int,int,int)","DNS.utils%.md5#ROTATE_LEFT(int,int)").
after_calls("DNS.utils%.md5#compute(byte[])","DNS.utils%.md5#compute(byte[],int,int)").
after_calls("DNS.utils%.md5#compute(byte[],int,int)","DNS.utils%.md5#digest(byte[],int,int,int[])").
after_calls("DNS.utils%.md5#compute(byte[],int,int)","DNS.utils%.md5#encode(int[])").
after_calls("DNS.utils%.md5#compute(byte[],int,int)","DNS.utils%.md5#pad(byte[],int,int)").
after_calls("DNS.utils%.md5#digest(byte[],int,int,int[])","DNS.utils%.md5#FF(int,int,int,int,int,int,int)").
after_calls("DNS.utils%.md5#digest(byte[],int,int,int[])","DNS.utils%.md5#GG(int,int,int,int,int,int,int)").
after_calls("DNS.utils%.md5#digest(byte[],int,int,int[])","DNS.utils%.md5#HH(int,int,int,int,int,int,int)").
after_calls("DNS.utils%.md5#digest(byte[],int,int,int[])","DNS.utils%.md5#II(int,int,int,int,int,int,int)").
after_calls("DNS.utils%.md5#digest(byte[],int,int,int[])","DNS.utils%.md5#decode(byte[],int,int)").
after_calls("DNS.utils%.md5#pad(byte[],int,int)","java.lang%.System#arraycopy(java.lang%.Object,int,java.lang%.Object,int,int)").
after_field("%.dig#_class","_class","%.dig").
after_field("%.dig#name","name","%.dig").
after_field("%.dig#type","type","%.dig").
after_field("%.dnsServer#zcount","zcount","%.dnsServer").
after_field("%.dnsServer#znames","znames","%.dnsServer").
after_field("%.dnsServer#zones","zones","%.dnsServer").
after_field("%.update#ADDITIONAL","ADDITIONAL","%.update").
after_field("%.update#PREREQ","PREREQ","%.update").
after_field("%.update#UPDATE","UPDATE","%.update").
after_field("%.update#ZONE","ZONE","%.update").
after_field("%.update#defaultClass","defaultClass","%.update").
after_field("%.update#defaultTTL","defaultTTL","%.update").
after_field("%.update#origin","origin","%.update").
after_field("%.update#query","query","%.update").
after_field("%.update#res","res","%.update").
after_field("%.update#response","response","%.update").
after_field("%.update#server","server","%.update").
after_field("DNS%.ARecord#address","address","DNS%.ARecord").
after_field("DNS%.CERTRecord#NOAUTH","NOAUTH","DNS%.CERTRecord").
after_field("DNS%.CERTRecord#NOCONF","NOCONF","DNS%.CERTRecord").
after_field("DNS%.CERTRecord#alg","alg","DNS%.CERTRecord").
after_field("DNS%.CERTRecord#cert","cert","DNS%.CERTRecord").
after_field("DNS%.CERTRecord#certType","certType","DNS%.CERTRecord").
after_field("DNS%.CERTRecord#keyTag","keyTag","DNS%.CERTRecord").
after_field("DNS%.Compression#h","h","DNS%.Compression").
after_field("DNS%.FindResolver#server","server","DNS%.FindResolver").
after_field("DNS%.HINFORecord#cpu","cpu","DNS%.HINFORecord").
after_field("DNS%.HINFORecord#os","os","DNS%.HINFORecord").
after_field("DNS%.Header#counts","counts","DNS%.Header").
after_field("DNS%.Header#flags","flags","DNS%.Header").
after_field("DNS%.Header#id","id","DNS%.Header").
after_field("DNS%.Header#opcode","opcode","DNS%.Header").
after_field("DNS%.Header#rcode","rcode","DNS%.Header").
after_field("DNS%.KEYRecord#NOAUTH","NOAUTH","DNS%.KEYRecord").
after_field("DNS%.KEYRecord#NOCONF","NOCONF","DNS%.KEYRecord").
after_field("DNS%.KEYRecord#alg","alg","DNS%.KEYRecord").
after_field("DNS%.KEYRecord#flags","flags","DNS%.KEYRecord").
after_field("DNS%.KEYRecord#key","key","DNS%.KEYRecord").
after_field("DNS%.KEYRecord#proto","proto","DNS%.KEYRecord").
after_field("DNS%.MXRecord#priority","priority","DNS%.MXRecord").
after_field("DNS%.MXRecord#target","target","DNS%.MXRecord").
after_field("DNS%.Message#header","header","DNS%.Message").
after_field("DNS%.Message#sections","sections","DNS%.Message").
after_field("DNS%.Message#size","size","DNS%.Message").
after_field("DNS%.MyStringTokenizer#current","current","DNS%.MyStringTokenizer").
after_field("DNS%.MyStringTokenizer#delim","delim","DNS%.MyStringTokenizer").
after_field("DNS%.MyStringTokenizer#putBack","putBack","DNS%.MyStringTokenizer").
after_field("DNS%.MyStringTokenizer#returnTokens","returnTokens","DNS%.MyStringTokenizer").
after_field("DNS%.MyStringTokenizer#string","string","DNS%.MyStringTokenizer").
after_field("DNS%.NS_CNAME_PTRRecord#target","target","DNS%.NS_CNAME_PTRRecord").
after_field("DNS%.NXTRecord#bitmap","bitmap","DNS%.NXTRecord").
after_field("DNS%.NXTRecord#next","next","DNS%.NXTRecord").
after_field("DNS%.Name#MAXLABELS","MAXLABELS","DNS%.Name").
after_field("DNS%.Name#labels","labels","DNS%.Name").
after_field("DNS%.Name#name","name","DNS%.Name").
after_field("DNS%.Name#root","root","DNS%.Name").
after_field("DNS%.RRset#name","name","DNS%.RRset").
after_field("DNS%.RRset#rrs","rrs","DNS%.RRset").
after_field("DNS%.RRset#type","type","DNS%.RRset").
after_field("DNS%.Record#dclass","dclass","DNS%.Record").
after_field("DNS%.Record#name","name","DNS%.Record").
after_field("DNS%.Record#oLength","oLength","DNS%.Record").
after_field("DNS%.Record#ttl","ttl","DNS%.Record").
after_field("DNS%.Record#type","type","DNS%.Record").
after_field("DNS%.Resolver#addr","addr","DNS%.Resolver").
after_field("DNS%.Resolver#defaultResolver","defaultResolver","DNS%.Resolver").
after_field("DNS%.Resolver#port","port","DNS%.Resolver").
after_field("DNS%.Resolver#timeoutValue","timeoutValue","DNS%.Resolver").
after_field("DNS%.Resolver#tsig","tsig","DNS%.Resolver").
after_field("DNS%.Resolver#useEDNS","useEDNS","DNS%.Resolver").
after_field("DNS%.Resolver#useTCP","useTCP","DNS%.Resolver").
after_field("DNS%.SIGRecord#alg","alg","DNS%.SIGRecord").
after_field("DNS%.SIGRecord#covered","covered","DNS%.SIGRecord").
after_field("DNS%.SIGRecord#expire","expire","DNS%.SIGRecord").
after_field("DNS%.SIGRecord#footprint","footprint","DNS%.SIGRecord").
after_field("DNS%.SIGRecord#labels","labels","DNS%.SIGRecord").
after_field("DNS%.SIGRecord#origttl","origttl","DNS%.SIGRecord").
after_field("DNS%.SIGRecord#signature","signature","DNS%.SIGRecord").
after_field("DNS%.SIGRecord#signer","signer","DNS%.SIGRecord").
after_field("DNS%.SIGRecord#timeSigned","timeSigned","DNS%.SIGRecord").
after_field("DNS%.SOARecord#admin","admin","DNS%.SOARecord").
after_field("DNS%.SOARecord#expire","expire","DNS%.SOARecord").
after_field("DNS%.SOARecord#host","host","DNS%.SOARecord").
after_field("DNS%.SOARecord#minimum","minimum","DNS%.SOARecord").
after_field("DNS%.SOARecord#refresh","refresh","DNS%.SOARecord").
after_field("DNS%.SOARecord#retry","retry","DNS%.SOARecord").
after_field("DNS%.SOARecord#serial","serial","DNS%.SOARecord").
after_field("DNS%.SRVRecord#port","port","DNS%.SRVRecord").
after_field("DNS%.SRVRecord#priority","priority","DNS%.SRVRecord").
after_field("DNS%.SRVRecord#target","target","DNS%.SRVRecord").
after_field("DNS%.SRVRecord#weight","weight","DNS%.SRVRecord").
after_field("DNS%.TSIG#axfrSigner","axfrSigner","DNS%.TSIG").
after_field("DNS%.TSIG#key","key","DNS%.TSIG").
after_field("DNS%.TSIG#name","name","DNS%.TSIG").
after_field("DNS%.TSIGRecord#alg","alg","DNS%.TSIGRecord").
after_field("DNS%.TSIGRecord#error","error","DNS%.TSIGRecord").
after_field("DNS%.TSIGRecord#fudge","fudge","DNS%.TSIGRecord").
after_field("DNS%.TSIGRecord#originalID","originalID","DNS%.TSIGRecord").
after_field("DNS%.TSIGRecord#other","other","DNS%.TSIGRecord").
after_field("DNS%.TSIGRecord#signature","signature","DNS%.TSIGRecord").
after_field("DNS%.TSIGRecord#timeSigned","timeSigned","DNS%.TSIGRecord").
after_field("DNS%.TXTRecord#strings","strings","DNS%.TXTRecord").
after_field("DNS%.UNKRecord#data","data","DNS%.UNKRecord").
after_field("DNS%.Zone#CACHE","CACHE","DNS%.Zone").
after_field("DNS%.Zone#PRIMARY","PRIMARY","DNS%.Zone").
after_field("DNS%.Zone#SECONDARY","SECONDARY","DNS%.Zone").
after_field("DNS%.Zone#data","data","DNS%.Zone").
after_field("DNS%.Zone#origin","origin","DNS%.Zone").
after_field("DNS%.Zone#type","type","DNS%.Zone").
after_field("DNS%.dns#A","A","DNS%.dns").
after_field("DNS%.dns#AA","AA","DNS%.dns").
after_field("DNS%.dns#AAAA","AAAA","DNS%.dns").
after_field("DNS%.dns#AD","AD","DNS%.dns").
after_field("DNS%.dns#ADDITIONAL","ADDITIONAL","DNS%.dns").
after_field("DNS%.dns#AFSDB","AFSDB","DNS%.dns").
after_field("DNS%.dns#ANSWER","ANSWER","DNS%.dns").
after_field("DNS%.dns#ANY","ANY","DNS%.dns").
after_field("DNS%.dns#ATMA","ATMA","DNS%.dns").
after_field("DNS%.dns#AUTHORITY","AUTHORITY","DNS%.dns").
after_field("DNS%.dns#AXFR","AXFR","DNS%.dns").
after_field("DNS%.dns#BADID","BADID","DNS%.dns").
after_field("DNS%.dns#BADKEY","BADKEY","DNS%.dns").
after_field("DNS%.dns#BADSIG","BADSIG","DNS%.dns").
after_field("DNS%.dns#BADTIME","BADTIME","DNS%.dns").
after_field("DNS%.dns#CD","CD","DNS%.dns").
after_field("DNS%.dns#CERT","CERT","DNS%.dns").
after_field("DNS%.dns#CHAOS","CHAOS","DNS%.dns").
after_field("DNS%.dns#CNAME","CNAME","DNS%.dns").
after_field("DNS%.dns#EID","EID","DNS%.dns").
after_field("DNS%.dns#FORMERR","FORMERR","DNS%.dns").
after_field("DNS%.dns#GPOS","GPOS","DNS%.dns").
after_field("DNS%.dns#HESIOD","HESIOD","DNS%.dns").
after_field("DNS%.dns#HINFO","HINFO","DNS%.dns").
after_field("DNS%.dns#HMAC","HMAC","DNS%.dns").
after_field("DNS%.dns#IN","IN","DNS%.dns").
after_field("DNS%.dns#ISDN","ISDN","DNS%.dns").
after_field("DNS%.dns#IXFR","IXFR","DNS%.dns").
after_field("DNS%.dns#KEY","KEY","DNS%.dns").
after_field("DNS%.dns#LOC","LOC","DNS%.dns").
after_field("DNS%.dns#MAILA","MAILA","DNS%.dns").
after_field("DNS%.dns#MAILB","MAILB","DNS%.dns").
after_field("DNS%.dns#MB","MB","DNS%.dns").
after_field("DNS%.dns#MD","MD","DNS%.dns").
after_field("DNS%.dns#MF","MF","DNS%.dns").
after_field("DNS%.dns#MG","MG","DNS%.dns").
after_field("DNS%.dns#MINFO","MINFO","DNS%.dns").
after_field("DNS%.dns#MR","MR","DNS%.dns").
after_field("DNS%.dns#MX","MX","DNS%.dns").
after_field("DNS%.dns#NAPTR","NAPTR","DNS%.dns").
after_field("DNS%.dns#NIMLOC","NIMLOC","DNS%.dns").
after_field("DNS%.dns#NOERROR","NOERROR","DNS%.dns").
after_field("DNS%.dns#NONE","NONE","DNS%.dns").
after_field("DNS%.dns#NOTAUTH","NOTAUTH","DNS%.dns").
after_field("DNS%.dns#NOTIFY","NOTIFY","DNS%.dns").
after_field("DNS%.dns#NOTIMPL","NOTIMPL","DNS%.dns").
after_field("DNS%.dns#NOTZONE","NOTZONE","DNS%.dns").
after_field("DNS%.dns#NS","NS","DNS%.dns").
after_field("DNS%.dns#NSAP","NSAP","DNS%.dns").
after_field("DNS%.dns#NSAP_PTR","NSAP_PTR","DNS%.dns").
after_field("DNS%.dns#NULL","NULL","DNS%.dns").
after_field("DNS%.dns#NXDOMAIN","NXDOMAIN","DNS%.dns").
after_field("DNS%.dns#NXRRSET","NXRRSET","DNS%.dns").
after_field("DNS%.dns#NXT","NXT","DNS%.dns").
after_field("DNS%.dns#OPT","OPT","DNS%.dns").
after_field("DNS%.dns#PORT","PORT","DNS%.dns").
after_field("DNS%.dns#PTR","PTR","DNS%.dns").
after_field("DNS%.dns#PX","PX","DNS%.dns").
after_field("DNS%.dns#QR","QR","DNS%.dns").
after_field("DNS%.dns#QUERY","QUERY","DNS%.dns").
after_field("DNS%.dns#QUESTION","QUESTION","DNS%.dns").
after_field("DNS%.dns#RA","RA","DNS%.dns").
after_field("DNS%.dns#RD","RD","DNS%.dns").
after_field("DNS%.dns#REFUSED","REFUSED","DNS%.dns").
after_field("DNS%.dns#RP","RP","DNS%.dns").
after_field("DNS%.dns#RT","RT","DNS%.dns").
after_field("DNS%.dns#SERVFAIL","SERVFAIL","DNS%.dns").
after_field("DNS%.dns#SIG","SIG","DNS%.dns").
after_field("DNS%.dns#SOA","SOA","DNS%.dns").
after_field("DNS%.dns#SRV","SRV","DNS%.dns").
after_field("DNS%.dns#TC","TC","DNS%.dns").
after_field("DNS%.dns#TSIG","TSIG","DNS%.dns").
after_field("DNS%.dns#TXT","TXT","DNS%.dns").
after_field("DNS%.dns#UPDATE","UPDATE","DNS%.dns").
after_field("DNS%.dns#WKS","WKS","DNS%.dns").
after_field("DNS%.dns#X25","X25","DNS%.dns").
after_field("DNS%.dns#YXDOMAIN","YXDOMAIN","DNS%.dns").
after_field("DNS%.dns#YXRRSET","YXRRSET","DNS%.dns").
after_field("DNS%.dns#_res","_res","DNS%.dns").
after_field("DNS%.dns#classes","classes","DNS%.dns").
after_field("DNS%.dns#flags","flags","DNS%.dns").
after_field("DNS%.dns#longSections","longSections","DNS%.dns").
after_field("DNS%.dns#opcodes","opcodes","DNS%.dns").
after_field("DNS%.dns#rcodes","rcodes","DNS%.dns").
after_field("DNS%.dns#sections","sections","DNS%.dns").
after_field("DNS%.dns#types","types","DNS%.dns").
after_field("DNS.utils%.CountedDataInputStream#counter","counter","DNS.utils%.CountedDataInputStream").
after_field("DNS.utils%.CountedDataInputStream#in","in","DNS.utils%.CountedDataInputStream").
after_field("DNS.utils%.CountedDataOutputStream#counter","counter","DNS.utils%.CountedDataOutputStream").
after_field("DNS.utils%.CountedDataOutputStream#out","out","DNS.utils%.CountedDataOutputStream").
after_field("DNS.utils%.base16#Base16","Base16","DNS.utils%.base16").
after_field("DNS.utils%.base64#Base64","Base64","DNS.utils%.base64").
after_field("DNS.utils%.hmacSigner#IPAD","IPAD","DNS.utils%.hmacSigner").
after_field("DNS.utils%.hmacSigner#OPAD","OPAD","DNS.utils%.hmacSigner").
after_field("DNS.utils%.hmacSigner#PADLEN","PADLEN","DNS.utils%.hmacSigner").
after_field("DNS.utils%.hmacSigner#bytes","bytes","DNS.utils%.hmacSigner").
after_field("DNS.utils%.hmacSigner#ipad","ipad","DNS.utils%.hmacSigner").
after_field("DNS.utils%.hmacSigner#opad","opad","DNS.utils%.hmacSigner").
after_field("DNS.utils%.md5#S11","S11","DNS.utils%.md5").
after_field("DNS.utils%.md5#S12","S12","DNS.utils%.md5").
after_field("DNS.utils%.md5#S13","S13","DNS.utils%.md5").
after_field("DNS.utils%.md5#S14","S14","DNS.utils%.md5").
after_field("DNS.utils%.md5#S21","S21","DNS.utils%.md5").
after_field("DNS.utils%.md5#S22","S22","DNS.utils%.md5").
after_field("DNS.utils%.md5#S23","S23","DNS.utils%.md5").
after_field("DNS.utils%.md5#S24","S24","DNS.utils%.md5").
after_field("DNS.utils%.md5#S31","S31","DNS.utils%.md5").
after_field("DNS.utils%.md5#S32","S32","DNS.utils%.md5").
after_field("DNS.utils%.md5#S33","S33","DNS.utils%.md5").
after_field("DNS.utils%.md5#S34","S34","DNS.utils%.md5").
after_field("DNS.utils%.md5#S41","S41","DNS.utils%.md5").
after_field("DNS.utils%.md5#S42","S42","DNS.utils%.md5").
after_field("DNS.utils%.md5#S43","S43","DNS.utils%.md5").
after_field("DNS.utils%.md5#S44","S44","DNS.utils%.md5").
after_fieldoftype("%.dig#_class","short").
after_fieldoftype("%.dig#name","DNS%.Name").
after_fieldoftype("%.dig#type","short").
after_fieldoftype("%.dnsServer#zcount","int").
after_fieldoftype("%.dnsServer#znames","java.util%.Hashtable").
after_fieldoftype("%.dnsServer#zones","DNS%.Zone[]").
after_fieldoftype("%.update#ADDITIONAL","int").
after_fieldoftype("%.update#PREREQ","int").
after_fieldoftype("%.update#UPDATE","int").
after_fieldoftype("%.update#ZONE","int").
after_fieldoftype("%.update#defaultClass","short").
after_fieldoftype("%.update#defaultTTL","int").
after_fieldoftype("%.update#origin","DNS%.Name").
after_fieldoftype("%.update#query","DNS%.Message").
after_fieldoftype("%.update#res","DNS%.Resolver").
after_fieldoftype("%.update#response","DNS%.Message").
after_fieldoftype("%.update#server","java.lang%.String").
after_fieldoftype("DNS%.ARecord#address","java.net%.InetAddress").
after_fieldoftype("DNS%.CERTRecord#NOAUTH","int").
after_fieldoftype("DNS%.CERTRecord#NOCONF","int").
after_fieldoftype("DNS%.CERTRecord#alg","byte").
after_fieldoftype("DNS%.CERTRecord#cert","byte[]").
after_fieldoftype("DNS%.CERTRecord#certType","short").
after_fieldoftype("DNS%.CERTRecord#keyTag","short").
after_fieldoftype("DNS%.Compression#h","java.util%.Hashtable").
after_fieldoftype("DNS%.FindResolver#server","java.lang%.String").
after_fieldoftype("DNS%.HINFORecord#cpu","java.lang%.String").
after_fieldoftype("DNS%.HINFORecord#os","java.lang%.String").
after_fieldoftype("DNS%.Header#counts","short[]").
after_fieldoftype("DNS%.Header#flags","boolean[]").
after_fieldoftype("DNS%.Header#id","int").
after_fieldoftype("DNS%.Header#opcode","byte").
after_fieldoftype("DNS%.Header#rcode","byte").
after_fieldoftype("DNS%.KEYRecord#NOAUTH","int").
after_fieldoftype("DNS%.KEYRecord#NOCONF","int").
after_fieldoftype("DNS%.KEYRecord#alg","byte").
after_fieldoftype("DNS%.KEYRecord#flags","short").
after_fieldoftype("DNS%.KEYRecord#key","byte[]").
after_fieldoftype("DNS%.KEYRecord#proto","byte").
after_fieldoftype("DNS%.MXRecord#priority","short").
after_fieldoftype("DNS%.MXRecord#target","DNS%.Name").
after_fieldoftype("DNS%.Message#header","DNS%.Header").
after_fieldoftype("DNS%.Message#sections","java.util%.Vector[]").
after_fieldoftype("DNS%.Message#size","int").
after_fieldoftype("DNS%.MyStringTokenizer#current","int").
after_fieldoftype("DNS%.MyStringTokenizer#delim","java.lang%.String").
after_fieldoftype("DNS%.MyStringTokenizer#putBack","java.lang%.String").
after_fieldoftype("DNS%.MyStringTokenizer#returnTokens","boolean").
after_fieldoftype("DNS%.MyStringTokenizer#string","char[]").
after_fieldoftype("DNS%.NS_CNAME_PTRRecord#target","DNS%.Name").
after_fieldoftype("DNS%.NXTRecord#bitmap","java.util%.BitSet").
after_fieldoftype("DNS%.NXTRecord#next","DNS%.Name").
after_fieldoftype("DNS%.Name#MAXLABELS","int").
after_fieldoftype("DNS%.Name#labels","byte").
after_fieldoftype("DNS%.Name#name","java.lang%.String[]").
after_fieldoftype("DNS%.Name#root","DNS%.Name").
after_fieldoftype("DNS%.RRset#name","DNS%.Name").
after_fieldoftype("DNS%.RRset#rrs","java.util%.Vector").
after_fieldoftype("DNS%.RRset#type","short").
after_fieldoftype("DNS%.Record#dclass","short").
after_fieldoftype("DNS%.Record#name","DNS%.Name").
after_fieldoftype("DNS%.Record#oLength","int").
after_fieldoftype("DNS%.Record#ttl","int").
after_fieldoftype("DNS%.Record#type","short").
after_fieldoftype("DNS%.Resolver#addr","java.net%.InetAddress").
after_fieldoftype("DNS%.Resolver#defaultResolver","java.lang%.String").
after_fieldoftype("DNS%.Resolver#port","int").
after_fieldoftype("DNS%.Resolver#timeoutValue","int").
after_fieldoftype("DNS%.Resolver#tsig","DNS%.TSIG").
after_fieldoftype("DNS%.Resolver#useEDNS","boolean").
after_fieldoftype("DNS%.Resolver#useTCP","boolean").
after_fieldoftype("DNS%.SIGRecord#alg","byte").
after_fieldoftype("DNS%.SIGRecord#covered","short").
after_fieldoftype("DNS%.SIGRecord#expire","java.util%.Date").
after_fieldoftype("DNS%.SIGRecord#footprint","short").
after_fieldoftype("DNS%.SIGRecord#labels","byte").
after_fieldoftype("DNS%.SIGRecord#origttl","int").
after_fieldoftype("DNS%.SIGRecord#signature","byte[]").
after_fieldoftype("DNS%.SIGRecord#signer","DNS%.Name").
after_fieldoftype("DNS%.SIGRecord#timeSigned","java.util%.Date").
after_fieldoftype("DNS%.SOARecord#admin","DNS%.Name").
after_fieldoftype("DNS%.SOARecord#expire","int").
after_fieldoftype("DNS%.SOARecord#host","DNS%.Name").
after_fieldoftype("DNS%.SOARecord#minimum","int").
after_fieldoftype("DNS%.SOARecord#refresh","int").
after_fieldoftype("DNS%.SOARecord#retry","int").
after_fieldoftype("DNS%.SOARecord#serial","int").
after_fieldoftype("DNS%.SRVRecord#port","short").
after_fieldoftype("DNS%.SRVRecord#priority","short").
after_fieldoftype("DNS%.SRVRecord#target","DNS%.Name").
after_fieldoftype("DNS%.SRVRecord#weight","short").
after_fieldoftype("DNS%.TSIG#axfrSigner","DNS.utils%.hmacSigner").
after_fieldoftype("DNS%.TSIG#key","byte[]").
after_fieldoftype("DNS%.TSIG#name","DNS%.Name").
after_fieldoftype("DNS%.TSIGRecord#alg","DNS%.Name").
after_fieldoftype("DNS%.TSIGRecord#error","short").
after_fieldoftype("DNS%.TSIGRecord#fudge","short").
after_fieldoftype("DNS%.TSIGRecord#originalID","int").
after_fieldoftype("DNS%.TSIGRecord#other","byte[]").
after_fieldoftype("DNS%.TSIGRecord#signature","byte[]").
after_fieldoftype("DNS%.TSIGRecord#timeSigned","java.util%.Date").
after_fieldoftype("DNS%.TXTRecord#strings","java.util%.Vector").
after_fieldoftype("DNS%.UNKRecord#data","byte[]").
after_fieldoftype("DNS%.Zone#CACHE","int").
after_fieldoftype("DNS%.Zone#PRIMARY","int").
after_fieldoftype("DNS%.Zone#SECONDARY","int").
after_fieldoftype("DNS%.Zone#data","java.util%.Hashtable").
after_fieldoftype("DNS%.Zone#origin","DNS%.Name").
after_fieldoftype("DNS%.Zone#type","int").
after_fieldoftype("DNS%.dns#A","short").
after_fieldoftype("DNS%.dns#AA","byte").
after_fieldoftype("DNS%.dns#AAAA","short").
after_fieldoftype("DNS%.dns#AD","byte").
after_fieldoftype("DNS%.dns#ADDITIONAL","byte").
after_fieldoftype("DNS%.dns#AFSDB","short").
after_fieldoftype("DNS%.dns#ANSWER","byte").
after_fieldoftype("DNS%.dns#ANY","short").
after_fieldoftype("DNS%.dns#ATMA","short").
after_fieldoftype("DNS%.dns#AUTHORITY","byte").
after_fieldoftype("DNS%.dns#AXFR","short").
after_fieldoftype("DNS%.dns#BADID","byte").
after_fieldoftype("DNS%.dns#BADKEY","byte").
after_fieldoftype("DNS%.dns#BADSIG","byte").
after_fieldoftype("DNS%.dns#BADTIME","byte").
after_fieldoftype("DNS%.dns#CD","byte").
after_fieldoftype("DNS%.dns#CERT","short").
after_fieldoftype("DNS%.dns#CHAOS","short").
after_fieldoftype("DNS%.dns#CNAME","short").
after_fieldoftype("DNS%.dns#EID","short").
after_fieldoftype("DNS%.dns#FORMERR","byte").
after_fieldoftype("DNS%.dns#GPOS","short").
after_fieldoftype("DNS%.dns#HESIOD","short").
after_fieldoftype("DNS%.dns#HINFO","short").
after_fieldoftype("DNS%.dns#HMAC","java.lang%.String").
after_fieldoftype("DNS%.dns#IN","short").
after_fieldoftype("DNS%.dns#ISDN","short").
after_fieldoftype("DNS%.dns#IXFR","short").
after_fieldoftype("DNS%.dns#KEY","short").
after_fieldoftype("DNS%.dns#LOC","short").
after_fieldoftype("DNS%.dns#MAILA","short").
after_fieldoftype("DNS%.dns#MAILB","short").
after_fieldoftype("DNS%.dns#MB","short").
after_fieldoftype("DNS%.dns#MD","short").
after_fieldoftype("DNS%.dns#MF","short").
after_fieldoftype("DNS%.dns#MG","short").
after_fieldoftype("DNS%.dns#MINFO","short").
after_fieldoftype("DNS%.dns#MR","short").
after_fieldoftype("DNS%.dns#MX","short").
after_fieldoftype("DNS%.dns#NAPTR","short").
after_fieldoftype("DNS%.dns#NIMLOC","short").
after_fieldoftype("DNS%.dns#NOERROR","byte").
after_fieldoftype("DNS%.dns#NONE","short").
after_fieldoftype("DNS%.dns#NOTAUTH","byte").
after_fieldoftype("DNS%.dns#NOTIFY","byte").
after_fieldoftype("DNS%.dns#NOTIMPL","byte").
after_fieldoftype("DNS%.dns#NOTZONE","byte").
after_fieldoftype("DNS%.dns#NS","short").
after_fieldoftype("DNS%.dns#NSAP","short").
after_fieldoftype("DNS%.dns#NSAP_PTR","short").
after_fieldoftype("DNS%.dns#NULL","short").
after_fieldoftype("DNS%.dns#NXDOMAIN","byte").
after_fieldoftype("DNS%.dns#NXRRSET","byte").
after_fieldoftype("DNS%.dns#NXT","short").
after_fieldoftype("DNS%.dns#OPT","short").
after_fieldoftype("DNS%.dns#PORT","int").
after_fieldoftype("DNS%.dns#PTR","short").
after_fieldoftype("DNS%.dns#PX","short").
after_fieldoftype("DNS%.dns#QR","byte").
after_fieldoftype("DNS%.dns#QUERY","byte").
after_fieldoftype("DNS%.dns#QUESTION","byte").
after_fieldoftype("DNS%.dns#RA","byte").
after_fieldoftype("DNS%.dns#RD","byte").
after_fieldoftype("DNS%.dns#REFUSED","byte").
after_fieldoftype("DNS%.dns#RP","short").
after_fieldoftype("DNS%.dns#RT","short").
after_fieldoftype("DNS%.dns#SERVFAIL","byte").
after_fieldoftype("DNS%.dns#SIG","short").
after_fieldoftype("DNS%.dns#SOA","short").
after_fieldoftype("DNS%.dns#SRV","short").
after_fieldoftype("DNS%.dns#TC","byte").
after_fieldoftype("DNS%.dns#TSIG","short").
after_fieldoftype("DNS%.dns#TXT","short").
after_fieldoftype("DNS%.dns#UPDATE","byte").
after_fieldoftype("DNS%.dns#WKS","short").
after_fieldoftype("DNS%.dns#X25","short").
after_fieldoftype("DNS%.dns#YXDOMAIN","byte").
after_fieldoftype("DNS%.dns#YXRRSET","byte").
after_fieldoftype("DNS%.dns#_res","DNS%.Resolver").
after_fieldoftype("DNS%.dns#classes","java.util%.Hashtable").
after_fieldoftype("DNS%.dns#flags","java.util%.Hashtable").
after_fieldoftype("DNS%.dns#longSections","java.util%.Hashtable").
after_fieldoftype("DNS%.dns#opcodes","java.util%.Hashtable").
after_fieldoftype("DNS%.dns#rcodes","java.util%.Hashtable").
after_fieldoftype("DNS%.dns#sections","java.util%.Hashtable").
after_fieldoftype("DNS%.dns#types","java.util%.Hashtable").
after_fieldoftype("DNS.utils%.CountedDataInputStream#counter","int").
after_fieldoftype("DNS.utils%.CountedDataInputStream#in","java.io%.DataInputStream").
after_fieldoftype("DNS.utils%.CountedDataOutputStream#counter","int").
after_fieldoftype("DNS.utils%.CountedDataOutputStream#out","java.io%.DataOutputStream").
after_fieldoftype("DNS.utils%.base16#Base16","java.lang%.String").
after_fieldoftype("DNS.utils%.base64#Base64","java.lang%.String").
after_fieldoftype("DNS.utils%.hmacSigner#IPAD","byte").
after_fieldoftype("DNS.utils%.hmacSigner#OPAD","byte").
after_fieldoftype("DNS.utils%.hmacSigner#PADLEN","byte").
after_fieldoftype("DNS.utils%.hmacSigner#bytes","java.io%.ByteArrayOutputStream").
after_fieldoftype("DNS.utils%.hmacSigner#ipad","byte[]").
after_fieldoftype("DNS.utils%.hmacSigner#opad","byte[]").
after_fieldoftype("DNS.utils%.md5#S11","int").
after_fieldoftype("DNS.utils%.md5#S12","int").
after_fieldoftype("DNS.utils%.md5#S13","int").
after_fieldoftype("DNS.utils%.md5#S14","int").
after_fieldoftype("DNS.utils%.md5#S21","int").
after_fieldoftype("DNS.utils%.md5#S22","int").
after_fieldoftype("DNS.utils%.md5#S23","int").
after_fieldoftype("DNS.utils%.md5#S24","int").
after_fieldoftype("DNS.utils%.md5#S31","int").
after_fieldoftype("DNS.utils%.md5#S32","int").
after_fieldoftype("DNS.utils%.md5#S33","int").
after_fieldoftype("DNS.utils%.md5#S34","int").
after_fieldoftype("DNS.utils%.md5#S41","int").
after_fieldoftype("DNS.utils%.md5#S42","int").
after_fieldoftype("DNS.utils%.md5#S43","int").
after_fieldoftype("DNS.utils%.md5#S44","int").
after_inheritedfield("dclass","DNS%.Record","DNS%.ARecord").
after_inheritedfield("dclass","DNS%.Record","DNS%.CERTRecord").
after_inheritedfield("dclass","DNS%.Record","DNS%.CNAMERecord").
after_inheritedfield("dclass","DNS%.Record","DNS%.HINFORecord").
after_inheritedfield("dclass","DNS%.Record","DNS%.KEYRecord").
after_inheritedfield("dclass","DNS%.Record","DNS%.MXRecord").
after_inheritedfield("dclass","DNS%.Record","DNS%.NSRecord").
after_inheritedfield("dclass","DNS%.Record","DNS%.NS_CNAME_PTRRecord").
after_inheritedfield("dclass","DNS%.Record","DNS%.NXTRecord").
after_inheritedfield("dclass","DNS%.Record","DNS%.OPTRecord").
after_inheritedfield("dclass","DNS%.Record","DNS%.PTRRecord").
after_inheritedfield("dclass","DNS%.Record","DNS%.SIGRecord").
after_inheritedfield("dclass","DNS%.Record","DNS%.SOARecord").
after_inheritedfield("dclass","DNS%.Record","DNS%.SRVRecord").
after_inheritedfield("dclass","DNS%.Record","DNS%.TSIGRecord").
after_inheritedfield("dclass","DNS%.Record","DNS%.TXTRecord").
after_inheritedfield("dclass","DNS%.Record","DNS%.UNKRecord").
after_inheritedfield("name","DNS%.Record","DNS%.ARecord").
after_inheritedfield("name","DNS%.Record","DNS%.CERTRecord").
after_inheritedfield("name","DNS%.Record","DNS%.CNAMERecord").
after_inheritedfield("name","DNS%.Record","DNS%.HINFORecord").
after_inheritedfield("name","DNS%.Record","DNS%.KEYRecord").
after_inheritedfield("name","DNS%.Record","DNS%.MXRecord").
after_inheritedfield("name","DNS%.Record","DNS%.NSRecord").
after_inheritedfield("name","DNS%.Record","DNS%.NS_CNAME_PTRRecord").
after_inheritedfield("name","DNS%.Record","DNS%.NXTRecord").
after_inheritedfield("name","DNS%.Record","DNS%.OPTRecord").
after_inheritedfield("name","DNS%.Record","DNS%.PTRRecord").
after_inheritedfield("name","DNS%.Record","DNS%.SIGRecord").
after_inheritedfield("name","DNS%.Record","DNS%.SOARecord").
after_inheritedfield("name","DNS%.Record","DNS%.SRVRecord").
after_inheritedfield("name","DNS%.Record","DNS%.TSIGRecord").
after_inheritedfield("name","DNS%.Record","DNS%.TXTRecord").
after_inheritedfield("name","DNS%.Record","DNS%.UNKRecord").
after_inheritedfield("oLength","DNS%.Record","DNS%.ARecord").
after_inheritedfield("oLength","DNS%.Record","DNS%.CERTRecord").
after_inheritedfield("oLength","DNS%.Record","DNS%.CNAMERecord").
after_inheritedfield("oLength","DNS%.Record","DNS%.HINFORecord").
after_inheritedfield("oLength","DNS%.Record","DNS%.KEYRecord").
after_inheritedfield("oLength","DNS%.Record","DNS%.MXRecord").
after_inheritedfield("oLength","DNS%.Record","DNS%.NSRecord").
after_inheritedfield("oLength","DNS%.Record","DNS%.NS_CNAME_PTRRecord").
after_inheritedfield("oLength","DNS%.Record","DNS%.NXTRecord").
after_inheritedfield("oLength","DNS%.Record","DNS%.OPTRecord").
after_inheritedfield("oLength","DNS%.Record","DNS%.PTRRecord").
after_inheritedfield("oLength","DNS%.Record","DNS%.SIGRecord").
after_inheritedfield("oLength","DNS%.Record","DNS%.SOARecord").
after_inheritedfield("oLength","DNS%.Record","DNS%.SRVRecord").
after_inheritedfield("oLength","DNS%.Record","DNS%.TSIGRecord").
after_inheritedfield("oLength","DNS%.Record","DNS%.TXTRecord").
after_inheritedfield("oLength","DNS%.Record","DNS%.UNKRecord").
after_inheritedfield("target","DNS%.NS_CNAME_PTRRecord","DNS%.CNAMERecord").
after_inheritedfield("target","DNS%.NS_CNAME_PTRRecord","DNS%.NSRecord").
after_inheritedfield("target","DNS%.NS_CNAME_PTRRecord","DNS%.PTRRecord").
after_inheritedfield("ttl","DNS%.Record","DNS%.ARecord").
after_inheritedfield("ttl","DNS%.Record","DNS%.CERTRecord").
after_inheritedfield("ttl","DNS%.Record","DNS%.CNAMERecord").
after_inheritedfield("ttl","DNS%.Record","DNS%.HINFORecord").
after_inheritedfield("ttl","DNS%.Record","DNS%.KEYRecord").
after_inheritedfield("ttl","DNS%.Record","DNS%.MXRecord").
after_inheritedfield("ttl","DNS%.Record","DNS%.NSRecord").
after_inheritedfield("ttl","DNS%.Record","DNS%.NS_CNAME_PTRRecord").
after_inheritedfield("ttl","DNS%.Record","DNS%.NXTRecord").
after_inheritedfield("ttl","DNS%.Record","DNS%.OPTRecord").
after_inheritedfield("ttl","DNS%.Record","DNS%.PTRRecord").
after_inheritedfield("ttl","DNS%.Record","DNS%.SIGRecord").
after_inheritedfield("ttl","DNS%.Record","DNS%.SOARecord").
after_inheritedfield("ttl","DNS%.Record","DNS%.SRVRecord").
after_inheritedfield("ttl","DNS%.Record","DNS%.TSIGRecord").
after_inheritedfield("ttl","DNS%.Record","DNS%.TXTRecord").
after_inheritedfield("ttl","DNS%.Record","DNS%.UNKRecord").
after_inheritedfield("type","DNS%.Record","DNS%.ARecord").
after_inheritedfield("type","DNS%.Record","DNS%.CERTRecord").
after_inheritedfield("type","DNS%.Record","DNS%.CNAMERecord").
after_inheritedfield("type","DNS%.Record","DNS%.HINFORecord").
after_inheritedfield("type","DNS%.Record","DNS%.KEYRecord").
after_inheritedfield("type","DNS%.Record","DNS%.MXRecord").
after_inheritedfield("type","DNS%.Record","DNS%.NSRecord").
after_inheritedfield("type","DNS%.Record","DNS%.NS_CNAME_PTRRecord").
after_inheritedfield("type","DNS%.Record","DNS%.NXTRecord").
after_inheritedfield("type","DNS%.Record","DNS%.OPTRecord").
after_inheritedfield("type","DNS%.Record","DNS%.PTRRecord").
after_inheritedfield("type","DNS%.Record","DNS%.SIGRecord").
after_inheritedfield("type","DNS%.Record","DNS%.SOARecord").
after_inheritedfield("type","DNS%.Record","DNS%.SRVRecord").
after_inheritedfield("type","DNS%.Record","DNS%.TSIGRecord").
after_inheritedfield("type","DNS%.Record","DNS%.TXTRecord").
after_inheritedfield("type","DNS%.Record","DNS%.UNKRecord").
after_method("%.dig#<init>()","<init>()","%.dig").
after_method("%.dig#doAXFR(DNS%.Message,DNS%.Resolver)","doAXFR(DNS%.Message,DNS%.Resolver)","%.dig").
after_method("%.dig#doQuery(DNS%.Message,DNS%.Resolver)","doQuery(DNS%.Message,DNS%.Resolver)","%.dig").
after_method("%.dig#main(java.lang%.String[])","main(java.lang%.String[])","%.dig").
after_method("%.dig#usage()","usage()","%.dig").
after_method("%.dnsServer#1#<init>()","<init>()","%.dnsServer#1").
after_method("%.dnsServer#1#run()","run()","%.dnsServer#1").
after_method("%.dnsServer#2#<init>()","<init>()","%.dnsServer#2").
after_method("%.dnsServer#2#run()","run()","%.dnsServer#2").
after_method("%.dnsServer#<init>()","<init>()","%.dnsServer").
after_method("%.dnsServer#addTCP(short)","addTCP(short)","%.dnsServer").
after_method("%.dnsServer#addUDP(short)","addUDP(short)","%.dnsServer").
after_method("%.dnsServer#addZone(java.lang%.String,int)","addZone(java.lang%.String,int)","%.dnsServer").
after_method("%.dnsServer#findBestZone(DNS%.Name)","findBestZone(DNS%.Name)","%.dnsServer").
after_method("%.dnsServer#generateReply(DNS%.Message)","generateReply(DNS%.Message)","%.dnsServer").
after_method("%.dnsServer#main(java.lang%.String[])","main(java.lang%.String[])","%.dnsServer").
after_method("%.dnsServer#serveTCP(short)","serveTCP(short)","%.dnsServer").
after_method("%.dnsServer#serveUDP(short)","serveUDP(short)","%.dnsServer").
after_method("%.update#<init>(java.io%.InputStream)","<init>(java.io%.InputStream)","%.update").
after_method("%.update#doAdd(DNS%.MyStringTokenizer)","doAdd(DNS%.MyStringTokenizer)","%.update").
after_method("%.update#doAssert(DNS%.MyStringTokenizer)","doAssert(DNS%.MyStringTokenizer)","%.update").
after_method("%.update#doDelete(DNS%.MyStringTokenizer)","doDelete(DNS%.MyStringTokenizer)","%.update").
after_method("%.update#doFile(DNS%.MyStringTokenizer,java.util%.Vector)","doFile(DNS%.MyStringTokenizer,java.util%.Vector)","%.update").
after_method("%.update#doGlue(DNS%.MyStringTokenizer)","doGlue(DNS%.MyStringTokenizer)","%.update").
after_method("%.update#doProhibit(DNS%.MyStringTokenizer)","doProhibit(DNS%.MyStringTokenizer)","%.update").
after_method("%.update#doQuery(DNS%.MyStringTokenizer)","doQuery(DNS%.MyStringTokenizer)","%.update").
after_method("%.update#doRequire(DNS%.MyStringTokenizer)","doRequire(DNS%.MyStringTokenizer)","%.update").
after_method("%.update#help(java.lang%.String)","help(java.lang%.String)","%.update").
after_method("%.update#helpAttributes()","helpAttributes()","%.update").
after_method("%.update#helpData()","helpData()","%.update").
after_method("%.update#helpOperations()","helpOperations()","%.update").
after_method("%.update#helpResolver()","helpResolver()","%.update").
after_method("%.update#main(java.lang%.String[])","main(java.lang%.String[])","%.update").
after_method("%.update#parseName(DNS%.MyStringTokenizer,short)","parseName(DNS%.MyStringTokenizer,short)","%.update").
after_method("%.update#parseRR(DNS%.MyStringTokenizer,short,int)","parseRR(DNS%.MyStringTokenizer,short,int)","%.update").
after_method("%.update#parseSet(DNS%.MyStringTokenizer,short)","parseSet(DNS%.MyStringTokenizer,short)","%.update").
after_method("%.update#sendUpdate()","sendUpdate()","%.update").
after_method("DNS%.ARecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)","<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)","DNS%.ARecord").
after_method("DNS%.ARecord#<init>(DNS%.Name,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)","<init>(DNS%.Name,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)","DNS%.ARecord").
after_method("DNS%.ARecord#<init>(DNS%.Name,short,int,java.net%.InetAddress)","<init>(DNS%.Name,short,int,java.net%.InetAddress)","DNS%.ARecord").
after_method("DNS%.ARecord#getAddress()","getAddress()","DNS%.ARecord").
after_method("DNS%.ARecord#rrToWire(DNS%.Compression)","rrToWire(DNS%.Compression)","DNS%.ARecord").
after_method("DNS%.ARecord#toString()","toString()","DNS%.ARecord").
after_method("DNS%.CERTRecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)","<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)","DNS%.CERTRecord").
after_method("DNS%.CERTRecord#<init>(DNS%.Name,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)","<init>(DNS%.Name,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)","DNS%.CERTRecord").
after_method("DNS%.CERTRecord#<init>(DNS%.Name,short,int,int,int,int,byte[])","<init>(DNS%.Name,short,int,int,int,int,byte[])","DNS%.CERTRecord").
after_method("DNS%.CERTRecord#getAlgorithm()","getAlgorithm()","DNS%.CERTRecord").
after_method("DNS%.CERTRecord#getCertType()","getCertType()","DNS%.CERTRecord").
after_method("DNS%.CERTRecord#getKeyTag()","getKeyTag()","DNS%.CERTRecord").
after_method("DNS%.CERTRecord#rrToWire(DNS%.Compression)","rrToWire(DNS%.Compression)","DNS%.CERTRecord").
after_method("DNS%.CERTRecord#toString()","toString()","DNS%.CERTRecord").
after_method("DNS%.CNAMERecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)","<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)","DNS%.CNAMERecord").
after_method("DNS%.CNAMERecord#<init>(DNS%.Name,short,int,DNS%.Name)","<init>(DNS%.Name,short,int,DNS%.Name)","DNS%.CNAMERecord").
after_method("DNS%.CNAMERecord#<init>(DNS%.Name,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)","<init>(DNS%.Name,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)","DNS%.CNAMERecord").
after_method("DNS%.Compression#<init>()","<init>()","DNS%.Compression").
after_method("DNS%.Compression#add(int,DNS%.Name)","add(int,DNS%.Name)","DNS%.Compression").
after_method("DNS%.Compression#get(DNS%.Name)","get(DNS%.Name)","DNS%.Compression").
after_method("DNS%.Compression#get(int)","get(int)","DNS%.Compression").
after_method("DNS%.EDNS#<init>()","<init>()","DNS%.EDNS").
after_method("DNS%.EDNS#newOPT(int)","newOPT(int)","DNS%.EDNS").
after_method("DNS%.FindResolver#<init>()","<init>()","DNS%.FindResolver").
after_method("DNS%.FindResolver#find()","find()","DNS%.FindResolver").
after_method("DNS%.FindResolver#findProperty()","findProperty()","DNS%.FindResolver").
after_method("DNS%.FindResolver#findUnix()","findUnix()","DNS%.FindResolver").
after_method("DNS%.HINFORecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)","<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)","DNS%.HINFORecord").
after_method("DNS%.HINFORecord#<init>(DNS%.Name,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)","<init>(DNS%.Name,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)","DNS%.HINFORecord").
after_method("DNS%.HINFORecord#<init>(DNS%.Name,short,int,java.lang%.String,java.lang%.String)","<init>(DNS%.Name,short,int,java.lang%.String,java.lang%.String)","DNS%.HINFORecord").
after_method("DNS%.HINFORecord#getCPU()","getCPU()","DNS%.HINFORecord").
after_method("DNS%.HINFORecord#getOS()","getOS()","DNS%.HINFORecord").
after_method("DNS%.HINFORecord#rrToWire(DNS%.Compression)","rrToWire(DNS%.Compression)","DNS%.HINFORecord").
after_method("DNS%.HINFORecord#toString()","toString()","DNS%.HINFORecord").
after_method("DNS%.Header#<init>(DNS.utils%.CountedDataInputStream)","<init>(DNS.utils%.CountedDataInputStream)","DNS%.Header").
after_method("DNS%.Header#<init>(int)","<init>(int)","DNS%.Header").
after_method("DNS%.Header#decCount(int)","decCount(int)","DNS%.Header").
after_method("DNS%.Header#getCount(int)","getCount(int)","DNS%.Header").
after_method("DNS%.Header#getFlag(int)","getFlag(int)","DNS%.Header").
after_method("DNS%.Header#getID()","getID()","DNS%.Header").
after_method("DNS%.Header#getOpcode()","getOpcode()","DNS%.Header").
after_method("DNS%.Header#getRcode()","getRcode()","DNS%.Header").
after_method("DNS%.Header#incCount(int)","incCount(int)","DNS%.Header").
after_method("DNS%.Header#printFlags()","printFlags()","DNS%.Header").
after_method("DNS%.Header#randomID()","randomID()","DNS%.Header").
after_method("DNS%.Header#readFlags(DNS.utils%.CountedDataInputStream)","readFlags(DNS.utils%.CountedDataInputStream)","DNS%.Header").
after_method("DNS%.Header#setCount(int,short)","setCount(int,short)","DNS%.Header").
after_method("DNS%.Header#setFlag(int)","setFlag(int)","DNS%.Header").
after_method("DNS%.Header#setID(int)","setID(int)","DNS%.Header").
after_method("DNS%.Header#setOpcode(byte)","setOpcode(byte)","DNS%.Header").
after_method("DNS%.Header#setRcode(byte)","setRcode(byte)","DNS%.Header").
after_method("DNS%.Header#toString()","toString()","DNS%.Header").
after_method("DNS%.Header#toWire()","toWire()","DNS%.Header").
after_method("DNS%.Header#toWire(DNS.utils%.CountedDataOutputStream)","toWire(DNS.utils%.CountedDataOutputStream)","DNS%.Header").
after_method("DNS%.Header#unsetFlag(int)","unsetFlag(int)","DNS%.Header").
after_method("DNS%.Header#writeFlags(DNS.utils%.CountedDataOutputStream)","writeFlags(DNS.utils%.CountedDataOutputStream)","DNS%.Header").
after_method("DNS%.IO#<init>()","<init>()","DNS%.IO").
after_method("DNS%.IO#formatBase64String(java.lang%.String,int,java.lang%.String,boolean)","formatBase64String(java.lang%.String,int,java.lang%.String,boolean)","DNS%.IO").
after_method("DNS%.IO#readExtendedLine(java.io%.BufferedReader)","readExtendedLine(java.io%.BufferedReader)","DNS%.IO").
after_method("DNS%.IO#stripTrailing(java.lang%.String)","stripTrailing(java.lang%.String)","DNS%.IO").
after_method("DNS%.KEYRecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)","<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)","DNS%.KEYRecord").
after_method("DNS%.KEYRecord#<init>(DNS%.Name,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)","<init>(DNS%.Name,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)","DNS%.KEYRecord").
after_method("DNS%.KEYRecord#<init>(DNS%.Name,short,int,int,int,int,byte[])","<init>(DNS%.Name,short,int,int,int,int,byte[])","DNS%.KEYRecord").
after_method("DNS%.KEYRecord#getAlgorithm()","getAlgorithm()","DNS%.KEYRecord").
after_method("DNS%.KEYRecord#getFlags()","getFlags()","DNS%.KEYRecord").
after_method("DNS%.KEYRecord#getProtocol()","getProtocol()","DNS%.KEYRecord").
after_method("DNS%.KEYRecord#rrToWire(DNS%.Compression)","rrToWire(DNS%.Compression)","DNS%.KEYRecord").
after_method("DNS%.KEYRecord#toString()","toString()","DNS%.KEYRecord").
after_method("DNS%.MXRecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)","<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)","DNS%.MXRecord").
after_method("DNS%.MXRecord#<init>(DNS%.Name,short,int,int,DNS%.Name)","<init>(DNS%.Name,short,int,int,DNS%.Name)","DNS%.MXRecord").
after_method("DNS%.MXRecord#<init>(DNS%.Name,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)","<init>(DNS%.Name,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)","DNS%.MXRecord").
after_method("DNS%.MXRecord#getPriority()","getPriority()","DNS%.MXRecord").
after_method("DNS%.MXRecord#getTarget()","getTarget()","DNS%.MXRecord").
after_method("DNS%.MXRecord#rrToWire(DNS%.Compression)","rrToWire(DNS%.Compression)","DNS%.MXRecord").
after_method("DNS%.MXRecord#toString()","toString()","DNS%.MXRecord").
after_method("DNS%.Message#<init>()","<init>()","DNS%.Message").
after_method("DNS%.Message#<init>(DNS.utils%.CountedDataInputStream)","<init>(DNS.utils%.CountedDataInputStream)","DNS%.Message").
after_method("DNS%.Message#<init>(byte[])","<init>(byte[])","DNS%.Message").
after_method("DNS%.Message#<init>(int)","<init>(int)","DNS%.Message").
after_method("DNS%.Message#addRecord(int,DNS%.Record)","addRecord(int,DNS%.Record)","DNS%.Message").
after_method("DNS%.Message#getHeader()","getHeader()","DNS%.Message").
after_method("DNS%.Message#getSection(int)","getSection(int)","DNS%.Message").
after_method("DNS%.Message#getTSIG()","getTSIG()","DNS%.Message").
after_method("DNS%.Message#numBytes()","numBytes()","DNS%.Message").
after_method("DNS%.Message#removeRecord(int,DNS%.Record)","removeRecord(int,DNS%.Record)","DNS%.Message").
after_method("DNS%.Message#sectionToString(int)","sectionToString(int)","DNS%.Message").
after_method("DNS%.Message#setHeader(DNS%.Header)","setHeader(DNS%.Header)","DNS%.Message").
after_method("DNS%.Message#toString()","toString()","DNS%.Message").
after_method("DNS%.Message#toWire()","toWire()","DNS%.Message").
after_method("DNS%.Message#toWire(DNS.utils%.CountedDataOutputStream)","toWire(DNS.utils%.CountedDataOutputStream)","DNS%.Message").
after_method("DNS%.Message#toWireCanonical(DNS.utils%.CountedDataOutputStream)","toWireCanonical(DNS.utils%.CountedDataOutputStream)","DNS%.Message").
after_method("DNS%.MyStringTokenizer#<init>(java.lang%.String)","<init>(java.lang%.String)","DNS%.MyStringTokenizer").
after_method("DNS%.MyStringTokenizer#<init>(java.lang%.String,java.lang%.String)","<init>(java.lang%.String,java.lang%.String)","DNS%.MyStringTokenizer").
after_method("DNS%.MyStringTokenizer#<init>(java.lang%.String,java.lang%.String,boolean)","<init>(java.lang%.String,java.lang%.String,boolean)","DNS%.MyStringTokenizer").
after_method("DNS%.MyStringTokenizer#hasMoreDelimiters()","hasMoreDelimiters()","DNS%.MyStringTokenizer").
after_method("DNS%.MyStringTokenizer#hasMoreElements()","hasMoreElements()","DNS%.MyStringTokenizer").
after_method("DNS%.MyStringTokenizer#hasMoreTokens()","hasMoreTokens()","DNS%.MyStringTokenizer").
after_method("DNS%.MyStringTokenizer#isDelim(int)","isDelim(int)","DNS%.MyStringTokenizer").
after_method("DNS%.MyStringTokenizer#main(java.lang%.String[])","main(java.lang%.String[])","DNS%.MyStringTokenizer").
after_method("DNS%.MyStringTokenizer#nextElement()","nextElement()","DNS%.MyStringTokenizer").
after_method("DNS%.MyStringTokenizer#nextToken()","nextToken()","DNS%.MyStringTokenizer").
after_method("DNS%.MyStringTokenizer#putBackToken(java.lang%.String)","putBackToken(java.lang%.String)","DNS%.MyStringTokenizer").
after_method("DNS%.NSRecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)","<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)","DNS%.NSRecord").
after_method("DNS%.NSRecord#<init>(DNS%.Name,short,int,DNS%.Name)","<init>(DNS%.Name,short,int,DNS%.Name)","DNS%.NSRecord").
after_method("DNS%.NSRecord#<init>(DNS%.Name,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)","<init>(DNS%.Name,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)","DNS%.NSRecord").
after_method("DNS%.NS_CNAME_PTRRecord#<init>(DNS%.Name,short,short,int,DNS%.MyStringTokenizer,DNS%.Name)","<init>(DNS%.Name,short,short,int,DNS%.MyStringTokenizer,DNS%.Name)","DNS%.NS_CNAME_PTRRecord").
after_method("DNS%.NS_CNAME_PTRRecord#<init>(DNS%.Name,short,short,int,DNS%.Name)","<init>(DNS%.Name,short,short,int,DNS%.Name)","DNS%.NS_CNAME_PTRRecord").
after_method("DNS%.NS_CNAME_PTRRecord#<init>(DNS%.Name,short,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)","<init>(DNS%.Name,short,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)","DNS%.NS_CNAME_PTRRecord").
after_method("DNS%.NS_CNAME_PTRRecord#getTarget()","getTarget()","DNS%.NS_CNAME_PTRRecord").
after_method("DNS%.NS_CNAME_PTRRecord#rrToWire(DNS%.Compression)","rrToWire(DNS%.Compression)","DNS%.NS_CNAME_PTRRecord").
after_method("DNS%.NS_CNAME_PTRRecord#toString()","toString()","DNS%.NS_CNAME_PTRRecord").
after_method("DNS%.NXTRecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)","<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)","DNS%.NXTRecord").
after_method("DNS%.NXTRecord#<init>(DNS%.Name,short,int,DNS%.Name,java.util%.BitSet)","<init>(DNS%.Name,short,int,DNS%.Name,java.util%.BitSet)","DNS%.NXTRecord").
after_method("DNS%.NXTRecord#<init>(DNS%.Name,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)","<init>(DNS%.Name,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)","DNS%.NXTRecord").
after_method("DNS%.NXTRecord#getBitmap()","getBitmap()","DNS%.NXTRecord").
after_method("DNS%.NXTRecord#getNext()","getNext()","DNS%.NXTRecord").
after_method("DNS%.NXTRecord#rrToWire(DNS%.Compression)","rrToWire(DNS%.Compression)","DNS%.NXTRecord").
after_method("DNS%.NXTRecord#toString()","toString()","DNS%.NXTRecord").
after_method("DNS%.Name#<init>(DNS%.Name,int)","<init>(DNS%.Name,int)","DNS%.Name").
after_method("DNS%.Name#<init>(DNS.utils%.CountedDataInputStream,DNS%.Compression)","<init>(DNS.utils%.CountedDataInputStream,DNS%.Compression)","DNS%.Name").
after_method("DNS%.Name#<init>(java.lang%.String)","<init>(java.lang%.String)","DNS%.Name").
after_method("DNS%.Name#<init>(java.lang%.String,DNS%.Name)","<init>(java.lang%.String,DNS%.Name)","DNS%.Name").
after_method("DNS%.Name#append(DNS%.Name)","append(DNS%.Name)","DNS%.Name").
after_method("DNS%.Name#equals(java.lang%.Object)","equals(java.lang%.Object)","DNS%.Name").
after_method("DNS%.Name#hashCode()","hashCode()","DNS%.Name").
after_method("DNS%.Name#labels()","labels()","DNS%.Name").
after_method("DNS%.Name#length()","length()","DNS%.Name").
after_method("DNS%.Name#toString()","toString()","DNS%.Name").
after_method("DNS%.Name#toWire(DNS.utils%.CountedDataOutputStream,DNS%.Compression)","toWire(DNS.utils%.CountedDataOutputStream,DNS%.Compression)","DNS%.Name").
after_method("DNS%.Name#toWireCanonical(DNS.utils%.CountedDataOutputStream)","toWireCanonical(DNS.utils%.CountedDataOutputStream)","DNS%.Name").
after_method("DNS%.OPTRecord#<init>(DNS%.Name,short,int)","<init>(DNS%.Name,short,int)","DNS%.OPTRecord").
after_method("DNS%.OPTRecord#<init>(DNS%.Name,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)","<init>(DNS%.Name,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)","DNS%.OPTRecord").
after_method("DNS%.OPTRecord#getExtendedRcode()","getExtendedRcode()","DNS%.OPTRecord").
after_method("DNS%.OPTRecord#getPayloadSize()","getPayloadSize()","DNS%.OPTRecord").
after_method("DNS%.OPTRecord#getVersion()","getVersion()","DNS%.OPTRecord").
after_method("DNS%.OPTRecord#rrToWire(DNS%.Compression)","rrToWire(DNS%.Compression)","DNS%.OPTRecord").
after_method("DNS%.OPTRecord#toString()","toString()","DNS%.OPTRecord").
after_method("DNS%.PTRRecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)","<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)","DNS%.PTRRecord").
after_method("DNS%.PTRRecord#<init>(DNS%.Name,short,int,DNS%.Name)","<init>(DNS%.Name,short,int,DNS%.Name)","DNS%.PTRRecord").
after_method("DNS%.PTRRecord#<init>(DNS%.Name,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)","<init>(DNS%.Name,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)","DNS%.PTRRecord").
after_method("DNS%.RRset#<init>(DNS%.Name,short)","<init>(DNS%.Name,short)","DNS%.RRset").
after_method("DNS%.RRset#addRR(DNS%.Record)","addRR(DNS%.Record)","DNS%.RRset").
after_method("DNS%.RRset#rrs()","rrs()","DNS%.RRset").
after_method("DNS%.Record#<init>(DNS%.Name,short,short,int)","<init>(DNS%.Name,short,short,int)","DNS%.Record").
after_method("DNS%.Record#fromString(DNS%.Name,short,short,int,DNS%.MyStringTokenizer,DNS%.Name)","fromString(DNS%.Name,short,short,int,DNS%.MyStringTokenizer,DNS%.Name)","DNS%.Record").
after_method("DNS%.Record#fromWire(DNS.utils%.CountedDataInputStream,int,DNS%.Compression)","fromWire(DNS.utils%.CountedDataInputStream,int,DNS%.Compression)","DNS%.Record").
after_method("DNS%.Record#getDClass()","getDClass()","DNS%.Record").
after_method("DNS%.Record#getName()","getName()","DNS%.Record").
after_method("DNS%.Record#getType()","getType()","DNS%.Record").
after_method("DNS%.Record#newRecord(DNS%.Name,short,short)","newRecord(DNS%.Name,short,short)","DNS%.Record").
after_method("DNS%.Record#newRecord(DNS%.Name,short,short,int)","newRecord(DNS%.Name,short,short,int)","DNS%.Record").
after_method("DNS%.Record#newRecord(DNS%.Name,short,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)","newRecord(DNS%.Name,short,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)","DNS%.Record").
after_method("DNS%.Record#newRecord(DNS%.Name,short,short,int,int,byte[])","newRecord(DNS%.Name,short,short,int,int,byte[])","DNS%.Record").
after_method("DNS%.Record#rrToWire(DNS%.Compression)","rrToWire(DNS%.Compression)","DNS%.Record").
after_method("DNS%.Record#rrToWireCanonical()","rrToWireCanonical()","DNS%.Record").
after_method("DNS%.Record#toString()","toString()","DNS%.Record").
after_method("DNS%.Record#toStringNoData()","toStringNoData()","DNS%.Record").
after_method("DNS%.Record#toWire(DNS.utils%.CountedDataOutputStream,int,DNS%.Compression)","toWire(DNS.utils%.CountedDataOutputStream,int,DNS%.Compression)","DNS%.Record").
after_method("DNS%.Record#toWire(int)","toWire(int)","DNS%.Record").
after_method("DNS%.Record#toWireCanonical(DNS.utils%.CountedDataOutputStream,int)","toWireCanonical(DNS.utils%.CountedDataOutputStream,int)","DNS%.Record").
after_method("DNS%.Resolver#<init>()","<init>()","DNS%.Resolver").
after_method("DNS%.Resolver#<init>(java.lang%.String)","<init>(java.lang%.String)","DNS%.Resolver").
after_method("DNS%.Resolver#send(DNS%.Message)","send(DNS%.Message)","DNS%.Resolver").
after_method("DNS%.Resolver#sendAXFR(DNS%.Message)","sendAXFR(DNS%.Message)","DNS%.Resolver").
after_method("DNS%.Resolver#sendTCP(DNS%.Message,byte[])","sendTCP(DNS%.Message,byte[])","DNS%.Resolver").
after_method("DNS%.Resolver#setDefaultResolver(java.lang%.String)","setDefaultResolver(java.lang%.String)","DNS%.Resolver").
after_method("DNS%.Resolver#setEDNS(boolean)","setEDNS(boolean)","DNS%.Resolver").
after_method("DNS%.Resolver#setPort(int)","setPort(int)","DNS%.Resolver").
after_method("DNS%.Resolver#setTCP(boolean)","setTCP(boolean)","DNS%.Resolver").
after_method("DNS%.Resolver#setTSIGKey(java.lang%.String)","setTSIGKey(java.lang%.String)","DNS%.Resolver").
after_method("DNS%.Resolver#setTSIGKey(java.lang%.String,java.lang%.String)","setTSIGKey(java.lang%.String,java.lang%.String)","DNS%.Resolver").
after_method("DNS%.SIGRecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)","<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)","DNS%.SIGRecord").
after_method("DNS%.SIGRecord#<init>(DNS%.Name,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)","<init>(DNS%.Name,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)","DNS%.SIGRecord").
after_method("DNS%.SIGRecord#<init>(DNS%.Name,short,int,int,int,int,java.util%.Date,java.util%.Date,int,DNS%.Name,byte[])","<init>(DNS%.Name,short,int,int,int,int,java.util%.Date,java.util%.Date,int,DNS%.Name,byte[])","DNS%.SIGRecord").
after_method("DNS%.SIGRecord#formatDate(java.util%.Date)","formatDate(java.util%.Date)","DNS%.SIGRecord").
after_method("DNS%.SIGRecord#parseDate(java.lang%.String)","parseDate(java.lang%.String)","DNS%.SIGRecord").
after_method("DNS%.SIGRecord#rrToWire(DNS%.Compression)","rrToWire(DNS%.Compression)","DNS%.SIGRecord").
after_method("DNS%.SIGRecord#toString()","toString()","DNS%.SIGRecord").
after_method("DNS%.SOARecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)","<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)","DNS%.SOARecord").
after_method("DNS%.SOARecord#<init>(DNS%.Name,short,int,DNS%.Name,DNS%.Name,int,int,int,int,int)","<init>(DNS%.Name,short,int,DNS%.Name,DNS%.Name,int,int,int,int,int)","DNS%.SOARecord").
after_method("DNS%.SOARecord#<init>(DNS%.Name,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)","<init>(DNS%.Name,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)","DNS%.SOARecord").
after_method("DNS%.SOARecord#getAdmin()","getAdmin()","DNS%.SOARecord").
after_method("DNS%.SOARecord#getExpire()","getExpire()","DNS%.SOARecord").
after_method("DNS%.SOARecord#getHost()","getHost()","DNS%.SOARecord").
after_method("DNS%.SOARecord#getMinimum()","getMinimum()","DNS%.SOARecord").
after_method("DNS%.SOARecord#getRefresh()","getRefresh()","DNS%.SOARecord").
after_method("DNS%.SOARecord#getRetry()","getRetry()","DNS%.SOARecord").
after_method("DNS%.SOARecord#getSerial()","getSerial()","DNS%.SOARecord").
after_method("DNS%.SOARecord#rrToWire(DNS%.Compression)","rrToWire(DNS%.Compression)","DNS%.SOARecord").
after_method("DNS%.SOARecord#toString()","toString()","DNS%.SOARecord").
after_method("DNS%.SRVRecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)","<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)","DNS%.SRVRecord").
after_method("DNS%.SRVRecord#<init>(DNS%.Name,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)","<init>(DNS%.Name,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)","DNS%.SRVRecord").
after_method("DNS%.SRVRecord#<init>(DNS%.Name,short,int,int,int,int,DNS%.Name)","<init>(DNS%.Name,short,int,int,int,int,DNS%.Name)","DNS%.SRVRecord").
after_method("DNS%.SRVRecord#getPort()","getPort()","DNS%.SRVRecord").
after_method("DNS%.SRVRecord#getPriority()","getPriority()","DNS%.SRVRecord").
after_method("DNS%.SRVRecord#getTarget()","getTarget()","DNS%.SRVRecord").
after_method("DNS%.SRVRecord#getWeight()","getWeight()","DNS%.SRVRecord").
after_method("DNS%.SRVRecord#rrToWire(DNS%.Compression)","rrToWire(DNS%.Compression)","DNS%.SRVRecord").
after_method("DNS%.SRVRecord#toString()","toString()","DNS%.SRVRecord").
after_method("DNS%.TSIG#<init>(java.lang%.String,byte[])","<init>(java.lang%.String,byte[])","DNS%.TSIG").
after_method("DNS%.TSIG#apply(DNS%.Message)","apply(DNS%.Message)","DNS%.TSIG").
after_method("DNS%.TSIG#verify(DNS%.Message,byte[],DNS%.TSIGRecord)","verify(DNS%.Message,byte[],DNS%.TSIGRecord)","DNS%.TSIG").
after_method("DNS%.TSIG#verifyAXFR(DNS%.Message,byte[],DNS%.TSIGRecord,boolean,boolean)","verifyAXFR(DNS%.Message,byte[],DNS%.TSIGRecord,boolean,boolean)","DNS%.TSIG").
after_method("DNS%.TSIG#verifyAXFRStart()","verifyAXFRStart()","DNS%.TSIG").
after_method("DNS%.TSIGRecord#<init>(DNS%.Name,short,int,DNS%.Name,java.util%.Date,short,byte[],int,short,byte[])","<init>(DNS%.Name,short,int,DNS%.Name,java.util%.Date,short,byte[],int,short,byte[])","DNS%.TSIGRecord").
after_method("DNS%.TSIGRecord#<init>(DNS%.Name,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)","<init>(DNS%.Name,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)","DNS%.TSIGRecord").
after_method("DNS%.TSIGRecord#getAlg()","getAlg()","DNS%.TSIGRecord").
after_method("DNS%.TSIGRecord#getError()","getError()","DNS%.TSIGRecord").
after_method("DNS%.TSIGRecord#getFudge()","getFudge()","DNS%.TSIGRecord").
after_method("DNS%.TSIGRecord#getOriginalID()","getOriginalID()","DNS%.TSIGRecord").
after_method("DNS%.TSIGRecord#getOther()","getOther()","DNS%.TSIGRecord").
after_method("DNS%.TSIGRecord#getSignature()","getSignature()","DNS%.TSIGRecord").
after_method("DNS%.TSIGRecord#getTimeSigned()","getTimeSigned()","DNS%.TSIGRecord").
after_method("DNS%.TSIGRecord#rrToWire(DNS%.Compression)","rrToWire(DNS%.Compression)","DNS%.TSIGRecord").
after_method("DNS%.TSIGRecord#toString()","toString()","DNS%.TSIGRecord").
after_method("DNS%.TXTRecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)","<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)","DNS%.TXTRecord").
after_method("DNS%.TXTRecord#<init>(DNS%.Name,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)","<init>(DNS%.Name,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)","DNS%.TXTRecord").
after_method("DNS%.TXTRecord#<init>(DNS%.Name,short,int,java.lang%.String)","<init>(DNS%.Name,short,int,java.lang%.String)","DNS%.TXTRecord").
after_method("DNS%.TXTRecord#<init>(DNS%.Name,short,int,java.util%.Vector)","<init>(DNS%.Name,short,int,java.util%.Vector)","DNS%.TXTRecord").
after_method("DNS%.TXTRecord#getStrings()","getStrings()","DNS%.TXTRecord").
after_method("DNS%.TXTRecord#rrToWire(DNS%.Compression)","rrToWire(DNS%.Compression)","DNS%.TXTRecord").
after_method("DNS%.TXTRecord#toString()","toString()","DNS%.TXTRecord").
after_method("DNS%.UNKRecord#<init>(DNS%.Name,short,short,int,DNS%.MyStringTokenizer,DNS%.Name)","<init>(DNS%.Name,short,short,int,DNS%.MyStringTokenizer,DNS%.Name)","DNS%.UNKRecord").
after_method("DNS%.UNKRecord#<init>(DNS%.Name,short,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)","<init>(DNS%.Name,short,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)","DNS%.UNKRecord").
after_method("DNS%.UNKRecord#rrToWire(DNS%.Compression)","rrToWire(DNS%.Compression)","DNS%.UNKRecord").
after_method("DNS%.UNKRecord#toString()","toString()","DNS%.UNKRecord").
after_method("DNS%.Zone#<init>(java.lang%.String,int)","<init>(java.lang%.String,int)","DNS%.Zone").
after_method("DNS%.Zone#findName(DNS%.Name)","findName(DNS%.Name)","DNS%.Zone").
after_method("DNS%.Zone#getOrigin()","getOrigin()","DNS%.Zone").
after_method("DNS%.Zone#parseOrigin(DNS%.MyStringTokenizer)","parseOrigin(DNS%.MyStringTokenizer)","DNS%.Zone").
after_method("DNS%.Zone#parseRR(DNS%.MyStringTokenizer,boolean,DNS%.Record,DNS%.Name)","parseRR(DNS%.MyStringTokenizer,boolean,DNS%.Record,DNS%.Name)","DNS%.Zone").
after_method("DNS%.dns#<init>()","<init>()","DNS%.dns").
after_method("DNS%.dns#classString(int)","classString(int)","DNS%.dns").
after_method("DNS%.dns#classValue(java.lang%.String)","classValue(java.lang%.String)","DNS%.dns").
after_method("DNS%.dns#flagString(int)","flagString(int)","DNS%.dns").
after_method("DNS%.dns#getRecords(DNS%.Resolver,java.lang%.String,short)","getRecords(DNS%.Resolver,java.lang%.String,short)","DNS%.dns").
after_method("DNS%.dns#getRecords(DNS%.Resolver,java.lang%.String,short,short)","getRecords(DNS%.Resolver,java.lang%.String,short,short)","DNS%.dns").
after_method("DNS%.dns#getRecords(java.lang%.String,short)","getRecords(java.lang%.String,short)","DNS%.dns").
after_method("DNS%.dns#getRecords(java.lang%.String,short,short)","getRecords(java.lang%.String,short,short)","DNS%.dns").
after_method("DNS%.dns#getRecordsByAddress(DNS%.Resolver,java.lang%.String,short)","getRecordsByAddress(DNS%.Resolver,java.lang%.String,short)","DNS%.dns").
after_method("DNS%.dns#getRecordsByAddress(java.lang%.String,short)","getRecordsByAddress(java.lang%.String,short)","DNS%.dns").
after_method("DNS%.dns#init(java.lang%.String)","init(java.lang%.String)","DNS%.dns").
after_method("DNS%.dns#longSectionString(int)","longSectionString(int)","DNS%.dns").
after_method("DNS%.dns#matchType(short,short)","matchType(short,short)","DNS%.dns").
after_method("DNS%.dns#opcodeString(int)","opcodeString(int)","DNS%.dns").
after_method("DNS%.dns#put2(java.util%.Hashtable,java.lang%.Object,java.lang%.Object)","put2(java.util%.Hashtable,java.lang%.Object,java.lang%.Object)","DNS%.dns").
after_method("DNS%.dns#rcodeString(int)","rcodeString(int)","DNS%.dns").
after_method("DNS%.dns#rcodeValue(java.lang%.String)","rcodeValue(java.lang%.String)","DNS%.dns").
after_method("DNS%.dns#sectionString(int)","sectionString(int)","DNS%.dns").
after_method("DNS%.dns#sectionValue(java.lang%.String)","sectionValue(java.lang%.String)","DNS%.dns").
after_method("DNS%.dns#typeString(int)","typeString(int)","DNS%.dns").
after_method("DNS%.dns#typeValue(java.lang%.String)","typeValue(java.lang%.String)","DNS%.dns").
after_method("DNS.utils%.CountedDataInputStream#<init>(java.io%.InputStream)","<init>(java.io%.InputStream)","DNS.utils%.CountedDataInputStream").
after_method("DNS.utils%.CountedDataInputStream#getPos()","getPos()","DNS.utils%.CountedDataInputStream").
after_method("DNS.utils%.CountedDataInputStream#read(byte[])","read(byte[])","DNS.utils%.CountedDataInputStream").
after_method("DNS.utils%.CountedDataInputStream#readByte()","readByte()","DNS.utils%.CountedDataInputStream").
after_method("DNS.utils%.CountedDataInputStream#readInt()","readInt()","DNS.utils%.CountedDataInputStream").
after_method("DNS.utils%.CountedDataInputStream#readLong()","readLong()","DNS.utils%.CountedDataInputStream").
after_method("DNS.utils%.CountedDataInputStream#readShort()","readShort()","DNS.utils%.CountedDataInputStream").
after_method("DNS.utils%.CountedDataInputStream#readString()","readString()","DNS.utils%.CountedDataInputStream").
after_method("DNS.utils%.CountedDataInputStream#readUnsignedByte()","readUnsignedByte()","DNS.utils%.CountedDataInputStream").
after_method("DNS.utils%.CountedDataInputStream#readUnsignedShort()","readUnsignedShort()","DNS.utils%.CountedDataInputStream").
after_method("DNS.utils%.CountedDataInputStream#skipBytes(int)","skipBytes(int)","DNS.utils%.CountedDataInputStream").
after_method("DNS.utils%.CountedDataOutputStream#<init>(java.io%.OutputStream)","<init>(java.io%.OutputStream)","DNS.utils%.CountedDataOutputStream").
after_method("DNS.utils%.CountedDataOutputStream#getPos()","getPos()","DNS.utils%.CountedDataOutputStream").
after_method("DNS.utils%.CountedDataOutputStream#write(byte[])","write(byte[])","DNS.utils%.CountedDataOutputStream").
after_method("DNS.utils%.CountedDataOutputStream#writeByte(int)","writeByte(int)","DNS.utils%.CountedDataOutputStream").
after_method("DNS.utils%.CountedDataOutputStream#writeInt(int)","writeInt(int)","DNS.utils%.CountedDataOutputStream").
after_method("DNS.utils%.CountedDataOutputStream#writeLong(long)","writeLong(long)","DNS.utils%.CountedDataOutputStream").
after_method("DNS.utils%.CountedDataOutputStream#writeShort(int)","writeShort(int)","DNS.utils%.CountedDataOutputStream").
after_method("DNS.utils%.CountedDataOutputStream#writeString(java.lang%.String)","writeString(java.lang%.String)","DNS.utils%.CountedDataOutputStream").
after_method("DNS.utils%.base16#<init>()","<init>()","DNS.utils%.base16").
after_method("DNS.utils%.base16#fromString(java.lang%.String)","fromString(java.lang%.String)","DNS.utils%.base16").
after_method("DNS.utils%.base16#toString(byte[])","toString(byte[])","DNS.utils%.base16").
after_method("DNS.utils%.base64#<init>()","<init>()","DNS.utils%.base64").
after_method("DNS.utils%.base64#fromString(java.lang%.String)","fromString(java.lang%.String)","DNS.utils%.base64").
after_method("DNS.utils%.base64#toString(byte[])","toString(byte[])","DNS.utils%.base64").
after_method("DNS.utils%.hmacSigner#<init>(byte[])","<init>(byte[])","DNS.utils%.hmacSigner").
after_method("DNS.utils%.hmacSigner#addData(byte[])","addData(byte[])","DNS.utils%.hmacSigner").
after_method("DNS.utils%.hmacSigner#addData(byte[],int,int)","addData(byte[],int,int)","DNS.utils%.hmacSigner").
after_method("DNS.utils%.hmacSigner#byteArrayCompare(byte[],byte[])","byteArrayCompare(byte[],byte[])","DNS.utils%.hmacSigner").
after_method("DNS.utils%.hmacSigner#clear()","clear()","DNS.utils%.hmacSigner").
after_method("DNS.utils%.hmacSigner#printByteString(java.lang%.String,byte[],int,int)","printByteString(java.lang%.String,byte[],int,int)","DNS.utils%.hmacSigner").
after_method("DNS.utils%.hmacSigner#sign()","sign()","DNS.utils%.hmacSigner").
after_method("DNS.utils%.hmacSigner#verify(byte[])","verify(byte[])","DNS.utils%.hmacSigner").
after_method("DNS.utils%.md5#<init>()","<init>()","DNS.utils%.md5").
after_method("DNS.utils%.md5#F(int,int,int)","F(int,int,int)","DNS.utils%.md5").
after_method("DNS.utils%.md5#FF(int,int,int,int,int,int,int)","FF(int,int,int,int,int,int,int)","DNS.utils%.md5").
after_method("DNS.utils%.md5#G(int,int,int)","G(int,int,int)","DNS.utils%.md5").
after_method("DNS.utils%.md5#GG(int,int,int,int,int,int,int)","GG(int,int,int,int,int,int,int)","DNS.utils%.md5").
after_method("DNS.utils%.md5#H(int,int,int)","H(int,int,int)","DNS.utils%.md5").
after_method("DNS.utils%.md5#HH(int,int,int,int,int,int,int)","HH(int,int,int,int,int,int,int)","DNS.utils%.md5").
after_method("DNS.utils%.md5#I(int,int,int)","I(int,int,int)","DNS.utils%.md5").
after_method("DNS.utils%.md5#II(int,int,int,int,int,int,int)","II(int,int,int,int,int,int,int)","DNS.utils%.md5").
after_method("DNS.utils%.md5#ROTATE_LEFT(int,int)","ROTATE_LEFT(int,int)","DNS.utils%.md5").
after_method("DNS.utils%.md5#compute(byte[])","compute(byte[])","DNS.utils%.md5").
after_method("DNS.utils%.md5#compute(byte[],int,int)","compute(byte[],int,int)","DNS.utils%.md5").
after_method("DNS.utils%.md5#decode(byte[],int,int)","decode(byte[],int,int)","DNS.utils%.md5").
after_method("DNS.utils%.md5#digest(byte[],int,int,int[])","digest(byte[],int,int,int[])","DNS.utils%.md5").
after_method("DNS.utils%.md5#encode(int[])","encode(int[])","DNS.utils%.md5").
after_method("DNS.utils%.md5#pad(byte[],int,int)","pad(byte[],int,int)","DNS.utils%.md5").
after_package("DNS").
after_package("DNS.utils").
after_return("%.dig#<init>()","void").
after_return("%.dig#doAXFR(DNS%.Message,DNS%.Resolver)","void").
after_return("%.dig#doQuery(DNS%.Message,DNS%.Resolver)","void").
after_return("%.dig#main(java.lang%.String[])","void").
after_return("%.dig#usage()","void").
after_return("%.dnsServer#1#<init>()","void").
after_return("%.dnsServer#1#run()","void").
after_return("%.dnsServer#2#<init>()","void").
after_return("%.dnsServer#2#run()","void").
after_return("%.dnsServer#<init>()","void").
after_return("%.dnsServer#addTCP(short)","void").
after_return("%.dnsServer#addUDP(short)","void").
after_return("%.dnsServer#addZone(java.lang%.String,int)","void").
after_return("%.dnsServer#findBestZone(DNS%.Name)","DNS%.Zone").
after_return("%.dnsServer#generateReply(DNS%.Message)","DNS%.Message").
after_return("%.dnsServer#main(java.lang%.String[])","void").
after_return("%.dnsServer#serveTCP(short)","void").
after_return("%.dnsServer#serveUDP(short)","void").
after_return("%.update#<init>(java.io%.InputStream)","void").
after_return("%.update#doAdd(DNS%.MyStringTokenizer)","void").
after_return("%.update#doAssert(DNS%.MyStringTokenizer)","boolean").
after_return("%.update#doDelete(DNS%.MyStringTokenizer)","void").
after_return("%.update#doFile(DNS%.MyStringTokenizer,java.util%.Vector)","void").
after_return("%.update#doGlue(DNS%.MyStringTokenizer)","void").
after_return("%.update#doProhibit(DNS%.MyStringTokenizer)","void").
after_return("%.update#doQuery(DNS%.MyStringTokenizer)","void").
after_return("%.update#doRequire(DNS%.MyStringTokenizer)","void").
after_return("%.update#help(java.lang%.String)","void").
after_return("%.update#helpAttributes()","void").
after_return("%.update#helpData()","void").
after_return("%.update#helpOperations()","void").
after_return("%.update#helpResolver()","void").
after_return("%.update#main(java.lang%.String[])","void").
after_return("%.update#parseName(DNS%.MyStringTokenizer,short)","DNS%.Record").
after_return("%.update#parseRR(DNS%.MyStringTokenizer,short,int)","DNS%.Record").
after_return("%.update#parseSet(DNS%.MyStringTokenizer,short)","DNS%.Record").
after_return("%.update#sendUpdate()","void").
after_return("DNS%.ARecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)","void").
after_return("DNS%.ARecord#<init>(DNS%.Name,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)","void").
after_return("DNS%.ARecord#<init>(DNS%.Name,short,int,java.net%.InetAddress)","void").
after_return("DNS%.ARecord#getAddress()","java.net%.InetAddress").
after_return("DNS%.ARecord#rrToWire(DNS%.Compression)","byte[]").
after_return("DNS%.ARecord#toString()","java.lang%.String").
after_return("DNS%.CERTRecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)","void").
after_return("DNS%.CERTRecord#<init>(DNS%.Name,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)","void").
after_return("DNS%.CERTRecord#<init>(DNS%.Name,short,int,int,int,int,byte[])","void").
after_return("DNS%.CERTRecord#getAlgorithm()","byte").
after_return("DNS%.CERTRecord#getCertType()","short").
after_return("DNS%.CERTRecord#getKeyTag()","short").
after_return("DNS%.CERTRecord#rrToWire(DNS%.Compression)","byte[]").
after_return("DNS%.CERTRecord#toString()","java.lang%.String").
after_return("DNS%.CNAMERecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)","void").
after_return("DNS%.CNAMERecord#<init>(DNS%.Name,short,int,DNS%.Name)","void").
after_return("DNS%.CNAMERecord#<init>(DNS%.Name,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)","void").
after_return("DNS%.Compression#<init>()","void").
after_return("DNS%.Compression#add(int,DNS%.Name)","void").
after_return("DNS%.Compression#get(DNS%.Name)","int").
after_return("DNS%.Compression#get(int)","DNS%.Name").
after_return("DNS%.EDNS#<init>()","void").
after_return("DNS%.EDNS#newOPT(int)","DNS%.OPTRecord").
after_return("DNS%.FindResolver#<init>()","void").
after_return("DNS%.FindResolver#find()","java.lang%.String").
after_return("DNS%.FindResolver#findProperty()","java.lang%.String").
after_return("DNS%.FindResolver#findUnix()","java.lang%.String").
after_return("DNS%.HINFORecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)","void").
after_return("DNS%.HINFORecord#<init>(DNS%.Name,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)","void").
after_return("DNS%.HINFORecord#<init>(DNS%.Name,short,int,java.lang%.String,java.lang%.String)","void").
after_return("DNS%.HINFORecord#getCPU()","java.lang%.String").
after_return("DNS%.HINFORecord#getOS()","java.lang%.String").
after_return("DNS%.HINFORecord#rrToWire(DNS%.Compression)","byte[]").
after_return("DNS%.HINFORecord#toString()","java.lang%.String").
after_return("DNS%.Header#<init>(DNS.utils%.CountedDataInputStream)","void").
after_return("DNS%.Header#<init>(int)","void").
after_return("DNS%.Header#decCount(int)","void").
after_return("DNS%.Header#getCount(int)","short").
after_return("DNS%.Header#getFlag(int)","boolean").
after_return("DNS%.Header#getID()","int").
after_return("DNS%.Header#getOpcode()","byte").
after_return("DNS%.Header#getRcode()","byte").
after_return("DNS%.Header#incCount(int)","void").
after_return("DNS%.Header#printFlags()","java.lang%.String").
after_return("DNS%.Header#randomID()","short").
after_return("DNS%.Header#readFlags(DNS.utils%.CountedDataInputStream)","void").
after_return("DNS%.Header#setCount(int,short)","void").
after_return("DNS%.Header#setFlag(int)","void").
after_return("DNS%.Header#setID(int)","void").
after_return("DNS%.Header#setOpcode(byte)","void").
after_return("DNS%.Header#setRcode(byte)","void").
after_return("DNS%.Header#toString()","java.lang%.String").
after_return("DNS%.Header#toWire()","byte[]").
after_return("DNS%.Header#toWire(DNS.utils%.CountedDataOutputStream)","void").
after_return("DNS%.Header#unsetFlag(int)","void").
after_return("DNS%.Header#writeFlags(DNS.utils%.CountedDataOutputStream)","void").
after_return("DNS%.IO#<init>()","void").
after_return("DNS%.IO#formatBase64String(java.lang%.String,int,java.lang%.String,boolean)","java.lang%.String").
after_return("DNS%.IO#readExtendedLine(java.io%.BufferedReader)","java.lang%.String").
after_return("DNS%.IO#stripTrailing(java.lang%.String)","java.lang%.String").
after_return("DNS%.KEYRecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)","void").
after_return("DNS%.KEYRecord#<init>(DNS%.Name,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)","void").
after_return("DNS%.KEYRecord#<init>(DNS%.Name,short,int,int,int,int,byte[])","void").
after_return("DNS%.KEYRecord#getAlgorithm()","byte").
after_return("DNS%.KEYRecord#getFlags()","short").
after_return("DNS%.KEYRecord#getProtocol()","byte").
after_return("DNS%.KEYRecord#rrToWire(DNS%.Compression)","byte[]").
after_return("DNS%.KEYRecord#toString()","java.lang%.String").
after_return("DNS%.MXRecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)","void").
after_return("DNS%.MXRecord#<init>(DNS%.Name,short,int,int,DNS%.Name)","void").
after_return("DNS%.MXRecord#<init>(DNS%.Name,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)","void").
after_return("DNS%.MXRecord#getPriority()","short").
after_return("DNS%.MXRecord#getTarget()","DNS%.Name").
after_return("DNS%.MXRecord#rrToWire(DNS%.Compression)","byte[]").
after_return("DNS%.MXRecord#toString()","java.lang%.String").
after_return("DNS%.Message#<init>()","void").
after_return("DNS%.Message#<init>(DNS.utils%.CountedDataInputStream)","void").
after_return("DNS%.Message#<init>(byte[])","void").
after_return("DNS%.Message#<init>(int)","void").
after_return("DNS%.Message#addRecord(int,DNS%.Record)","void").
after_return("DNS%.Message#getHeader()","DNS%.Header").
after_return("DNS%.Message#getSection(int)","java.util%.Enumeration").
after_return("DNS%.Message#getTSIG()","DNS%.TSIGRecord").
after_return("DNS%.Message#numBytes()","int").
after_return("DNS%.Message#removeRecord(int,DNS%.Record)","boolean").
after_return("DNS%.Message#sectionToString(int)","java.lang%.String").
after_return("DNS%.Message#setHeader(DNS%.Header)","void").
after_return("DNS%.Message#toString()","java.lang%.String").
after_return("DNS%.Message#toWire()","byte[]").
after_return("DNS%.Message#toWire(DNS.utils%.CountedDataOutputStream)","void").
after_return("DNS%.Message#toWireCanonical(DNS.utils%.CountedDataOutputStream)","void").
after_return("DNS%.MyStringTokenizer#<init>(java.lang%.String)","void").
after_return("DNS%.MyStringTokenizer#<init>(java.lang%.String,java.lang%.String)","void").
after_return("DNS%.MyStringTokenizer#<init>(java.lang%.String,java.lang%.String,boolean)","void").
after_return("DNS%.MyStringTokenizer#hasMoreDelimiters()","boolean").
after_return("DNS%.MyStringTokenizer#hasMoreElements()","boolean").
after_return("DNS%.MyStringTokenizer#hasMoreTokens()","boolean").
after_return("DNS%.MyStringTokenizer#isDelim(int)","boolean").
after_return("DNS%.MyStringTokenizer#main(java.lang%.String[])","void").
after_return("DNS%.MyStringTokenizer#nextElement()","java.lang%.Object").
after_return("DNS%.MyStringTokenizer#nextToken()","java.lang%.String").
after_return("DNS%.MyStringTokenizer#putBackToken(java.lang%.String)","void").
after_return("DNS%.NSRecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)","void").
after_return("DNS%.NSRecord#<init>(DNS%.Name,short,int,DNS%.Name)","void").
after_return("DNS%.NSRecord#<init>(DNS%.Name,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)","void").
after_return("DNS%.NS_CNAME_PTRRecord#<init>(DNS%.Name,short,short,int,DNS%.MyStringTokenizer,DNS%.Name)","void").
after_return("DNS%.NS_CNAME_PTRRecord#<init>(DNS%.Name,short,short,int,DNS%.Name)","void").
after_return("DNS%.NS_CNAME_PTRRecord#<init>(DNS%.Name,short,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)","void").
after_return("DNS%.NS_CNAME_PTRRecord#getTarget()","DNS%.Name").
after_return("DNS%.NS_CNAME_PTRRecord#rrToWire(DNS%.Compression)","byte[]").
after_return("DNS%.NS_CNAME_PTRRecord#toString()","java.lang%.String").
after_return("DNS%.NXTRecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)","void").
after_return("DNS%.NXTRecord#<init>(DNS%.Name,short,int,DNS%.Name,java.util%.BitSet)","void").
after_return("DNS%.NXTRecord#<init>(DNS%.Name,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)","void").
after_return("DNS%.NXTRecord#getBitmap()","java.util%.BitSet").
after_return("DNS%.NXTRecord#getNext()","DNS%.Name").
after_return("DNS%.NXTRecord#rrToWire(DNS%.Compression)","byte[]").
after_return("DNS%.NXTRecord#toString()","java.lang%.String").
after_return("DNS%.Name#<init>(DNS%.Name,int)","void").
after_return("DNS%.Name#<init>(DNS.utils%.CountedDataInputStream,DNS%.Compression)","void").
after_return("DNS%.Name#<init>(java.lang%.String)","void").
after_return("DNS%.Name#<init>(java.lang%.String,DNS%.Name)","void").
after_return("DNS%.Name#append(DNS%.Name)","void").
after_return("DNS%.Name#equals(java.lang%.Object)","boolean").
after_return("DNS%.Name#hashCode()","int").
after_return("DNS%.Name#labels()","byte").
after_return("DNS%.Name#length()","short").
after_return("DNS%.Name#toString()","java.lang%.String").
after_return("DNS%.Name#toWire(DNS.utils%.CountedDataOutputStream,DNS%.Compression)","void").
after_return("DNS%.Name#toWireCanonical(DNS.utils%.CountedDataOutputStream)","void").
after_return("DNS%.OPTRecord#<init>(DNS%.Name,short,int)","void").
after_return("DNS%.OPTRecord#<init>(DNS%.Name,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)","void").
after_return("DNS%.OPTRecord#getExtendedRcode()","short").
after_return("DNS%.OPTRecord#getPayloadSize()","short").
after_return("DNS%.OPTRecord#getVersion()","short").
after_return("DNS%.OPTRecord#rrToWire(DNS%.Compression)","byte[]").
after_return("DNS%.OPTRecord#toString()","java.lang%.String").
after_return("DNS%.PTRRecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)","void").
after_return("DNS%.PTRRecord#<init>(DNS%.Name,short,int,DNS%.Name)","void").
after_return("DNS%.PTRRecord#<init>(DNS%.Name,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)","void").
after_return("DNS%.RRset#<init>(DNS%.Name,short)","void").
after_return("DNS%.RRset#addRR(DNS%.Record)","void").
after_return("DNS%.RRset#rrs()","java.util%.Enumeration").
after_return("DNS%.Record#<init>(DNS%.Name,short,short,int)","void").
after_return("DNS%.Record#fromString(DNS%.Name,short,short,int,DNS%.MyStringTokenizer,DNS%.Name)","DNS%.Record").
after_return("DNS%.Record#fromWire(DNS.utils%.CountedDataInputStream,int,DNS%.Compression)","DNS%.Record").
after_return("DNS%.Record#getDClass()","short").
after_return("DNS%.Record#getName()","DNS%.Name").
after_return("DNS%.Record#getType()","short").
after_return("DNS%.Record#newRecord(DNS%.Name,short,short)","DNS%.Record").
after_return("DNS%.Record#newRecord(DNS%.Name,short,short,int)","DNS%.Record").
after_return("DNS%.Record#newRecord(DNS%.Name,short,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)","DNS%.Record").
after_return("DNS%.Record#newRecord(DNS%.Name,short,short,int,int,byte[])","DNS%.Record").
after_return("DNS%.Record#rrToWire(DNS%.Compression)","byte[]").
after_return("DNS%.Record#rrToWireCanonical()","byte[]").
after_return("DNS%.Record#toString()","java.lang%.String").
after_return("DNS%.Record#toStringNoData()","java.lang%.StringBuffer").
after_return("DNS%.Record#toWire(DNS.utils%.CountedDataOutputStream,int,DNS%.Compression)","void").
after_return("DNS%.Record#toWire(int)","byte[]").
after_return("DNS%.Record#toWireCanonical(DNS.utils%.CountedDataOutputStream,int)","void").
after_return("DNS%.Resolver#<init>()","void").
after_return("DNS%.Resolver#<init>(java.lang%.String)","void").
after_return("DNS%.Resolver#send(DNS%.Message)","DNS%.Message").
after_return("DNS%.Resolver#sendAXFR(DNS%.Message)","DNS%.Message").
after_return("DNS%.Resolver#sendTCP(DNS%.Message,byte[])","DNS%.Message").
after_return("DNS%.Resolver#setDefaultResolver(java.lang%.String)","void").
after_return("DNS%.Resolver#setEDNS(boolean)","void").
after_return("DNS%.Resolver#setPort(int)","void").
after_return("DNS%.Resolver#setTCP(boolean)","void").
after_return("DNS%.Resolver#setTSIGKey(java.lang%.String)","void").
after_return("DNS%.Resolver#setTSIGKey(java.lang%.String,java.lang%.String)","void").
after_return("DNS%.SIGRecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)","void").
after_return("DNS%.SIGRecord#<init>(DNS%.Name,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)","void").
after_return("DNS%.SIGRecord#<init>(DNS%.Name,short,int,int,int,int,java.util%.Date,java.util%.Date,int,DNS%.Name,byte[])","void").
after_return("DNS%.SIGRecord#formatDate(java.util%.Date)","java.lang%.String").
after_return("DNS%.SIGRecord#parseDate(java.lang%.String)","java.util%.Date").
after_return("DNS%.SIGRecord#rrToWire(DNS%.Compression)","byte[]").
after_return("DNS%.SIGRecord#toString()","java.lang%.String").
after_return("DNS%.SOARecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)","void").
after_return("DNS%.SOARecord#<init>(DNS%.Name,short,int,DNS%.Name,DNS%.Name,int,int,int,int,int)","void").
after_return("DNS%.SOARecord#<init>(DNS%.Name,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)","void").
after_return("DNS%.SOARecord#getAdmin()","DNS%.Name").
after_return("DNS%.SOARecord#getExpire()","int").
after_return("DNS%.SOARecord#getHost()","DNS%.Name").
after_return("DNS%.SOARecord#getMinimum()","int").
after_return("DNS%.SOARecord#getRefresh()","int").
after_return("DNS%.SOARecord#getRetry()","int").
after_return("DNS%.SOARecord#getSerial()","int").
after_return("DNS%.SOARecord#rrToWire(DNS%.Compression)","byte[]").
after_return("DNS%.SOARecord#toString()","java.lang%.String").
after_return("DNS%.SRVRecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)","void").
after_return("DNS%.SRVRecord#<init>(DNS%.Name,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)","void").
after_return("DNS%.SRVRecord#<init>(DNS%.Name,short,int,int,int,int,DNS%.Name)","void").
after_return("DNS%.SRVRecord#getPort()","short").
after_return("DNS%.SRVRecord#getPriority()","short").
after_return("DNS%.SRVRecord#getTarget()","DNS%.Name").
after_return("DNS%.SRVRecord#getWeight()","short").
after_return("DNS%.SRVRecord#rrToWire(DNS%.Compression)","byte[]").
after_return("DNS%.SRVRecord#toString()","java.lang%.String").
after_return("DNS%.TSIG#<init>(java.lang%.String,byte[])","void").
after_return("DNS%.TSIG#apply(DNS%.Message)","void").
after_return("DNS%.TSIG#verify(DNS%.Message,byte[],DNS%.TSIGRecord)","boolean").
after_return("DNS%.TSIG#verifyAXFR(DNS%.Message,byte[],DNS%.TSIGRecord,boolean,boolean)","boolean").
after_return("DNS%.TSIG#verifyAXFRStart()","void").
after_return("DNS%.TSIGRecord#<init>(DNS%.Name,short,int,DNS%.Name,java.util%.Date,short,byte[],int,short,byte[])","void").
after_return("DNS%.TSIGRecord#<init>(DNS%.Name,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)","void").
after_return("DNS%.TSIGRecord#getAlg()","DNS%.Name").
after_return("DNS%.TSIGRecord#getError()","short").
after_return("DNS%.TSIGRecord#getFudge()","short").
after_return("DNS%.TSIGRecord#getOriginalID()","int").
after_return("DNS%.TSIGRecord#getOther()","byte[]").
after_return("DNS%.TSIGRecord#getSignature()","byte[]").
after_return("DNS%.TSIGRecord#getTimeSigned()","java.util%.Date").
after_return("DNS%.TSIGRecord#rrToWire(DNS%.Compression)","byte[]").
after_return("DNS%.TSIGRecord#toString()","java.lang%.String").
after_return("DNS%.TXTRecord#<init>(DNS%.Name,short,int,DNS%.MyStringTokenizer,DNS%.Name)","void").
after_return("DNS%.TXTRecord#<init>(DNS%.Name,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)","void").
after_return("DNS%.TXTRecord#<init>(DNS%.Name,short,int,java.lang%.String)","void").
after_return("DNS%.TXTRecord#<init>(DNS%.Name,short,int,java.util%.Vector)","void").
after_return("DNS%.TXTRecord#getStrings()","java.util%.Vector").
after_return("DNS%.TXTRecord#rrToWire(DNS%.Compression)","byte[]").
after_return("DNS%.TXTRecord#toString()","java.lang%.String").
after_return("DNS%.UNKRecord#<init>(DNS%.Name,short,short,int,DNS%.MyStringTokenizer,DNS%.Name)","void").
after_return("DNS%.UNKRecord#<init>(DNS%.Name,short,short,int,int,DNS.utils%.CountedDataInputStream,DNS%.Compression)","void").
after_return("DNS%.UNKRecord#rrToWire(DNS%.Compression)","byte[]").
after_return("DNS%.UNKRecord#toString()","java.lang%.String").
after_return("DNS%.Zone#<init>(java.lang%.String,int)","void").
after_return("DNS%.Zone#findName(DNS%.Name)","java.util%.Hashtable").
after_return("DNS%.Zone#getOrigin()","DNS%.Name").
after_return("DNS%.Zone#parseOrigin(DNS%.MyStringTokenizer)","DNS%.Name").
after_return("DNS%.Zone#parseRR(DNS%.MyStringTokenizer,boolean,DNS%.Record,DNS%.Name)","DNS%.Record").
after_return("DNS%.dns#<init>()","void").
after_return("DNS%.dns#classString(int)","java.lang%.String").
after_return("DNS%.dns#classValue(java.lang%.String)","short").
after_return("DNS%.dns#flagString(int)","java.lang%.String").
after_return("DNS%.dns#getRecords(DNS%.Resolver,java.lang%.String,short)","DNS%.Record[]").
after_return("DNS%.dns#getRecords(DNS%.Resolver,java.lang%.String,short,short)","DNS%.Record[]").
after_return("DNS%.dns#getRecords(java.lang%.String,short)","DNS%.Record[]").
after_return("DNS%.dns#getRecords(java.lang%.String,short,short)","DNS%.Record[]").
after_return("DNS%.dns#getRecordsByAddress(DNS%.Resolver,java.lang%.String,short)","DNS%.Record[]").
after_return("DNS%.dns#getRecordsByAddress(java.lang%.String,short)","DNS%.Record[]").
after_return("DNS%.dns#init(java.lang%.String)","void").
after_return("DNS%.dns#longSectionString(int)","java.lang%.String").
after_return("DNS%.dns#matchType(short,short)","boolean").
after_return("DNS%.dns#opcodeString(int)","java.lang%.String").
after_return("DNS%.dns#put2(java.util%.Hashtable,java.lang%.Object,java.lang%.Object)","void").
after_return("DNS%.dns#rcodeString(int)","java.lang%.String").
after_return("DNS%.dns#rcodeValue(java.lang%.String)","byte").
after_return("DNS%.dns#sectionString(int)","java.lang%.String").
after_return("DNS%.dns#sectionValue(java.lang%.String)","byte").
after_return("DNS%.dns#typeString(int)","java.lang%.String").
after_return("DNS%.dns#typeValue(java.lang%.String)","short").
after_return("DNS.utils%.CountedDataInputStream#<init>(java.io%.InputStream)","void").
after_return("DNS.utils%.CountedDataInputStream#getPos()","int").
after_return("DNS.utils%.CountedDataInputStream#read(byte[])","int").
after_return("DNS.utils%.CountedDataInputStream#readByte()","byte").
after_return("DNS.utils%.CountedDataInputStream#readInt()","int").
after_return("DNS.utils%.CountedDataInputStream#readLong()","long").
after_return("DNS.utils%.CountedDataInputStream#readShort()","short").
after_return("DNS.utils%.CountedDataInputStream#readString()","java.lang%.String").
after_return("DNS.utils%.CountedDataInputStream#readUnsignedByte()","int").
after_return("DNS.utils%.CountedDataInputStream#readUnsignedShort()","int").
after_return("DNS.utils%.CountedDataInputStream#skipBytes(int)","int").
after_return("DNS.utils%.CountedDataOutputStream#<init>(java.io%.OutputStream)","void").
after_return("DNS.utils%.CountedDataOutputStream#getPos()","int").
after_return("DNS.utils%.CountedDataOutputStream#write(byte[])","void").
after_return("DNS.utils%.CountedDataOutputStream#writeByte(int)","void").
after_return("DNS.utils%.CountedDataOutputStream#writeInt(int)","void").
after_return("DNS.utils%.CountedDataOutputStream#writeLong(long)","void").
after_return("DNS.utils%.CountedDataOutputStream#writeShort(int)","void").
after_return("DNS.utils%.CountedDataOutputStream#writeString(java.lang%.String)","void").
after_return("DNS.utils%.base16#<init>()","void").
after_return("DNS.utils%.base16#fromString(java.lang%.String)","byte[]").
after_return("DNS.utils%.base16#toString(byte[])","java.lang%.String").
after_return("DNS.utils%.base64#<init>()","void").
after_return("DNS.utils%.base64#fromString(java.lang%.String)","byte[]").
after_return("DNS.utils%.base64#toString(byte[])","java.lang%.String").
after_return("DNS.utils%.hmacSigner#<init>(byte[])","void").
after_return("DNS.utils%.hmacSigner#addData(byte[])","void").
after_return("DNS.utils%.hmacSigner#addData(byte[],int,int)","void").
after_return("DNS.utils%.hmacSigner#byteArrayCompare(byte[],byte[])","boolean").
after_return("DNS.utils%.hmacSigner#clear()","void").
after_return("DNS.utils%.hmacSigner#printByteString(java.lang%.String,byte[],int,int)","void").
after_return("DNS.utils%.hmacSigner#sign()","byte[]").
after_return("DNS.utils%.hmacSigner#verify(byte[])","boolean").
after_return("DNS.utils%.md5#<init>()","void").
after_return("DNS.utils%.md5#F(int,int,int)","int").
after_return("DNS.utils%.md5#FF(int,int,int,int,int,int,int)","int").
after_return("DNS.utils%.md5#G(int,int,int)","int").
after_return("DNS.utils%.md5#GG(int,int,int,int,int,int,int)","int").
after_return("DNS.utils%.md5#H(int,int,int)","int").
after_return("DNS.utils%.md5#HH(int,int,int,int,int,int,int)","int").
after_return("DNS.utils%.md5#I(int,int,int)","int").
after_return("DNS.utils%.md5#II(int,int,int,int,int,int,int)","int").
after_return("DNS.utils%.md5#ROTATE_LEFT(int,int)","int").
after_return("DNS.utils%.md5#compute(byte[])","byte[]").
after_return("DNS.utils%.md5#compute(byte[],int,int)","byte[]").
after_return("DNS.utils%.md5#decode(byte[],int,int)","int[]").
after_return("DNS.utils%.md5#digest(byte[],int,int,int[])","void").
after_return("DNS.utils%.md5#encode(int[])","byte[]").
after_return("DNS.utils%.md5#pad(byte[],int,int)","byte[]").
after_subtype("DNS%.NS_CNAME_PTRRecord","DNS%.CNAMERecord").
after_subtype("DNS%.NS_CNAME_PTRRecord","DNS%.NSRecord").
after_subtype("DNS%.NS_CNAME_PTRRecord","DNS%.PTRRecord").
after_subtype("DNS%.Record","DNS%.ARecord").
after_subtype("DNS%.Record","DNS%.CERTRecord").
after_subtype("DNS%.Record","DNS%.CNAMERecord").
after_subtype("DNS%.Record","DNS%.HINFORecord").
after_subtype("DNS%.Record","DNS%.KEYRecord").
after_subtype("DNS%.Record","DNS%.MXRecord").
after_subtype("DNS%.Record","DNS%.NSRecord").
after_subtype("DNS%.Record","DNS%.NS_CNAME_PTRRecord").
after_subtype("DNS%.Record","DNS%.NXTRecord").
after_subtype("DNS%.Record","DNS%.OPTRecord").
after_subtype("DNS%.Record","DNS%.PTRRecord").
after_subtype("DNS%.Record","DNS%.SIGRecord").
after_subtype("DNS%.Record","DNS%.SOARecord").
after_subtype("DNS%.Record","DNS%.SRVRecord").
after_subtype("DNS%.Record","DNS%.TSIGRecord").
after_subtype("DNS%.Record","DNS%.TXTRecord").
after_subtype("DNS%.Record","DNS%.UNKRecord").
after_subtype("java.lang%.Object","%.dig").
after_subtype("java.lang%.Object","%.dnsServer").
after_subtype("java.lang%.Object","%.dnsServer#1").
after_subtype("java.lang%.Object","%.dnsServer#2").
after_subtype("java.lang%.Object","%.update").
after_subtype("java.lang%.Object","DNS%.ARecord").
after_subtype("java.lang%.Object","DNS%.CERTRecord").
after_subtype("java.lang%.Object","DNS%.CNAMERecord").
after_subtype("java.lang%.Object","DNS%.Compression").
after_subtype("java.lang%.Object","DNS%.EDNS").
after_subtype("java.lang%.Object","DNS%.FindResolver").
after_subtype("java.lang%.Object","DNS%.HINFORecord").
after_subtype("java.lang%.Object","DNS%.Header").
after_subtype("java.lang%.Object","DNS%.IO").
after_subtype("java.lang%.Object","DNS%.KEYRecord").
after_subtype("java.lang%.Object","DNS%.MXRecord").
after_subtype("java.lang%.Object","DNS%.Message").
after_subtype("java.lang%.Object","DNS%.MyStringTokenizer").
after_subtype("java.lang%.Object","DNS%.NSRecord").
after_subtype("java.lang%.Object","DNS%.NS_CNAME_PTRRecord").
after_subtype("java.lang%.Object","DNS%.NXTRecord").
after_subtype("java.lang%.Object","DNS%.Name").
after_subtype("java.lang%.Object","DNS%.OPTRecord").
after_subtype("java.lang%.Object","DNS%.PTRRecord").
after_subtype("java.lang%.Object","DNS%.RRset").
after_subtype("java.lang%.Object","DNS%.Record").
after_subtype("java.lang%.Object","DNS%.Resolver").
after_subtype("java.lang%.Object","DNS%.SIGRecord").
after_subtype("java.lang%.Object","DNS%.SOARecord").
after_subtype("java.lang%.Object","DNS%.SRVRecord").
after_subtype("java.lang%.Object","DNS%.TSIG").
after_subtype("java.lang%.Object","DNS%.TSIGRecord").
after_subtype("java.lang%.Object","DNS%.TXTRecord").
after_subtype("java.lang%.Object","DNS%.UNKRecord").
after_subtype("java.lang%.Object","DNS%.Zone").
after_subtype("java.lang%.Object","DNS%.dns").
after_subtype("java.lang%.Object","DNS.utils%.CountedDataInputStream").
after_subtype("java.lang%.Object","DNS.utils%.CountedDataOutputStream").
after_subtype("java.lang%.Object","DNS.utils%.base16").
after_subtype("java.lang%.Object","DNS.utils%.base64").
after_subtype("java.lang%.Object","DNS.utils%.hmacSigner").
after_subtype("java.lang%.Object","DNS.utils%.md5").
after_subtype("java.lang%.Runnable","%.dnsServer#1").
after_subtype("java.lang%.Runnable","%.dnsServer#2").
after_subtype("java.util%.Enumeration","DNS%.MyStringTokenizer").
after_type("%.dig","dig","null").
after_type("%.dnsServer","dnsServer","null").
after_type("%.dnsServer#1","dnsServer#1","null").
after_type("%.dnsServer#2","dnsServer#2","null").
after_type("%.update","update","null").
after_type("DNS%.ARecord","ARecord","DNS").
after_type("DNS%.CERTRecord","CERTRecord","DNS").
after_type("DNS%.CNAMERecord","CNAMERecord","DNS").
after_type("DNS%.Compression","Compression","DNS").
after_type("DNS%.EDNS","EDNS","DNS").
after_type("DNS%.FindResolver","FindResolver","DNS").
after_type("DNS%.HINFORecord","HINFORecord","DNS").
after_type("DNS%.Header","Header","DNS").
after_type("DNS%.IO","IO","DNS").
after_type("DNS%.KEYRecord","KEYRecord","DNS").
after_type("DNS%.MXRecord","MXRecord","DNS").
after_type("DNS%.Message","Message","DNS").
after_type("DNS%.MyStringTokenizer","MyStringTokenizer","DNS").
after_type("DNS%.NSRecord","NSRecord","DNS").
after_type("DNS%.NS_CNAME_PTRRecord","NS_CNAME_PTRRecord","DNS").
after_type("DNS%.NXTRecord","NXTRecord","DNS").
after_type("DNS%.Name","Name","DNS").
after_type("DNS%.OPTRecord","OPTRecord","DNS").
after_type("DNS%.PTRRecord","PTRRecord","DNS").
after_type("DNS%.RRset","RRset","DNS").
after_type("DNS%.Record","Record","DNS").
after_type("DNS%.Resolver","Resolver","DNS").
after_type("DNS%.SIGRecord","SIGRecord","DNS").
after_type("DNS%.SOARecord","SOARecord","DNS").
after_type("DNS%.SRVRecord","SRVRecord","DNS").
after_type("DNS%.TSIG","TSIG","DNS").
after_type("DNS%.TSIGRecord","TSIGRecord","DNS").
after_type("DNS%.TXTRecord","TXTRecord","DNS").
after_type("DNS%.UNKRecord","UNKRecord","DNS").
after_type("DNS%.Zone","Zone","DNS").
after_type("DNS%.dns","dns","DNS").
after_type("DNS.utils%.CountedDataInputStream","CountedDataInputStream","DNS.utils").
after_type("DNS.utils%.CountedDataOutputStream","CountedDataOutputStream","DNS.utils").
after_type("DNS.utils%.base16","base16","DNS.utils").
after_type("DNS.utils%.base64","base64","DNS.utils").
after_type("DNS.utils%.hmacSigner","hmacSigner","DNS.utils").
after_type("DNS.utils%.md5","md5","DNS.utils").
after_typeintype("%.dnsServer#1","%.dnsServer").
after_typeintype("%.dnsServer#2","%.dnsServer").
