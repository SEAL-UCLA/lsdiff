#include "deltaKB_lsdPred.rub"
// Orig. Deleted	105
// Orig. Added	161
// Red. Deleted	38
// Red. Added	94
//Method Renaming
//[:jnamed-generateReply__[Message]->Message->:jnamed-generateReply__[Message, byte[], int]->Message]
//[:jnamed-jnamed__[]->void->:jnamed-jnamed__[String]->void]
//[DNS:Header-setCount__[int, short]->void->DNS:Header-setCount__[int, int]->void]
//[DNS:TSIG-apply__[Message]->void->DNS:TSIG-apply__[Message, TSIGRecord]->void]
//[DNS:Resolver-setEDNS__[boolean]->void->DNS:Resolver-setEDNS__[int]->void]

deleted_accesses("%.jnamed#zcount","%.jnamed#<init>()").
deleted_accesses("%.jnamed#zcount","%.jnamed#addZone(java.lang%.String,int)").
deleted_accesses("%.jnamed#zones","%.jnamed#<init>()").
deleted_accesses("%.jnamed#zones","%.jnamed#addZone(java.lang%.String,int)").
deleted_accesses("%.update#ADDITIONAL","%.update#doGlue(DNS%.MyStringTokenizer)").
deleted_accesses("%.update#PREREQ","%.update#doProhibit(DNS%.MyStringTokenizer)").
deleted_accesses("%.update#PREREQ","%.update#doRequire(DNS%.MyStringTokenizer)").
deleted_accesses("%.update#UPDATE","%.update#doAdd(DNS%.MyStringTokenizer)").
deleted_accesses("%.update#UPDATE","%.update#doDelete(DNS%.MyStringTokenizer)").
deleted_accesses("%.update#UPDATE","%.update#sendUpdate()").
deleted_accesses("%.update#ZONE","%.update#sendUpdate()").
deleted_accesses("DNS%.Resolver#useEDNS","DNS%.Resolver#send(DNS%.Message)").
deleted_accesses("DNS%.Resolver#useEDNS","DNS%.Resolver#setEDNS(boolean)").
deleted_accesses("DNS%.Zone#CACHE","%.jnamed#main(java.lang%.String[])").
deleted_accesses("DNS%.Zone#PRIMARY","%.jnamed#main(java.lang%.String[])").
deleted_calls("%.jnamed#1#run()","%.jnamed#serveUDP(short)").
deleted_calls("%.jnamed#2#run()","%.jnamed#serveTCP(short)").
deleted_calls("%.jnamed#main(java.lang%.String[])","%.jnamed#addTCP(short)").
deleted_calls("%.jnamed#main(java.lang%.String[])","%.jnamed#addUDP(short)").
deleted_calls("%.jnamed#main(java.lang%.String[])","%.jnamed#addZone(java.lang%.String,int)").
deleted_calls("%.jnamed#serveUDP(short)","%.jnamed#truncate(DNS%.Message,int,int)").
deleted_calls("DNS.utils%.DataByteInputStream#available()","DNS.utils%.DataByteInputStream#available()").
deleted_field("%.jnamed#zcount","zcount","%.jnamed").
deleted_field("%.jnamed#zones","zones","%.jnamed").
deleted_field("%.update#ADDITIONAL","ADDITIONAL","%.update").
deleted_field("%.update#PREREQ","PREREQ","%.update").
deleted_field("%.update#UPDATE","UPDATE","%.update").
deleted_field("%.update#ZONE","ZONE","%.update").
deleted_field("DNS%.Resolver#useEDNS","useEDNS","DNS%.Resolver").
deleted_fieldoftype("%.jnamed#zcount","int").
deleted_fieldoftype("%.jnamed#zones","DNS%.Zone[]").
deleted_fieldoftype("%.update#ADDITIONAL","int").
deleted_fieldoftype("%.update#PREREQ","int").
deleted_fieldoftype("%.update#UPDATE","int").
deleted_fieldoftype("%.update#ZONE","int").
deleted_fieldoftype("DNS%.Resolver#useEDNS","boolean").
deleted_method("DNS.utils%.DataByteInputStream#available()","available()","DNS.utils%.DataByteInputStream").
deleted_return("DNS.utils%.DataByteInputStream#available()","int").
added_accesses("%.jnamed#TSIGs","%.jnamed#<init>(java.lang%.String)").
added_accesses("%.jnamed#TSIGs","%.jnamed#addTSIG(java.lang%.String,java.lang%.String)").
added_accesses("%.jnamed#TSIGs","%.jnamed#findTSIG(DNS%.Name)").
added_accesses("%.jnamed#cache","%.jnamed#<init>(java.lang%.String)").
added_accesses("%.jnamed#cache","%.jnamed#addAuthority(DNS%.Message,DNS%.Name,DNS%.Zone)").
added_accesses("%.jnamed#cache","%.jnamed#addZone(java.lang%.String,int)").
added_accesses("%.jnamed#cache","%.jnamed#findBestZone(DNS%.Name)").
added_accesses("DNS%.Rcode#FORMERR","%.jnamed#formerrMessage(byte[])").
added_accesses("DNS%.Resolver#EDNSlevel","DNS%.Resolver#send(DNS%.Message)").
added_accesses("DNS%.Resolver#EDNSlevel","DNS%.Resolver#setEDNS(int)").
added_accesses("DNS%.Resolver#ignoreTruncation","DNS%.Resolver#send(DNS%.Message)").
added_accesses("DNS%.Resolver#ignoreTruncation","DNS%.Resolver#setIgnoreTruncation(boolean)").
added_accesses("DNS%.Section#ADDITIONAL","%.update#doGlue(DNS%.MyStringTokenizer)").
added_accesses("DNS%.Section#ADDITIONAL","DNS%.Message#getOPT()").
added_accesses("DNS%.Section#PREREQ","%.update#doProhibit(DNS%.MyStringTokenizer)").
added_accesses("DNS%.Section#PREREQ","%.update#doRequire(DNS%.MyStringTokenizer)").
added_accesses("DNS%.Section#UPDATE","%.update#doAdd(DNS%.MyStringTokenizer)").
added_accesses("DNS%.Section#UPDATE","%.update#doDelete(DNS%.MyStringTokenizer)").
added_accesses("DNS%.Section#UPDATE","%.update#sendUpdate()").
added_accesses("DNS%.Section#ZONE","%.update#sendUpdate()").
added_accesses("DNS%.Zone#CACHE","%.jnamed#<init>(java.lang%.String)").
added_accesses("DNS%.Zone#PRIMARY","%.jnamed#<init>(java.lang%.String)").
added_accesses("java.lang%.System#out","%.jnamed#<init>(java.lang%.String)").
added_calls("%.dig#main(java.lang%.String[])","DNS%.Resolver#setIgnoreTruncation(boolean)").
added_calls("%.jnamed#1#run()","%.jnamed#serveTCP(short)").
added_calls("%.jnamed#2#run()","%.jnamed#serveUDP(short)").
added_calls("%.jnamed#<init>(java.lang%.String)","%.jnamed#addTCP(short)").
added_calls("%.jnamed#<init>(java.lang%.String)","%.jnamed#addTSIG(java.lang%.String,java.lang%.String)").
added_calls("%.jnamed#<init>(java.lang%.String)","%.jnamed#addUDP(short)").
added_calls("%.jnamed#<init>(java.lang%.String)","%.jnamed#addZone(java.lang%.String,int)").
added_calls("%.jnamed#<init>(java.lang%.String)","DNS%.Zone#<init>(java.lang%.String,int,DNS%.Zone)").
added_calls("%.jnamed#<init>(java.lang%.String)","java.io%.BufferedReader#<init>(java.io%.Reader)").
added_calls("%.jnamed#<init>(java.lang%.String)","java.io%.BufferedReader#readLine()").
added_calls("%.jnamed#<init>(java.lang%.String)","java.io%.FileInputStream#<init>(java.lang%.String)").
added_calls("%.jnamed#<init>(java.lang%.String)","java.io%.InputStreamReader#<init>(java.io%.InputStream)").
added_calls("%.jnamed#<init>(java.lang%.String)","java.io%.PrintStream#println(java.lang%.String)").
added_calls("%.jnamed#<init>(java.lang%.String)","java.lang%.String#equals(java.lang%.Object)").
added_calls("%.jnamed#<init>(java.lang%.String)","java.lang%.System#exit(int)").
added_calls("%.jnamed#<init>(java.lang%.String)","java.util%.StringTokenizer#<init>(java.lang%.String)").
added_calls("%.jnamed#<init>(java.lang%.String)","java.util%.StringTokenizer#hasMoreTokens()").
added_calls("%.jnamed#<init>(java.lang%.String)","java.util%.StringTokenizer#nextToken()").
added_calls("%.jnamed#addTSIG(java.lang%.String,java.lang%.String)","DNS%.Name#<init>(java.lang%.String)").
added_calls("%.jnamed#addTSIG(java.lang%.String,java.lang%.String)","DNS.utils%.base64#fromString(java.lang%.String)").
added_calls("%.jnamed#addTSIG(java.lang%.String,java.lang%.String)","java.util%.Hashtable#put(java.lang%.Object,java.lang%.Object)").
added_calls("%.jnamed#findTSIG(DNS%.Name)","DNS%.Name#toString()").
added_calls("%.jnamed#findTSIG(DNS%.Name)","DNS%.TSIG#<init>(java.lang%.String,byte[])").
added_calls("%.jnamed#findTSIG(DNS%.Name)","java.util%.Hashtable#get(java.lang%.Object)").
added_calls("%.jnamed#formerrMessage(byte[])","DNS%.Header#<init>(DNS.utils%.DataByteInputStream)").
added_calls("%.jnamed#formerrMessage(byte[])","DNS%.Header#<init>(int)").
added_calls("%.jnamed#formerrMessage(byte[])","DNS%.Header#setCount(int,int)").
added_calls("%.jnamed#formerrMessage(byte[])","DNS%.Header#setRcode(byte)").
added_calls("%.jnamed#formerrMessage(byte[])","DNS%.Message#<init>()").
added_calls("%.jnamed#formerrMessage(byte[])","DNS%.Message#setHeader(DNS%.Header)").
added_calls("%.jnamed#formerrMessage(byte[])","DNS.utils%.DataByteInputStream#<init>(byte[])").
added_calls("%.jnamed#generateReply(DNS%.Message,byte[],int)","%.jnamed#findTSIG(DNS%.Name)").
added_calls("%.jnamed#generateReply(DNS%.Message,byte[],int)","%.jnamed#formerrMessage(byte[])").
added_calls("%.jnamed#generateReply(DNS%.Message,byte[],int)","%.jnamed#truncate(DNS%.Message,int,int)").
added_calls("%.jnamed#generateReply(DNS%.Message,byte[],int)","DNS%.Message#getTSIG()").
added_calls("%.jnamed#generateReply(DNS%.Message,byte[],int)","DNS%.Message#toWire()").
added_calls("%.jnamed#generateReply(DNS%.Message,byte[],int)","DNS%.TSIG#apply(DNS%.Message,DNS%.TSIGRecord)").
added_calls("%.jnamed#generateReply(DNS%.Message,byte[],int)","DNS%.TSIG#verify(DNS%.Message,byte[],DNS%.TSIGRecord)").
added_calls("%.jnamed#serveTCP(short)","%.jnamed#formerrMessage(byte[])").
added_calls("%.jnamed#serveUDP(short)","%.jnamed#formerrMessage(byte[])").
added_calls("%.jnamed#serveUDP(short)","DNS%.Message#getOPT()").
added_calls("%.jnamed#serveUDP(short)","DNS%.OPTRecord#getPayloadSize()").
added_calls("%.jnamed#truncate(DNS%.Message,int,int)","DNS%.Message#getTSIG()").
added_calls("%.jnamed#truncate(DNS%.Message,int,int)","DNS%.Message#removeAllRecords(int)").
added_calls("%.jnamed#truncate(DNS%.Message,int,int)","DNS%.Record#getWireLength()").
added_calls("DNS%.Message#getOPT()","DNS%.Message#getSectionArray(int)").
added_calls("DNS%.TSIG#apply(DNS%.Message,DNS%.TSIGRecord)","DNS%.TSIGRecord#getSignature()").
added_field("%.jnamed#TSIGs","TSIGs","%.jnamed").
added_field("%.jnamed#cache","cache","%.jnamed").
added_field("DNS%.Resolver#EDNSlevel","EDNSlevel","DNS%.Resolver").
added_field("DNS%.Resolver#ignoreTruncation","ignoreTruncation","DNS%.Resolver").
added_field("DNS%.Section#PREREQ","PREREQ","DNS%.Section").
added_field("DNS%.Section#UPDATE","UPDATE","DNS%.Section").
added_field("DNS%.Section#ZONE","ZONE","DNS%.Section").
added_fieldoftype("%.jnamed#TSIGs","java.util%.Hashtable").
added_fieldoftype("%.jnamed#cache","DNS%.Zone").
added_fieldoftype("DNS%.Resolver#EDNSlevel","int").
added_fieldoftype("DNS%.Resolver#ignoreTruncation","boolean").
added_fieldoftype("DNS%.Section#PREREQ","byte").
added_fieldoftype("DNS%.Section#UPDATE","byte").
added_fieldoftype("DNS%.Section#ZONE","byte").
added_method("%.jnamed#addTSIG(java.lang%.String,java.lang%.String)","addTSIG(java.lang%.String,java.lang%.String)","%.jnamed").
added_method("%.jnamed#findTSIG(DNS%.Name)","findTSIG(DNS%.Name)","%.jnamed").
added_method("%.jnamed#formerrMessage(byte[])","formerrMessage(byte[])","%.jnamed").
added_method("DNS%.Message#getOPT()","getOPT()","DNS%.Message").
added_method("DNS%.Resolver#setIgnoreTruncation(boolean)","setIgnoreTruncation(boolean)","DNS%.Resolver").
added_return("%.jnamed#addTSIG(java.lang%.String,java.lang%.String)","void").
added_return("%.jnamed#findTSIG(DNS%.Name)","DNS%.TSIG").
added_return("%.jnamed#formerrMessage(byte[])","DNS%.Message").
added_return("DNS%.Message#getOPT()","DNS%.OPTRecord").
added_return("DNS%.Resolver#setIgnoreTruncation(boolean)","void").
