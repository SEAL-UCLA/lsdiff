#include "deltaKB_lsdPred.rub"
// Orig. Deleted	30
// Orig. Added	200
// Red. Deleted	2
// Red. Added	172
//Method Renaming
//[edu.washington.cs.lsd.rule.io:LSDTyrubaRuleChecker-invokeQuery__[LSDRule]->ArrayList->edu.washington.cs.lsd.rule.io:LSDTyrubaRuleChecker-invokeQuery__[LSDRule, boolean]->ArrayList]

deleted_calls("edu.washington.cs.lsd.rule.io%.LSDTyrubaRuleChecker#invokeQuery(edu.washington.cs.lsd.rule%.LSDRule)","java.util%.Set#iterator()").
deleted_calls("edu.washington.cs.lsd.rule.io%.LSDTyrubaRuleChecker#main(java.lang%.String[])","edu.washington.cs.lsd.rule.io%.LSDTyrubaRuleChecker#invokeQuery(edu.washington.cs.lsd.rule%.LSDRule)").
added_accesses("edu.washington.cs.lsd.factbase%.LSDFactBase#facts2KB","edu.washington.cs.lsd.factbase%.LSDFactBase#getRelevantFacts(edu.washington.cs.lsd.rule%.LSDRule)").
added_accesses("edu.washington.cs.lsd.factbase%.LSDFactBase#facts2KB","edu.washington.cs.lsd.factbase%.LSDFactBase#getRemainingFacts(boolean)").
added_accesses("edu.washington.cs.lsd.factbase%.LSDFactBase#facts2KB","edu.washington.cs.lsd.factbase%.LSDFactBase#load2KBFactBase(java.io%.File)").
added_accesses("edu.washington.cs.lsd.factbase%.LSDFactBase#facts2KB","edu.washington.cs.lsd.factbase%.LSDFactBase#winnow()").
added_accesses("edu.washington.cs.lsd.factbase%.LSDFactBase#factsDeltaKB","edu.washington.cs.lsd.factbase%.LSDFactBase#getRelevantFacts(edu.washington.cs.lsd.rule%.LSDRule)").
added_accesses("edu.washington.cs.lsd.factbase%.LSDFactBase#factsDeltaKB","edu.washington.cs.lsd.factbase%.LSDFactBase#getRemainingFacts(boolean)").
added_accesses("edu.washington.cs.lsd.factbase%.LSDFactBase#factsDeltaKB","edu.washington.cs.lsd.factbase%.LSDFactBase#loadDeltaKBFactBase(java.io%.File)").
added_accesses("edu.washington.cs.lsd.factbase%.LSDFactBase#factsDeltaKB","edu.washington.cs.lsd.factbase%.LSDFactBase#winnow()").
added_accesses("edu.washington.cs.lsd.factbase%.LSDFactBase#matched","edu.washington.cs.lsd.factbase%.LSDFactBase#getRemainingFacts(boolean)").
added_accesses("edu.washington.cs.lsd.factbase%.LSDFactBase#ruleMatches","edu.washington.cs.lsd.factbase%.LSDFactBase#getRelevantFacts(edu.washington.cs.lsd.rule%.LSDRule)").
added_accesses("edu.washington.cs.lsd.factbase%.LSDFactBase#ruleMatches","edu.washington.cs.lsd.factbase%.LSDFactBase#winnow()").
added_accesses("edu.washington.cs.lsd.factbase%.LSDFactBase#trb","edu.washington.cs.lsd.factbase%.LSDFactBase#load2KBFactBase(java.io%.File)").
added_accesses("edu.washington.cs.lsd.factbase%.LSDFactBase#trb","edu.washington.cs.lsd.factbase%.LSDFactBase#loadDeltaKBFactBase(java.io%.File)").
added_accesses("edu.washington.cs.lsd.factbase%.LSDFactBase#trb","edu.washington.cs.lsd.factbase%.LSDFactBase#winnow()").
added_accesses("edu.washington.cs.lsd.factbase%.LSDFactBase#winnowed","edu.washington.cs.lsd.factbase%.LSDFactBase#getRelevantFacts(edu.washington.cs.lsd.rule%.LSDRule)").
added_accesses("edu.washington.cs.lsd.factbase%.LSDFactBase#winnowed","edu.washington.cs.lsd.factbase%.LSDFactBase#getRemainingFacts(boolean)").
added_accesses("edu.washington.cs.lsd.factbase%.LSDFactBase#winnowed","edu.washington.cs.lsd.factbase%.LSDFactBase#resetWinnowing()").
added_accesses("edu.washington.cs.lsd.factbase%.LSDFactBase#winnowed","edu.washington.cs.lsd.factbase%.LSDFactBase#winnow()").
added_accesses("edu.washington.cs.lsd.factbase%.LSDFactBase#winnowingRules","edu.washington.cs.lsd.factbase%.LSDFactBase#loadWinnowingRules(java.util%.ArrayList<LSDRule>)").
added_accesses("edu.washington.cs.lsd.factbase%.LSDFactBase#winnowingRules","edu.washington.cs.lsd.factbase%.LSDFactBase#winnow()").
added_accesses("edu.washington.cs.lsd.rule%.LSDRule#literals","edu.washington.cs.lsd.rule%.LSDRule#getAntecedents()").
added_accesses("edu.washington.cs.lsd.rule%.LSDRule#literals","edu.washington.cs.lsd.rule%.LSDRule#getConclusions()").
added_accesses("java.lang%.System#err","edu.washington.cs.lsd.factbase%.LSDFactBase#getRelevantFacts(edu.washington.cs.lsd.rule%.LSDRule)").
added_accesses("java.lang%.System#err","edu.washington.cs.lsd.factbase%.LSDFactBase#main(java.lang%.String[])").
added_accesses("java.lang%.System#err","edu.washington.cs.lsd.factbase%.LSDFactBase#winnow()").
added_accesses("java.lang%.System#out","edu.washington.cs.lsd.factbase%.LSDFactBase#main(java.lang%.String[])").
added_accesses("java.lang%.System#out","edu.washington.cs.lsd.factbase%.LSDFactBase#winnow()").
added_calls("edu.washington.cs.lsd.factbase%.LSDFactBase#getRelevantFacts(edu.washington.cs.lsd.rule%.LSDRule)","edu.washington.cs.lsd.factbase%.LSDFactBase#winnow()").
added_calls("edu.washington.cs.lsd.factbase%.LSDFactBase#getRelevantFacts(edu.washington.cs.lsd.rule%.LSDRule)","java.io%.PrintStream#println(java.lang%.String)").
added_calls("edu.washington.cs.lsd.factbase%.LSDFactBase#getRelevantFacts(edu.washington.cs.lsd.rule%.LSDRule)","java.util%.ArrayList<LSDFact>#<init>()").
added_calls("edu.washington.cs.lsd.factbase%.LSDFactBase#getRelevantFacts(edu.washington.cs.lsd.rule%.LSDRule)","java.util%.ArrayList<LSDFact>#add(edu.washington.cs.lsd.rule%.LSDFact)").
added_calls("edu.washington.cs.lsd.factbase%.LSDFactBase#getRelevantFacts(edu.washington.cs.lsd.rule%.LSDRule)","java.util%.HashMap<LSDRule,List<LSDFact>>#containsKey(java.lang%.Object)").
added_calls("edu.washington.cs.lsd.factbase%.LSDFactBase#getRelevantFacts(edu.washington.cs.lsd.rule%.LSDRule)","java.util%.HashMap<LSDRule,List<LSDFact>>#get(java.lang%.Object)").
added_calls("edu.washington.cs.lsd.factbase%.LSDFactBase#getRelevantFacts(edu.washington.cs.lsd.rule%.LSDRule)","java.util%.HashSet<LSDFact>#contains(java.lang%.Object)").
added_calls("edu.washington.cs.lsd.factbase%.LSDFactBase#getRelevantFacts(edu.washington.cs.lsd.rule%.LSDRule)","java.util%.Iterator<LSDFact>#hasNext()").
added_calls("edu.washington.cs.lsd.factbase%.LSDFactBase#getRelevantFacts(edu.washington.cs.lsd.rule%.LSDRule)","java.util%.Iterator<LSDFact>#next()").
added_calls("edu.washington.cs.lsd.factbase%.LSDFactBase#getRelevantFacts(edu.washington.cs.lsd.rule%.LSDRule)","java.util%.List<LSDFact>#iterator()").
added_calls("edu.washington.cs.lsd.factbase%.LSDFactBase#getRemainingFacts(boolean)","edu.washington.cs.lsd.factbase%.LSDFactBase#winnow()").
added_calls("edu.washington.cs.lsd.factbase%.LSDFactBase#getRemainingFacts(boolean)","java.util%.ArrayList<LSDFact>#<init>()").
added_calls("edu.washington.cs.lsd.factbase%.LSDFactBase#getRemainingFacts(boolean)","java.util%.ArrayList<LSDFact>#add(edu.washington.cs.lsd.rule%.LSDFact)").
added_calls("edu.washington.cs.lsd.factbase%.LSDFactBase#getRemainingFacts(boolean)","java.util%.HashSet<LSDFact>#contains(java.lang%.Object)").
added_calls("edu.washington.cs.lsd.factbase%.LSDFactBase#getRemainingFacts(boolean)","java.util%.HashSet<LSDFact>#iterator()").
added_calls("edu.washington.cs.lsd.factbase%.LSDFactBase#getRemainingFacts(boolean)","java.util%.Iterator<LSDFact>#hasNext()").
added_calls("edu.washington.cs.lsd.factbase%.LSDFactBase#getRemainingFacts(boolean)","java.util%.Iterator<LSDFact>#next()").
added_calls("edu.washington.cs.lsd.factbase%.LSDFactBase#load2KBFactBase(java.io%.File)","edu.washington.cs.lsd.factbase%.LSDFactBase#resetWinnowing()").
added_calls("edu.washington.cs.lsd.factbase%.LSDFactBase#load2KBFactBase(java.io%.File)","edu.washington.cs.lsd.rule.io%.LSDTyrubaFactReader#<init>(java.io%.File)").
added_calls("edu.washington.cs.lsd.factbase%.LSDFactBase#load2KBFactBase(java.io%.File)","edu.washington.cs.lsd.rule.io%.LSDTyrubaFactReader#getFacts()").
added_calls("edu.washington.cs.lsd.factbase%.LSDFactBase#load2KBFactBase(java.io%.File)","edu.washington.cs.lsd.rule.io%.LSDTyrubaRuleChecker#loadAdditionalDB(java.io%.File)").
added_calls("edu.washington.cs.lsd.factbase%.LSDFactBase#load2KBFactBase(java.io%.File)","java.io%.File#exists()").
added_calls("edu.washington.cs.lsd.factbase%.LSDFactBase#load2KBFactBase(java.io%.File)","java.io%.FileNotFoundException#<init>()").
added_calls("edu.washington.cs.lsd.factbase%.LSDFactBase#load2KBFactBase(java.io%.File)","java.util%.AbstractList<LSDFact>#iterator()").
added_calls("edu.washington.cs.lsd.factbase%.LSDFactBase#load2KBFactBase(java.io%.File)","java.util%.HashSet<LSDFact>#add(edu.washington.cs.lsd.rule%.LSDFact)").
added_calls("edu.washington.cs.lsd.factbase%.LSDFactBase#load2KBFactBase(java.io%.File)","java.util%.Iterator<LSDFact>#hasNext()").
added_calls("edu.washington.cs.lsd.factbase%.LSDFactBase#load2KBFactBase(java.io%.File)","java.util%.Iterator<LSDFact>#next()").
added_calls("edu.washington.cs.lsd.factbase%.LSDFactBase#loadDeltaKBFactBase(java.io%.File)","edu.washington.cs.lsd.factbase%.LSDFactBase#resetWinnowing()").
added_calls("edu.washington.cs.lsd.factbase%.LSDFactBase#loadDeltaKBFactBase(java.io%.File)","edu.washington.cs.lsd.rule.io%.LSDTyrubaFactReader#<init>(java.io%.File)").
added_calls("edu.washington.cs.lsd.factbase%.LSDFactBase#loadDeltaKBFactBase(java.io%.File)","edu.washington.cs.lsd.rule.io%.LSDTyrubaFactReader#getFacts()").
added_calls("edu.washington.cs.lsd.factbase%.LSDFactBase#loadDeltaKBFactBase(java.io%.File)","edu.washington.cs.lsd.rule.io%.LSDTyrubaRuleChecker#loadAdditionalDB(java.io%.File)").
added_calls("edu.washington.cs.lsd.factbase%.LSDFactBase#loadDeltaKBFactBase(java.io%.File)","java.io%.File#exists()").
added_calls("edu.washington.cs.lsd.factbase%.LSDFactBase#loadDeltaKBFactBase(java.io%.File)","java.io%.FileNotFoundException#<init>()").
added_calls("edu.washington.cs.lsd.factbase%.LSDFactBase#loadDeltaKBFactBase(java.io%.File)","java.util%.AbstractList<LSDFact>#iterator()").
added_calls("edu.washington.cs.lsd.factbase%.LSDFactBase#loadDeltaKBFactBase(java.io%.File)","java.util%.HashSet<LSDFact>#add(edu.washington.cs.lsd.rule%.LSDFact)").
added_calls("edu.washington.cs.lsd.factbase%.LSDFactBase#loadDeltaKBFactBase(java.io%.File)","java.util%.Iterator<LSDFact>#hasNext()").
added_calls("edu.washington.cs.lsd.factbase%.LSDFactBase#loadDeltaKBFactBase(java.io%.File)","java.util%.Iterator<LSDFact>#next()").
added_calls("edu.washington.cs.lsd.factbase%.LSDFactBase#loadWinnowingRules(java.util%.ArrayList<LSDRule>)","edu.washington.cs.lsd.factbase%.LSDFactBase#resetWinnowing()").
added_calls("edu.washington.cs.lsd.factbase%.LSDFactBase#loadWinnowingRules(java.util%.ArrayList<LSDRule>)","java.util%.ArrayList<LSDRule>#addAll(java.util%.Collection<? extends LSDRule>)").
added_calls("edu.washington.cs.lsd.factbase%.LSDFactBase#main(java.lang%.String[])","edu.washington.cs.lsd.factbase%.LSDFactBase#<init>()").
added_calls("edu.washington.cs.lsd.factbase%.LSDFactBase#main(java.lang%.String[])","edu.washington.cs.lsd.factbase%.LSDFactBase#getRelevantFacts(edu.washington.cs.lsd.rule%.LSDRule)").
added_calls("edu.washington.cs.lsd.factbase%.LSDFactBase#main(java.lang%.String[])","edu.washington.cs.lsd.factbase%.LSDFactBase#load2KBFactBase(java.io%.File)").
added_calls("edu.washington.cs.lsd.factbase%.LSDFactBase#main(java.lang%.String[])","edu.washington.cs.lsd.factbase%.LSDFactBase#loadDeltaKBFactBase(java.io%.File)").
added_calls("edu.washington.cs.lsd.factbase%.LSDFactBase#main(java.lang%.String[])","edu.washington.cs.lsd.factbase%.LSDFactBase#loadWinnowingRules(java.util%.ArrayList<LSDRule>)").
added_calls("edu.washington.cs.lsd.factbase%.LSDFactBase#main(java.lang%.String[])","edu.washington.cs.lsd.factbase%.LSDFactBase#winnow()").
added_calls("edu.washington.cs.lsd.factbase%.LSDFactBase#main(java.lang%.String[])","edu.washington.cs.lsd.rule.io%.LSDAlchemyRuleReader#<init>(java.io%.File)").
added_calls("edu.washington.cs.lsd.factbase%.LSDFactBase#main(java.lang%.String[])","edu.washington.cs.lsd.rule.io%.LSDAlchemyRuleReader#getRules()").
added_calls("edu.washington.cs.lsd.factbase%.LSDFactBase#main(java.lang%.String[])","java.io%.File#<init>(java.lang%.String)").
added_calls("edu.washington.cs.lsd.factbase%.LSDFactBase#main(java.lang%.String[])","java.io%.PrintStream#flush()").
added_calls("edu.washington.cs.lsd.factbase%.LSDFactBase#main(java.lang%.String[])","java.io%.PrintStream#println(java.lang%.String)").
added_calls("edu.washington.cs.lsd.factbase%.LSDFactBase#main(java.lang%.String[])","java.lang%.System#exit(int)").
added_calls("edu.washington.cs.lsd.factbase%.LSDFactBase#main(java.lang%.String[])","java.lang%.Throwable#getMessage()").
added_calls("edu.washington.cs.lsd.factbase%.LSDFactBase#main(java.lang%.String[])","java.lang%.Throwable#printStackTrace()").
added_calls("edu.washington.cs.lsd.factbase%.LSDFactBase#main(java.lang%.String[])","java.util%.AbstractList<LSDRule>#iterator()").
added_calls("edu.washington.cs.lsd.factbase%.LSDFactBase#main(java.lang%.String[])","java.util%.ArrayList<LSDRule>#<init>()").
added_calls("edu.washington.cs.lsd.factbase%.LSDFactBase#main(java.lang%.String[])","java.util%.Iterator<LSDFact>#hasNext()").
added_calls("edu.washington.cs.lsd.factbase%.LSDFactBase#main(java.lang%.String[])","java.util%.Iterator<LSDFact>#next()").
added_calls("edu.washington.cs.lsd.factbase%.LSDFactBase#main(java.lang%.String[])","java.util%.Iterator<LSDRule>#hasNext()").
added_calls("edu.washington.cs.lsd.factbase%.LSDFactBase#main(java.lang%.String[])","java.util%.Iterator<LSDRule>#next()").
added_calls("edu.washington.cs.lsd.factbase%.LSDFactBase#main(java.lang%.String[])","java.util%.List<LSDFact>#iterator()").
added_calls("edu.washington.cs.lsd.factbase%.LSDFactBase#main(java.lang%.String[])","tyRuBa.parser%.ParseException#getMessage()").
added_calls("edu.washington.cs.lsd.factbase%.LSDFactBase#winnow()","edu.washington.cs.lsd.rule%.LSDFact#nonNegatedCopy()").
added_calls("edu.washington.cs.lsd.factbase%.LSDFactBase#winnow()","edu.washington.cs.lsd.rule%.LSDRule#getLiterals()").
added_calls("edu.washington.cs.lsd.factbase%.LSDFactBase#winnow()","edu.washington.cs.lsd.rule.io%.LSDTyrubaRuleChecker#getCounterExamples(edu.washington.cs.lsd.rule%.LSDRule)").
added_calls("edu.washington.cs.lsd.factbase%.LSDFactBase#winnow()","edu.washington.cs.lsd.rule.io%.LSDTyrubaRuleChecker#getTrueConclusions(edu.washington.cs.lsd.rule%.LSDRule)").
added_calls("edu.washington.cs.lsd.factbase%.LSDFactBase#winnow()","java.io%.PrintStream#println(java.lang%.String)").
added_calls("edu.washington.cs.lsd.factbase%.LSDFactBase#winnow()","java.util%.AbstractList<LSDLiteral>#iterator()").
added_calls("edu.washington.cs.lsd.factbase%.LSDFactBase#winnow()","java.util%.AbstractList<LSDRule>#iterator()").
added_calls("edu.washington.cs.lsd.factbase%.LSDFactBase#winnow()","java.util%.ArrayList<LSDFact>#<init>()").
added_calls("edu.washington.cs.lsd.factbase%.LSDFactBase#winnow()","java.util%.ArrayList<LSDFact>#add(edu.washington.cs.lsd.rule%.LSDFact)").
added_calls("edu.washington.cs.lsd.factbase%.LSDFactBase#winnow()","java.util%.ArrayList<LSDRule>#isEmpty()").
added_calls("edu.washington.cs.lsd.factbase%.LSDFactBase#winnow()","java.util%.HashMap<LSDRule,List<LSDFact>>#<init>()").
added_calls("edu.washington.cs.lsd.factbase%.LSDFactBase#winnow()","java.util%.HashMap<LSDRule,List<LSDFact>>#put(edu.washington.cs.lsd.rule%.LSDRule,java.util%.List<LSDFact>)").
added_calls("edu.washington.cs.lsd.factbase%.LSDFactBase#winnow()","java.util%.HashSet<LSDFact>#<init>()").
added_calls("edu.washington.cs.lsd.factbase%.LSDFactBase#winnow()","java.util%.HashSet<LSDFact>#add(edu.washington.cs.lsd.rule%.LSDFact)").
added_calls("edu.washington.cs.lsd.factbase%.LSDFactBase#winnow()","java.util%.HashSet<LSDFact>#contains(java.lang%.Object)").
added_calls("edu.washington.cs.lsd.factbase%.LSDFactBase#winnow()","java.util%.Iterator<LSDLiteral>#hasNext()").
added_calls("edu.washington.cs.lsd.factbase%.LSDFactBase#winnow()","java.util%.Iterator<LSDLiteral>#next()").
added_calls("edu.washington.cs.lsd.factbase%.LSDFactBase#winnow()","java.util%.Iterator<LSDRule>#hasNext()").
added_calls("edu.washington.cs.lsd.factbase%.LSDFactBase#winnow()","java.util%.Iterator<LSDRule>#next()").
added_calls("edu.washington.cs.lsd.rule%.LSDRule#getAntecedents()","edu.washington.cs.lsd.rule%.LSDLiteral#isNegated()").
added_calls("edu.washington.cs.lsd.rule%.LSDRule#getAntecedents()","edu.washington.cs.lsd.rule%.LSDRule#<init>()").
added_calls("edu.washington.cs.lsd.rule%.LSDRule#getAntecedents()","edu.washington.cs.lsd.rule%.LSDRule#addLiteral(edu.washington.cs.lsd.rule%.LSDLiteral)").
added_calls("edu.washington.cs.lsd.rule%.LSDRule#getAntecedents()","java.util%.AbstractList<LSDLiteral>#iterator()").
added_calls("edu.washington.cs.lsd.rule%.LSDRule#getAntecedents()","java.util%.Iterator<LSDLiteral>#hasNext()").
added_calls("edu.washington.cs.lsd.rule%.LSDRule#getAntecedents()","java.util%.Iterator<LSDLiteral>#next()").
added_calls("edu.washington.cs.lsd.rule%.LSDRule#getConclusions()","edu.washington.cs.lsd.rule%.LSDLiteral#isNegated()").
added_calls("edu.washington.cs.lsd.rule%.LSDRule#getConclusions()","edu.washington.cs.lsd.rule%.LSDRule#<init>()").
added_calls("edu.washington.cs.lsd.rule%.LSDRule#getConclusions()","edu.washington.cs.lsd.rule%.LSDRule#addLiteral(edu.washington.cs.lsd.rule%.LSDLiteral)").
added_calls("edu.washington.cs.lsd.rule%.LSDRule#getConclusions()","java.util%.AbstractList<LSDLiteral>#iterator()").
added_calls("edu.washington.cs.lsd.rule%.LSDRule#getConclusions()","java.util%.Iterator<LSDLiteral>#hasNext()").
added_calls("edu.washington.cs.lsd.rule%.LSDRule#getConclusions()","java.util%.Iterator<LSDLiteral>#next()").
added_calls("edu.washington.cs.lsd.rule.io%.LSDTyrubaRuleChecker#getCounterExamples(edu.washington.cs.lsd.rule%.LSDRule)","edu.washington.cs.lsd.rule.io%.LSDTyrubaRuleChecker#invokeQuery(edu.washington.cs.lsd.rule%.LSDRule,boolean)").
added_calls("edu.washington.cs.lsd.rule.io%.LSDTyrubaRuleChecker#getTrueConclusions(edu.washington.cs.lsd.rule%.LSDRule)","edu.washington.cs.lsd.rule.io%.LSDTyrubaRuleChecker#invokeQuery(edu.washington.cs.lsd.rule%.LSDRule,boolean)").
added_calls("edu.washington.cs.lsd.rule.io%.LSDTyrubaRuleChecker#invokeQuery(edu.washington.cs.lsd.rule%.LSDRule,boolean)","edu.washington.cs.lsd.rule%.LSDRule#getAntecedents()").
added_calls("edu.washington.cs.lsd.rule.io%.LSDTyrubaRuleChecker#invokeQuery(edu.washington.cs.lsd.rule%.LSDRule,boolean)","edu.washington.cs.lsd.rule%.LSDRule#getConclusions()").
added_calls("edu.washington.cs.lsd.rule.io%.LSDTyrubaRuleChecker#invokeQuery(edu.washington.cs.lsd.rule%.LSDRule,boolean)","java.util%.Set<RBVariable>#iterator()").
added_calls("edu.washington.cs.lsd.rule.io%.LSDTyrubaRuleChecker#main(java.lang%.String[])","edu.washington.cs.lsd.rule.io%.LSDTyrubaRuleChecker#getCounterExamples(edu.washington.cs.lsd.rule%.LSDRule)").
added_field("edu.washington.cs.lsd.factbase%.LSDFactBase#deltaKB","deltaKB","edu.washington.cs.lsd.factbase%.LSDFactBase").
added_field("edu.washington.cs.lsd.factbase%.LSDFactBase#facts2KB","facts2KB","edu.washington.cs.lsd.factbase%.LSDFactBase").
added_field("edu.washington.cs.lsd.factbase%.LSDFactBase#factsDeltaKB","factsDeltaKB","edu.washington.cs.lsd.factbase%.LSDFactBase").
added_field("edu.washington.cs.lsd.factbase%.LSDFactBase#matched","matched","edu.washington.cs.lsd.factbase%.LSDFactBase").
added_field("edu.washington.cs.lsd.factbase%.LSDFactBase#ruleMatches","ruleMatches","edu.washington.cs.lsd.factbase%.LSDFactBase").
added_field("edu.washington.cs.lsd.factbase%.LSDFactBase#trb","trb","edu.washington.cs.lsd.factbase%.LSDFactBase").
added_field("edu.washington.cs.lsd.factbase%.LSDFactBase#twoKB","twoKB","edu.washington.cs.lsd.factbase%.LSDFactBase").
added_field("edu.washington.cs.lsd.factbase%.LSDFactBase#winnowed","winnowed","edu.washington.cs.lsd.factbase%.LSDFactBase").
added_field("edu.washington.cs.lsd.factbase%.LSDFactBase#winnowingRules","winnowingRules","edu.washington.cs.lsd.factbase%.LSDFactBase").
added_fieldoftype("edu.washington.cs.lsd.factbase%.LSDFactBase#deltaKB","boolean").
added_fieldoftype("edu.washington.cs.lsd.factbase%.LSDFactBase#facts2KB","java.util%.LinkedHashSet<LSDFact>").
added_fieldoftype("edu.washington.cs.lsd.factbase%.LSDFactBase#factsDeltaKB","java.util%.LinkedHashSet<LSDFact>").
added_fieldoftype("edu.washington.cs.lsd.factbase%.LSDFactBase#matched","java.util%.HashSet<LSDFact>").
added_fieldoftype("edu.washington.cs.lsd.factbase%.LSDFactBase#ruleMatches","java.util%.HashMap<LSDRule,List<LSDFact>>").
added_fieldoftype("edu.washington.cs.lsd.factbase%.LSDFactBase#trb","edu.washington.cs.lsd.rule.io%.LSDTyrubaRuleChecker").
added_fieldoftype("edu.washington.cs.lsd.factbase%.LSDFactBase#twoKB","boolean").
added_fieldoftype("edu.washington.cs.lsd.factbase%.LSDFactBase#winnowed","boolean").
added_fieldoftype("edu.washington.cs.lsd.factbase%.LSDFactBase#winnowingRules","java.util%.ArrayList<LSDRule>").
added_method("edu.washington.cs.lsd.factbase%.LSDFactBase#<init>()","<init>()","edu.washington.cs.lsd.factbase%.LSDFactBase").
added_method("edu.washington.cs.lsd.factbase%.LSDFactBase#getRelevantFacts(edu.washington.cs.lsd.rule%.LSDRule)","getRelevantFacts(edu.washington.cs.lsd.rule%.LSDRule)","edu.washington.cs.lsd.factbase%.LSDFactBase").
added_method("edu.washington.cs.lsd.factbase%.LSDFactBase#getRemainingFacts(boolean)","getRemainingFacts(boolean)","edu.washington.cs.lsd.factbase%.LSDFactBase").
added_method("edu.washington.cs.lsd.factbase%.LSDFactBase#load2KBFactBase(java.io%.File)","load2KBFactBase(java.io%.File)","edu.washington.cs.lsd.factbase%.LSDFactBase").
added_method("edu.washington.cs.lsd.factbase%.LSDFactBase#loadDeltaKBFactBase(java.io%.File)","loadDeltaKBFactBase(java.io%.File)","edu.washington.cs.lsd.factbase%.LSDFactBase").
added_method("edu.washington.cs.lsd.factbase%.LSDFactBase#loadWinnowingRules(java.util%.ArrayList<LSDRule>)","loadWinnowingRules(java.util%.ArrayList<LSDRule>)","edu.washington.cs.lsd.factbase%.LSDFactBase").
added_method("edu.washington.cs.lsd.factbase%.LSDFactBase#main(java.lang%.String[])","main(java.lang%.String[])","edu.washington.cs.lsd.factbase%.LSDFactBase").
added_method("edu.washington.cs.lsd.factbase%.LSDFactBase#resetWinnowing()","resetWinnowing()","edu.washington.cs.lsd.factbase%.LSDFactBase").
added_method("edu.washington.cs.lsd.factbase%.LSDFactBase#winnow()","winnow()","edu.washington.cs.lsd.factbase%.LSDFactBase").
added_method("edu.washington.cs.lsd.rule%.LSDRule#getAntecedents()","getAntecedents()","edu.washington.cs.lsd.rule%.LSDRule").
added_method("edu.washington.cs.lsd.rule%.LSDRule#getConclusions()","getConclusions()","edu.washington.cs.lsd.rule%.LSDRule").
added_method("edu.washington.cs.lsd.rule.io%.LSDTyrubaRuleChecker#getCounterExamples(edu.washington.cs.lsd.rule%.LSDRule)","getCounterExamples(edu.washington.cs.lsd.rule%.LSDRule)","edu.washington.cs.lsd.rule.io%.LSDTyrubaRuleChecker").
added_method("edu.washington.cs.lsd.rule.io%.LSDTyrubaRuleChecker#getTrueConclusions(edu.washington.cs.lsd.rule%.LSDRule)","getTrueConclusions(edu.washington.cs.lsd.rule%.LSDRule)","edu.washington.cs.lsd.rule.io%.LSDTyrubaRuleChecker").
added_package("edu.washington.cs.lsd.factbase").
added_return("edu.washington.cs.lsd.factbase%.LSDFactBase#<init>()","void").
added_return("edu.washington.cs.lsd.factbase%.LSDFactBase#getRelevantFacts(edu.washington.cs.lsd.rule%.LSDRule)","java.util%.List<LSDFact>").
added_return("edu.washington.cs.lsd.factbase%.LSDFactBase#getRemainingFacts(boolean)","java.util%.List<LSDFact>").
added_return("edu.washington.cs.lsd.factbase%.LSDFactBase#load2KBFactBase(java.io%.File)","void").
added_return("edu.washington.cs.lsd.factbase%.LSDFactBase#loadDeltaKBFactBase(java.io%.File)","void").
added_return("edu.washington.cs.lsd.factbase%.LSDFactBase#loadWinnowingRules(java.util%.ArrayList<LSDRule>)","void").
added_return("edu.washington.cs.lsd.factbase%.LSDFactBase#main(java.lang%.String[])","void").
added_return("edu.washington.cs.lsd.factbase%.LSDFactBase#resetWinnowing()","void").
added_return("edu.washington.cs.lsd.factbase%.LSDFactBase#winnow()","void").
added_return("edu.washington.cs.lsd.rule%.LSDRule#getAntecedents()","edu.washington.cs.lsd.rule%.LSDRule").
added_return("edu.washington.cs.lsd.rule%.LSDRule#getConclusions()","edu.washington.cs.lsd.rule%.LSDRule").
added_return("edu.washington.cs.lsd.rule.io%.LSDTyrubaRuleChecker#getCounterExamples(edu.washington.cs.lsd.rule%.LSDRule)","java.util%.ArrayList<LSDRule>").
added_return("edu.washington.cs.lsd.rule.io%.LSDTyrubaRuleChecker#getTrueConclusions(edu.washington.cs.lsd.rule%.LSDRule)","java.util%.ArrayList<LSDRule>").
added_subtype("java.lang%.Object","edu.washington.cs.lsd.factbase%.LSDFactBase").
added_type("edu.washington.cs.lsd.factbase%.LSDFactBase","LSDFactBase","edu.washington.cs.lsd.factbase").
